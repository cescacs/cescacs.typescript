!function(e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):("undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this).cescacs=e()}(function(){return function o(n,s,r){function l(i,e){if(!s[i]){if(!n[i]){var t="function"==typeof require&&require;if(!e&&t)return t(i,!0);if(a)return a(i,!0);throw(e=new Error("Cannot find module '"+i+"'")).code="MODULE_NOT_FOUND",e}t=s[i]={exports:{}},n[i][0].call(t.exports,function(e){return l(n[i][1][e]||e)},t,t.exports,o,n,s,r)}return s[i].exports}for(var a="function"==typeof require&&require,e=0;e<r.length;e++)l(r[e]);return l}({1:[function(e,i,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Game=t.Board=t.EnPassantCapturable=t.ScornfulCapturable=t.PawnSpecialCaptureStatus=t.round2hundredths=t.cspty=t.PositionHelper=void 0;const p=e("./ts.general"),W=(Object.defineProperty(t,"round2hundredths",{enumerable:!0,get:function(){return p.round2hundredths}}),e("./cescacs.types")),E=e("./cescacs.positionHelper"),y=(Object.defineProperty(t,"PositionHelper",{enumerable:!0,get:function(){return E.PositionHelper}}),e("./cescacs.piece")),b=(Object.defineProperty(t,"cspty",{enumerable:!0,get:function(){return y.csPieceTypes}}),e("./cescacs.piece"));class s{constructor(e){this._capturablePiece=e}static parse(e,i){if(null!=i&&0<i.length&&"-"!=i){if(4<=i.length){const s=i.split("@");s.length=2;var t=E.PositionHelper.parse(s[0]);if(s[1].includes(",")||!isNaN(Number(s[1]))){i=e.getPiece(t);if(null!=i&&y.csPieceTypes.isPawn(i)){var o=s[1].split(",");if(1<=o.length&&o.length<=2){let e=[];for(const r of o){var n=Number(r);if(isNaN(n)||!W.csTypes.isLine(n))throw new TypeError("Invalid en passant capture line value");e.push(E.PositionHelper.fromBoardPosition(t[0],n,!0))}return new g(i,e)}throw new TypeError("Missing or invalid en passant capture lines")}throw new Error(E.PositionHelper.toString(t)+" doesn't have a pawn")}o=E.PositionHelper.parse(s[1]),i=e.getPiece(o);if(null!=i&&y.csPieceTypes.isPawn(i))return new u(i,t);throw new Error(E.PositionHelper.toString(o)+" doesn't have a pawn")}throw new TypeError("Too short special pawn capture status string")}return null}isScornfulCapturable(){return"scornful"==this.specialCaptureType}isEnPassantCapturable(){return"enPassant"==this.specialCaptureType}get capturablePiece(){return this._capturablePiece}get capturablePawn(){return(0,p.assertCondition)(y.csPieceTypes.isPawn(this._capturablePiece)),this._capturablePiece}}class u extends(t.PawnSpecialCaptureStatus=s){constructor(e,i){super(e),this.specialCaptureType="scornful",this._capturerPawnPos=i}static promoteCapturablePawn(e,i){return new u(i,e._capturerPawnPos)}isScorned(e,i){e=null!=e.position&&E.PositionHelper.equals(e.position,this._capturerPawnPos);return null==i?e:e&&E.PositionHelper.equals(i,this.capturablePiece.position)}get scornfulCaptureDirection(){var e=this._capturerPawnPos[0],i=this.capturablePiece.position,t=i[0];return i[1]>this._capturerPawnPos[1]?e<t?"FileUp":"FileInvUp":e<t?"FileDown":"FileInvDown"}toString(){return E.PositionHelper.toString(this._capturerPawnPos)+"@"+E.PositionHelper.toString(this.capturablePiece.position)}}t.ScornfulCapturable=u;class g extends s{constructor(e,i){super(e),this.specialCaptureType="enPassant",this._captureTo=i}static promoteCapturablePawn(e,i){return new g(i,e._captureTo)}isEnPassantCapture(i,e){var t=this._captureTo.some(e=>E.PositionHelper.equals(e,i));return null==e?t:!(!t||null==e.position)&&(t=e.position,1==Math.abs(i[0]-t[0])&&("White"==e.color?i[1]-t[1]==3:t[1]-i[1]==3))}toString(){return E.PositionHelper.toString(this.capturablePiece.position)+"@"+this.captureLines()}captureLines(){const i=this._captureTo;if(0<i.length&&i.length<=2){let e=i[0][1].toString();return 1<i.length&&(e+=","+i[1][1].toString()),e}throw new Error("Invalid en passant capture positions set")}}t.EnPassantCapturable=g;class P{constructor(e,i){this.wPositions=[0,0,0,0,0,0,0,0],this.bPositions=[0,0,0,0,0,0,0,0],this.wThreats=[0,0,0,0,0,0,0,0],this.bThreats=[0,0,0,0,0,0,0,0],this.wPieces=new Map,this.bPieces=new Map,this._regainablePieces=[],this.wKing=new b.King("White"),this.bKing=new b.King("Black"),this._specialPawnCapture=null,this._currentHeuristic=P.newHeuristic(),this._wAwaitingPromotion=!1,this._bAwaitingPromotion=!1,this._anyMove=!0,this._grand=e,this._turn=null!=i?i:"w"}static newHeuristic(){return{pieces:[0,0],space:[0,0],positioning:0,mobility:0,king:0}}static splitCastlingStatus(o){if(null!=o&&0<o.length){let e,i,t=0;for(;t<o.length&&o[t].toUpperCase()==o[t];)t++;if(i=(i=0==t?(e="-",o):t==o.length?(e=o,"-"):(e=o.slice(0,t),o.slice(t))).toUpperCase(),W.csTypes.isCastlingStatus(e)&&W.csTypes.isCastlingStatus(i))return[e,i];throw new TypeError("Invalid TLPD issued castling status "+o)}return["RKR","RKR"]}static lineMask(e){return 1<<e}get isGrand(){return this._grand}get turn(){return this._turn}get isAwaitingPromotion(){return"w"==this._turn?this._wAwaitingPromotion:this._bAwaitingPromotion}set isAwaitingPromotion(e){"w"==this._turn?this._wAwaitingPromotion=e:this._bAwaitingPromotion=e}get specialPawnCapture(){return this._specialPawnCapture}set specialPawnCapture(e){this._specialPawnCapture=e}get anyMove(){return this._anyMove}get checked(){return this.currentKing.checked}get isKnightOrCloseCheck(){return this.currentKing.isKnightOrCloseCheck()}get isSingleCheck(){return this.currentKing.isSingleCheck()}get isDoubleCheck(){return this.currentKing.isDoubleCheck()}get currentHeuristic(){return this._currentHeuristic}*whitePieces(){for(const e of this.wPieces.values())yield e}*blackPieces(){for(const e of this.bPieces.values())yield e}*whitePiecePositions(){for(const e of this.wPieces.values())yield e.position}*blackPiecePositions(){for(const e of this.bPieces.values())yield e.position}get currentKing(){return"w"===this.turn?this.wKing:this.bKing}hasPiece(e){var i=e[0]+1>>>1,e=P.lineMask(e[1]);return 0!=(this.wPositions[i]&e)?"White":0!=(this.bPositions[i]&e)?"Black":null}getHexPiece(e){e=E.PositionHelper.parse(e);return null==e?null:this.getPiece(e)}getPiece(e){var i=this.hasPiece(e);return null==i?null:("White"==i?this.wPieces:this.bPieces).get(E.PositionHelper.positionKey(e))}hasThreat(e,i){var t=e[0]+1>>>1;return 0!=(("White"==i?this.wThreats:this.bThreats)[t]&P.lineMask(e[1]))}isThreated(e,i){var t=e[0]+1>>>1;return 0!=(("White"==i?this.bThreats:this.wThreats)[t]&P.lineMask(e[1]))}setThreat(e,i){var t=e[0]+1>>>1;("White"==i?this.wThreats:this.bThreats)[t]|=P.lineMask(e[1])}hasRegainablePieces(t){const o="w"==this._turn?"White":"Black";return this._regainablePieces.reduce((e,i)=>e||i.color==o&&(!y.csPieceTypes.isBishop(i)||i.hexesColor==t),!1)}maxRegainablePiecesValue(t){const o="w"==this._turn?"White":"Black";return this._regainablePieces.reduce((e,i)=>i.value>e&&i.color==o&&(!y.csPieceTypes.isBishop(i)||i.hexesColor==t)?i.value:e,0)}currentRegainablePieceNames(t){const o="w"==this._turn?"White":"Black";return this._regainablePieces.reduce((e,i)=>i.color!=o||y.csPieceTypes.isBishop(i)&&i.hexesColor!=t?e:e.add(i.symbol),new Set)}*pieceMoves(e){const i=this.currentKing;var t;!i.checked||"K"==e.symbol?yield*e.moves(this):(null!=(t=i.checkThreat)&&e.canCaptureOn(this,t)&&(yield t),i.isSingleCheck()&&(yield*e.blockThreat(this,i.getSingleCheckBlockingPositions(this))))}addPiece(e){(0,p.assertNonNullish)(e.position,e.symbol+" position");var i=e.position;const t="White"==e.color?this.wPieces:this.bPieces;t.set(E.PositionHelper.positionKey(i),e);var o=i[0]+1>>>1,i=P.lineMask(i[1]);const n="White"==e.color?this.wPositions:this.bPositions;n[o]|=i}capturePiece(e){(0,p.assertNonNullish)(e.position,e.symbol+" position");var i=e.position,t=i[0]+1>>>1,o=P.lineMask(i[1]);const n="White"==e.color?this.wPositions:this.bPositions,s=(n[t]&=~o,"White"==e.color?this.wPieces:this.bPieces);s.delete(E.PositionHelper.positionKey(i)),e.captured(),e.isRegainable&&this._regainablePieces.push(e)}movePiece(e,i,t){(0,p.assertNonNullish)(e.position,e.symbol+" position");var o=e.position,n=o[0]+1>>>1,s=P.lineMask(o[1]);const r="White"==e.color?this.wPieces:this.bPieces;let l=null,a=null;y.csPieceTypes.isPawn(e)&&(e.position[0]!=i?null!=(c=this.getPiece([e.position[0],t>e.position[1]?e.position[1]+2:e.position[1]-2]))&&y.csPieceTypes.isPawn(c)&&(l=c):2<Math.abs(t-e.position[1])&&(a=[],t>e.position[1]?(a.push([i,e.position[1]+2]),t>e.position[1]+4&&a.push([i,e.position[1]+4])):(a.push([i,e.position[1]-2]),t<e.position[1]-4&&a.push([i,e.position[1]-4]))),E.PositionHelper.isPromotionPos(i,t,e.color)&&("White"==e.color?this._wAwaitingPromotion=!0:this._bAwaitingPromotion=!0)),r.delete(E.PositionHelper.positionKey(o)),e.moveTo(i,t),r.set(E.PositionHelper.positionKey(o),e);var c=o[0]+1>>>1,i=P.lineMask(o[1]);const h="White"==e.color?this.wPositions:this.bPositions;h[n]&=~s,h[c]|=i,null!=l?this._specialPawnCapture=new u(e,l.position):null!=a?this._specialPawnCapture=new g(e,a):this._specialPawnCapture=null}promotePawn(e,i){if(this._regainablePieces.includes(i)){const t="White"==i.color?this.wPieces:this.bPieces;t.delete(E.PositionHelper.positionKey(e.position)),e.promoteTo(i),t.set(E.PositionHelper.positionKey(i.position),i),null!=this._specialPawnCapture&&this._specialPawnCapture.capturablePawn==e&&(this._specialPawnCapture.isScornfulCapturable()?this._specialPawnCapture=u.promoteCapturablePawn(this._specialPawnCapture,i):this._specialPawnCapture.isEnPassantCapturable()&&(this._specialPawnCapture=g.promoteCapturablePawn(this._specialPawnCapture,i)));e=this._regainablePieces.indexOf(i);this._regainablePieces.splice(e,1)}}addRegainablePiece(e){null==e.position&&this._regainablePieces.push(e)}currentRegainablePieces(t){const o="w"==this._turn?"White":"Black",n=this._regainablePieces;return n.filter((i,e)=>i.color==o&&(!y.csPieceTypes.isBishop(i)||i.hexesColor==t)&&e==n.findIndex(e=>e.color==o&&e.symbol==i.symbol&&(!y.csPieceTypes.isBishop(e)||e.hexesColor==t)))}resetGame(e){for(let e=0;e<8;e++)this.wPositions[e]=0,this.bPositions[e]=0,this.wThreats[e]=0,this.bThreats[e]=0;this.wPieces.clear(),this.bPieces.clear(),this._regainablePieces.length=0,this._specialPawnCapture=null,this._anyMove=!0,this._turn=e}prepareGame(){"w"==this._turn?this.prepareTurn(this.bKing):this.prepareTurn(this.wKing),this.prepareCurrentTurn()}nextTurn(){this._turn="w"===this._turn?"b":"w",this.clearThreats("w"===this._turn?"Black":"White"),this.clearPins("w"===this._turn?"White":"Black")}prepareCurrentTurn(){this.prepareTurn(this.currentKing),this.checkMoveableTurn()}prepareTurn(e){for(const i of("White"==e.color?this.bPieces:this.wPieces).values())i.markThreats(this);e.computeCheckAndPins(this)}checkMoveableTurn(){let e=!1;for(const i of("w"===this.turn?this.wPieces:this.bPieces).values()){const t=this.pieceMoves(i);if(t.next().done||(e=!0),t.return(),e)break}this._anyMove=e}getHeuristicValue(e){return(0,p.round2hundredths)(e.pieces[0]-e.pieces[1]+e.space[0]-e.space[1]+e.positioning+e.mobility+e.king)}computeHeuristic(e,i){function o(e){let i=0;for(;0<e;)i+=1&e,e>>>=1;return i}function t(e){let i=0;for(e>>>=1;0<e;)i+=1&e,e>>>=2;return i}const n="w"===e?this.wKing:this.bKing,s="w"==e?this.wPieces:this.bPieces,r="w"==e?this.bPieces:this.wPieces;var l,a="w"==e?"White":"Black",c="w"==e?this.wThreats:this.bThreats,h="w"==e?this.bThreats:this.wThreats,u="w"==e?31:31<<24,p="w"==e?31<<24:31,g="w"==e?this.bPositions:this.wPositions;let P=0,d=0,v=0,w=0,f=0,m=0,C=0,k=0,y=0;i.pieces[0]=0,i.pieces[1]=0,i.positioning=0,i.mobility=0,i.king=0;for(const K of s.values())K.markThreats(this);for(const O of s.values())if(null!=O.position){var b=this.hasThreat(O.position,a);if(i.pieces[0]+=O.value,"J"===O.symbol&&f++,this.isThreated(O.position,a)?k-=b?.75*O.value:O.value:b&&(k+=1-.0625*O.value),null==O.pin){for(const H of this.pieceMoves(O))i.mobility+=.01;if(O.hasOrthogonalAttack)for(var[T,D]of function*(t,e,o){for(const r of W.csConvert.orthogonalDirections()){const l=E.PositionHelper.orthogonalRide(e,r);let i=l.next();for(;0==i.done;){var n=t.getPiece(i.value);if(null==n)i=l.next();else{const a=E.PositionHelper.orthogonalRide(i.value,r);let e=a.next();for(;0==e.done;){var s=t.getPiece(e.value);e=null==s?l.next():(s.color!=o&&(yield[n,s]),a.return())}i=l.return()}}}}(this,O.position,a))T.color==a?T.value<=O.value&&O.value<D.value&&(T.hasOrthogonalAttack?k+=.25*(D.value-T.value):!b&&D.hasOrthogonalAttack||(k+=.0625*D.value)):T.value>O.value?k+=.25*(T.value-O.value):T.value<D.value&&!T.hasOrthogonalAttack&&D.value>O.value&&(k+=.25*T.value);if(O.hasDiagonalAttack)for(var[_,I]of function*(t,e,o){for(const r of W.csConvert.diagonalDirections()){const l=E.PositionHelper.diagonalRide(e,r);let i=l.next();for(;0==i.done;){var n=t.getPiece(i.value);if(null==n)i=l.next();else{const a=E.PositionHelper.diagonalRide(i.value,r);let e=a.next();for(;0==e.done;){var s=t.getPiece(e.value);e=null==s?l.next():(s.color!=o&&(yield[n,s]),a.return())}i=l.return()}}}}(this,O.position,a))_.color==a?_.value<=O.value&&O.value<I.value&&(_.hasDiagonalAttack?k+=.25*(I.value-_.value):!b&&I.hasDiagonalAttack||(k+=.0625*I.value)):_.value>O.value?k+=.25*(_.value-O.value):_.value<I.value&&!_.hasDiagonalAttack&&I.value>O.value&&(k+=.25*_.value)}else y-=O.value,i.king-=b?.2:.4}for(const M of r.values())null!=M.position&&(i.pieces[1]+=M.value,"J"===M.symbol&&m++,this.hasThreat(M.position,a)&&(k+=M.value),null!=M.pin&&(y+=M.value));for(let t=0;t<=7;t++){let e=g[t]&c[t]&~h[t],i=0;for(;0!=e;)1==(1&e)&&(l=(t<<1)-(i+1)%2,l=this.getPiece([l,i]),C+=l.value),e>>>=1,i++;P+=o(c[t]),d+=o(h[t])}v+=t(c[2]&~h[2]&u),w+=t(h[2]&~c[2]&p);for(let e=3;e<=5;e++)v+=o(c[e]&~h[e]&u),w+=o(h[e]&~c[e]&p);n.checked?this.anyMove?n.isDoubleCheck()?i.king-=30:n.isKnightOrCloseCheck()?i.king-=20:i.king-=15:i.king-=120:this.anyMove||(i.king-=6);for(const x of n.attemptMoves(this)){var S=this.hasPiece(x);this.isThreated(x,a)?i.king-=this.hasThreat(x,a)?.25:.5:null==S?i.king+=.1:i.king-=.05}return 2<=f&&(i.pieces[0]+=3==f?1:.5),2<=m&&(i.pieces[1]+=3==m?1:.5),i.space[0]=.01*P,i.space[1]=.01*d,i.positioning=.01*(v-w+k+y)+.125*C,i}clearThreats(e){const i="White"==e?this.wThreats:this.bThreats;for(let e=0;e<=7;e++)i[e]=0}clearPins(e){for(const i of("White"==e?this.wPieces:this.bPieces).values())i.pin=null}}class T extends(t.Board=P){constructor(e=!1,i){var t=null==i?void 0:i.split(" ");if(super(e,null==(null==t?void 0:t[1])||"w"!=t[1]&&"b"!=t[1]?"w":t[1]),this.pawnMoved=!1,this.pieceCaptured=!1,this._mate=!1,this._stalemate=!1,this._draw=!1,this._resigned=!1,this._enpassantCaptureCoordString=null,this._lastMove="",void 0===i){this.wKing.setToInitialPosition(),this.addPiece(this.wKing),this.bKing.setToInitialPosition(),this.addPiece(this.bKing);for(const o of T.fillDefaultPositions(e))this.addPiece(o);this.halfmoveClock=0,this.moveNumber=1}else{if(!(null!=t&&2<=t.length)||"w"!=t[1]&&"b"!=t[1])throw new Error("Piece positions and turn are mandatory parts of the TLPD string");var[i,e]=P.splitCastlingStatus(t[2]);if(this.restorePositions(t[0],i,e),this.halfmoveClock=W.csTypes.isNumber(Number(t[4]))?Number(t[4]):0,isNaN(Number(t[4]))&&null!=t[4]&&"-"!==t[4])throw new TypeError("Invalid halfmove clock value");if(this.moveNumber=W.csTypes.isNumber(Number(t[5]))?Number(t[5]):1,isNaN(Number(t[5]))&&null!=t[5]&&"-"!==t[5])throw new TypeError("Invalid move number");super.specialPawnCapture=s.parse(this,t[3])}this.initGame()}static kingCastlingPosition(e,i){var t="White"==e?E.PositionHelper.whiteKingInitPosition:E.PositionHelper.blackKingInitPosition,e=("White"==e?T.whiteKingCastleMove:T.blackKingCastleMove)[i];return E.PositionHelper.knightJump(t,e)}static createPiece(e,i,t,o){if(null!=t&&null!=o){var n=W.csConvert.columnFromIndex(t);switch(e){case"K":throw new Error("King must be created before setting it on the board (without position)");case"D":return new b.Queen(i,n,o);case"V":return new b.Wyvern(i,n,o);case"R":return new b.Rook(i,n,o);case"G":return new b.Pegasus(i,n,o);case"N":return new b.Knight(i,n,o);case"J":return new b.Bishop(i,n,o);case"E":return new b.Elephant(i,n,o);case"M":return new b.Almogaver(i,n,o);case"P":return new b.Pawn(i,n,o);default:throw new Error(e)}}else switch(e){case"K":return new b.King(i);case"D":return new b.Queen(i);case"V":return new b.Wyvern(i);case"R":return new b.Rook(i);case"G":return new b.Pegasus(i);case"N":return new b.Knight(i);case"J":throw new Error("Bishop needs position or HexColor to be created");case"E":return new b.Elephant(i);case"M":return new b.Almogaver(i);case"P":return new b.Pawn(i);default:throw new Error(e)}}static convertPieceAliases(e){switch(e){case"Q":return"D";case"W":return"V";case"T":return"R";case"C":case"S":return"N";case"A":case"B":case"F":case"L":return"J";default:if(W.csTypes.isPieceName(e))return e;throw new TypeError("Invalid piece symbol "+e)}}static fillDefaultPositions(e=!1){const i=[];return i.push(new b.Queen("White","E",1),new b.Wyvern("White","F",0)),i.push(new b.Pegasus("White","D",2),new b.Bishop("White","F",2),new b.Pegasus("White","H",2)),e?(i.push(new b.Pawn("White","B",6),new b.Rook("White","B",4),new b.Knight("White","C",3)),i.push(new b.Knight("White","I",3),new b.Rook("White","K",4),new b.Pawn("White","K",6)),i.push(new b.Pawn("White","P",7),new b.Pawn("White","T",8),new b.Pawn("White","X",8),new b.Pawn("White","Z",7)),i.push(new b.Almogaver("White","C",7),new b.Almogaver("White","A",7),new b.Almogaver("White","L",7),new b.Almogaver("White","I",7))):i.push(new b.Pawn("White","B",4),new b.Rook("White","C",3),new b.Rook("White","I",3),new b.Pawn("White","K",4)),i.push(new b.Knight("White","E",3),new b.Knight("White","G",3)),i.push(new b.Elephant("White","D",4),new b.Bishop("White","F",4),new b.Elephant("White","H",4)),i.push(new b.Pawn("White","A",5),new b.Pawn("White","C",5),new b.Elephant("White","E",5),new b.Elephant("White","G",5),new b.Pawn("White","I",5),new b.Pawn("White","L",5)),i.push(new b.Pawn("White","D",6),new b.Bishop("White","F",6),new b.Pawn("White","H",6)),i.push(new b.Pawn("White","E",7),new b.Pawn("White","F",8),new b.Pawn("White","G",7)),i.push(new b.Queen("Black","E",27),new b.Wyvern("Black","F",28)),i.push(new b.Pegasus("Black","D",26),new b.Bishop("Black","F",26),new b.Pegasus("Black","H",26)),e?(i.push(new b.Pawn("Black","B",22),new b.Rook("Black","B",24),new b.Knight("Black","C",25)),i.push(new b.Knight("Black","I",25),new b.Rook("Black","K",24),new b.Pawn("Black","K",22)),i.push(new b.Pawn("Black","P",21),new b.Pawn("Black","T",20),new b.Pawn("Black","X",20),new b.Pawn("Black","Z",21)),i.push(new b.Almogaver("Black","C",21),new b.Almogaver("Black","A",21),new b.Almogaver("Black","I",21),new b.Almogaver("Black","L",21))):i.push(new b.Pawn("Black","B",24),new b.Rook("Black","C",25),new b.Rook("Black","I",25),new b.Pawn("Black","K",24)),i.push(new b.Knight("Black","E",25),new b.Knight("Black","G",25)),i.push(new b.Elephant("Black","D",24),new b.Bishop("Black","F",24),new b.Elephant("Black","H",24)),i.push(new b.Pawn("Black","A",23),new b.Pawn("Black","C",23),new b.Elephant("Black","E",23),new b.Elephant("Black","G",23),new b.Pawn("Black","I",23),new b.Pawn("Black","L",23)),i.push(new b.Pawn("Black","D",22),new b.Bishop("Black","F",22),new b.Pawn("Black","H",22)),i.push(new b.Pawn("Black","E",21),new b.Pawn("Black","F",20),new b.Pawn("Black","G",21)),i}static rookCastleMove(e,i,t,o,n){return"K"==o?"K"==i?n?"White"==t?"ColumnUp":"ColumnDown":"White"==t?"FileUp":"FileDown":"I"==i?n?"White"==t?"FileInvDown":"FileInvUp":"White"==t?"ColumnUp":"ColumnDown":"White"==t?"FileInvUp":"FileInvDown":"E"==i&&"D"==e?"White"==t?"FileDown":"FileUp":"White"==t?"FileUp":"FileDown"}get gameEnd(){return this._mate||this._resigned||this._stalemate||this._draw}get mate(){return this._mate}get stalemate(){return this._stalemate}set draw(e){this._draw=e}get draw(){return this._draw}set resign(e){this._resigned=e}get resigned(){return this._resigned}get lastMove(){return this._lastMove}get enPassantCaptureCoordString(){return this._enpassantCaptureCoordString}get resultString(){if(this.gameEnd){if(this._mate||this._resigned)return"w"==this.turn?"0 - 3":"3 - 0";if(this._stalemate)return"w"==this.turn?"1 - 2":"2 - 1";if(this._draw)return"1 - 1";throw new Error("End game exhaustiveCheck fail")}return null}set resultString(e){if(null!=e&&0<e.length)if(this.gameEnd){if(e!=this.resultString)throw new Error(`Incorrect end game value issued: ${e} correct value `+this.resultString)}else switch(e){case"0 - 3":if("w"!=this.turn)throw new Error("Incorrect resign turn: "+e);this.resign=!0;break;case"3 - 0":if("b"!=this.turn)throw new Error("Incorrect resign turn: "+e);this.resign=!0;break;case"1 - 1":this.draw=!0;break;case"null":break;default:throw new Error("Incorrect end game value issued: "+e)}}get preMoveHeuristic(){return this.currentHeuristic}doMove(e,i){try{var t,o,n=E.PositionHelper.parse(e),s=E.PositionHelper.parse(i),r=this.getPiece(n);null!=r?(t=this.movePieceTo(r,s),o="P"!==r.symbol?r.symbol:void 0,this.setLastMove(o,e,t,i),this.forwardingTurn()):(console.log("empty piece at "+E.PositionHelper.toString(n)),this._lastMove="")}catch(e){console.log(e)}}doPromotePawn(e,i,t){try{var o=E.PositionHelper.parse(e),n=E.PositionHelper.parse(i),s=this.getPiece(o);if(null!=s&&y.csPieceTypes.isPawn(s)){(0,p.assertCondition)(E.PositionHelper.isPromotionHex(n,s.color),"Promotion hex");const a=E.PositionHelper.hexColor(n);var r,l=this.currentRegainablePieces(a).find(e=>e.symbol==t&&(!y.csPieceTypes.isBishop(e)||e.hexesColor==a));(0,p.assertNonNullish)(l,"promotion piece"),E.PositionHelper.equals(o,n)?(this.pieceCaptured=!1,this.pawnMoved=!0,this._lastMove=E.PositionHelper.toString(n)+"="+t):(r=this.movePieceTo(s,n),this.setLastMove(void 0,e,r,i,t)),super.promotePawn(s,l),this.forwardingTurn()}else console.log("empty piece or invalid for promotion at "+E.PositionHelper.toString(o)),this._lastMove=""}catch(e){console.log(e)}}doCastling(e,i=!1){i&&((0,p.assertCondition)(6<=e.length&&e.length<=8,"castling move string length"),(0,p.assertCondition)("K"==e[0]&&"R"==e[1],"castling move string prefix"));var t="w"==this.turn?"White":"Black",o="w"==this.turn?this.wKing:this.bKing,n=e.split("-"),s="R"==n[0][2]?"K":n[0][2],r=n[1][0],l=n[1][1],a=3==n[1].length&&"O"!=n[1][2]?n[1][2]:void 0,n=!(3<n[1].length)&&(3==n[1].length&&"O"==n[1][2]||void 0),c=((0,p.assertCondition)("K"==s||"D"==s,s+" must be King (K) side or Queen (D) side"),i&&((0,p.assertCondition)(W.csTypes.iscastlingColumn(r),r+" must be a king castling column name"),(0,p.assertCondition)(W.csTypes.isColumn(l),l+" must be a column name")),this.castlingKingPosition(r)),l=this.castlingRookPosition(r,l,s,n);const h=this.getPiece("K"==s?E.PositionHelper.initialKingSideRookPosition(t,this.isGrand):E.PositionHelper.initialQueenSideRookPosition(t,this.isGrand));if((0,p.assertNonNullish)(c,"king castling position"),(0,p.assertNonNullish)(h,"castling rook piece"),(0,p.assertCondition)(y.csPieceTypes.isRook(h)&&!h.moved,"castling rook hasn't been moved"),i&&(0,p.assertCondition)(h.canMoveTo(this,l,!1)),void 0!==a){s=this.castlingRookPosition(r,a,"D",n);const u=this.getPiece(E.PositionHelper.initialQueenSideRookPosition(t,this.isGrand));(0,p.assertNonNullish)(u,"double castling queen side rook"),(0,p.assertCondition)(y.csPieceTypes.isRook(u)&&!u.moved,"castling queen rook hasn't been moved"),i&&(0,p.assertCondition)(u.canMoveTo(this,s,!1)),super.movePiece(u,s[0],s[1])}super.movePiece(o,c[0],c[1]),super.movePiece(h,l[0],l[1]),this._enpassantCaptureCoordString=null,this.pieceCaptured=!1,this.pawnMoved=!1,this._lastMove=e,this.forwardingTurn()}*pieceList(){for(const e of this.whitePieces())yield e.uncapitalizedSymbolPositionString;for(const i of this.blackPieces())yield i.uncapitalizedSymbolPositionString}*threatedPieceStringPositions(){var e="w"==this.turn?this.whitePiecePositions():this.blackPiecePositions(),i="w"==this.turn?"White":"Black";for(const t of e)this.isThreated(t,i)&&(yield E.PositionHelper.toString(t))}*ownThreatedPieceStringPositions(){var e="w"==this.turn?this.blackPiecePositions():this.whitePiecePositions(),i="w"==this.turn?"Black":"White";for(const t of e)this.isThreated(t,i)&&(yield E.PositionHelper.toString(t))}castlingKingPosition(e){var i="w"==this.turn?this.wKing:this.bKing;return(0,p.assertCondition)(W.csTypes.iscastlingColumn(e),`Column: ${e} has to be a king castling column`),i.moved?null:(e=T.kingCastlingPosition(i.color,e),null!=this.hasPiece(e)||this.isThreated(e,i.color)?null:e)}castlingRookPosition(e,i,t,o){var n="w"==this.turn?"White":"Black",s="K"==t?E.PositionHelper.initialKingSideRookPosition(n,this.isGrand):E.PositionHelper.initialQueenSideRookPosition(n,this.isGrand),r=((0,p.assertCondition)(W.csTypes.iscastlingColumn(e),`King column: ${e} has to be a king castling column`),T.rookCastleMove(e,i,n,t,this.isGrand));let l=E.PositionHelper.orthogonalStep(s,r);if("ColumnUp"==r||"ColumnDown"==r)return l=void 0===o&&!this.isGrand||void 0!==o&&!o?E.PositionHelper.orthogonalStep(l,r):l;for(var a=W.csConvert.toColumnIndex(i);l[0]!=a;)l=E.PositionHelper.orthogonalStep(l,r);return l}*castlingMoves(e,n){var i=E.PositionHelper.initialQueenSideRookPosition(e,this.isGrand),t=E.PositionHelper.initialKingSideRookPosition(e,this.isGrand);const s=this.getPiece(i),o=this.getPiece(t);if(null!=o&&!o.moved)for(const c of W.csConvert.orthogonalDirections()){var r,l=E.PositionHelper.orthogonalStep(n,c);if(null!=l&&o.canMoveTo(this,l,!1)){let o="KRK-"+W.csConvert.columnFromIndex(n[0])+W.csConvert.columnFromIndex(l[0]);if(9==n[0]&&10==l[0]&&(r=l[1]-t[1],o+=2==r||-2==r?"O":"OO"),yield o,null!=s&&!s.moved){let i,t;if(n[0]==l[0]){i=l[0]+1,t=n[1]>l[1]?l[1]+1:n[1]+1;const h=[i,t];let e;(e=s.canMoveTo(this,h,!1))||(h[0]=l[0]-1,e=s.canMoveTo(this,h,!1)),e&&(yield o="KRR-"+W.csConvert.columnFromIndex(n[0])+W.csConvert.columnFromIndex(l[0])+W.csConvert.columnFromIndex(h[0]))}else{i=l[0],t=n[1]>l[1]?l[1]+2:l[1]-2;const u=[i,t];s.canMoveTo(this,u,!1)&&(yield o="KRR-"+W.csConvert.columnFromIndex(n[0])+W.csConvert.columnFromIndex(l[0])+W.csConvert.columnFromIndex(u[0])),u[0]=n[0],u[1]=n[1]>l[1]?n[1]-2:n[1]+2,s.canMoveTo(this,u,!1)&&(yield o="KRR-"+W.csConvert.columnFromIndex(n[0])+W.csConvert.columnFromIndex(l[0])+W.csConvert.columnFromIndex(u[0]))}}}}if(null!=s&&!s.moved)for(const p of W.csConvert.orthogonalDirections()){var a=E.PositionHelper.orthogonalStep(n,p);null!=a&&s.canMoveTo(this,a,!1)&&(yield"KRD-"+W.csConvert.columnFromIndex(n[0])+W.csConvert.columnFromIndex(a[0]))}}get valueTLPD(){var e;return this.piecePositions+" "+this.turn+" "+this.castlingStatus+" "+(null!=(e=null==(e=this.specialPawnCapture)?void 0:e.toString())?e:"-")+" "+this.halfmoveClock.toString()+" "+this.moveNumber.toString()}get piecePositions(){let e="/";for(let o=28;0<=o;o--){var n=o%2==0,s=o<=5?7-o:23<=o?o-21:n?1:0,r=o<=5?o+7:23<=o?35-o:n?13:14;let i="",t=0;for(let e=s;e<=r;e+=2){var l=this.getPiece([e,o]);null!=l?(0<t&&(i+=t.toString()),i+=l.uncapitalizedSymbol,t=0):t++}0<i.length&&(e+=o.toString()+":"+i,0<t&&(e+=t.toString()),e+="/")}return e}get castlingStatus(){var e=this.wKing.getCastlingStatus(this),i=this.bKing.getCastlingStatus(this).toLowerCase();return"-"==e&&"-"==i?"-":"-"==e?i:"-"==i?e:e+i}playerCastlingStatus(){const e="w"==this.turn?this.wKing:this.bKing;return e.getCastlingStatus(this)}playerCastlingPositionStatus(e){var i="w"==this.turn?this.wKing:this.bKing;return(0,p.assertCondition)(W.csTypes.iscastlingColumn(e),`Column: ${e} has to be a king castling column`),i.moved?null:(e=("w"==this.turn?T.whiteKingCastleMove:T.blackKingCastleMove)[e],[e=E.PositionHelper.knightJump(i.position,e),null!=this.hasPiece(e)?"occupied":this.isThreated(e,i.color)?"threated":""])}loadTLPD(e){if(null==e||e.trim().length<=10)return!1;try{var i=e.split(" ");if(2<=i.length&&("w"==i[1]||"b"==i[1])){var t=i[1],[o,n]=(super.resetGame(t),P.splitCastlingStatus(i[2]));if(this.restorePositions(i[0],o,n),this.halfmoveClock=W.csTypes.isNumber(Number(i[4]))?Number(i[4]):0,isNaN(Number(i[4]))&&null!=i[4]&&"-"!==i[4])throw new TypeError("Invalid halfmove clock value");if(this.moveNumber=W.csTypes.isNumber(Number(i[5]))?Number(i[5]):1,isNaN(Number(i[5]))&&null!=i[5]&&"-"!==i[5])throw new TypeError("Invalid move number");return super.specialPawnCapture=s.parse(this,i[3]),this.initGame(),!0}return!1}catch(e){return console.log(e),!1}}restorePositions(e,i,t){if(!(10<=e.length&&"/"==e[0]&&"/"==e[e.length-1]))throw new TypeError("Invalid TLPD string positions: "+e);{const v=[];var o,n=[],s=[],e=e.split("/");this.wKing.captured(),this.bKing.captured();for(o of e)if(0<o.length){if(o.startsWith(":")||o.endsWith(":")||1!=(o.match(/:/g)||[]).length)throw new Error("Incorrect line number issued: "+o);var[r,l]=o.split(":"),a=Number(r);if(!(!isNaN(a)&&0<=a&&a<=28))throw new Error("Incorrect line issued: "+r);{var c=0<=a&&a<6?7+a:a<=22?a%2==0?13:14:35-a;let e=0<=a&&a<6?7-a:a<=22?a%2==0?1:0:a-21;for(const w of l){if(e>c)throw new Error("Incorrect TLPD line content");var h=Number(w);if(isNaN(h)){var u=W.csTypes.isPieceName(w)?w:T.convertPieceAliases(w.toUpperCase()),p=w.toUpperCase()==w?"White":"Black";if("K"==u)if("White"==p){if(null!=this.wKing.position)throw new Error("Can't place two White Kings");if(this.wKing.setPositionTo([e,a]),null!=this.hasPiece(this.wKing.position))throw new Error("Can't place White King on the place used by another piece");this.addPiece(this.wKing)}else{if(null!=this.bKing.position)throw new Error("Can't place two Black Kings");if(this.bKing.setPositionTo([e,a]),null!=this.hasPiece(this.bKing.position))throw new Error("Can't place Black King on the place used by another piece");this.addPiece(this.bKing)}else{var g=T.createPiece(u,p,e,a);if(y.csPieceTypes.isRook(g)&&v.push(g),y.csPieceTypes.isPawn(g)&&g.isAwaitingPromotion&&(super.isAwaitingPromotion=!0),null!=this.hasPiece(g.position))throw new Error(`You cannot put a ${p} ${u} there`+", because the hex is already in use; There may be a repeated line in the TLPD");{const f="White"==p?n:s;this.addPiece(g),f.push(g)}}e+=2}else e+=h<<1}}}if(null==this.wKing.position)throw new Error("There must be a White King");if(null==this.bKing.position)throw new Error("There must be a Black King");var P,d=(e,t)=>e.reduce((e,i)=>i.symbol===t?e+1:e,0);for(P of["White","Black"]){const m="White"==P?n:s;let e=d(m,"D");if(1<e)throw new Error(`Too many ${P} Queens`);if(0==e&&this.addRegainablePiece(T.createPiece("D",P)),1<(e=d(m,"V")))throw new Error(`Too many ${P} Wyverns`);if(0==e&&this.addRegainablePiece(T.createPiece("V",P)),2<(e=d(m,"R")))throw new Error(`Too many ${P} Rooks`);for(;e<2;)this.addRegainablePiece(T.createPiece("R",P)),e++;if(2<(e=d(m,"G")))throw new Error(`Too many ${P} Pegasus`);for(;e<2;)this.addRegainablePiece(T.createPiece("G",P)),e++;if(2<(e=d(m,"N")))throw new Error(`Too many ${P} Knights`);for(;e<2;)this.addRegainablePiece(T.createPiece("N",P)),e++;if(3<(e=d(m,"J")))throw new Error(`Too many ${P} Bishops`);{let e={White:0,Black:0,Color:0};for(const C of m.filter(e=>y.csPieceTypes.isBishop(e)))e[C.hexesColor]+=1;if(1<e.White||1<e.Black||1<e.Color)throw new Error(`Too many ${P} Bishops on same color hexes`);0==e.White&&this.addRegainablePiece(new b.Bishop(P,"White")),0==e.Black&&this.addRegainablePiece(new b.Bishop(P,"Black")),0==e.Color&&this.addRegainablePiece(new b.Bishop(P,"Color"))}}this.wKing.castlingStatus=i,this.bKing.castlingStatus=t;for(const k of v)k.setCastlingStatus("White"==k.color?i:t,this.isGrand)}}movePieceTo(e,i){var t=y.csPieceTypes.isPawn(e)&&null!=this.specialPawnCapture&&this.specialPawnCapture.isEnPassantCapturable()&&this.specialPawnCapture.isEnPassantCapture(i,e);const o=null!=(n=this.getPiece(i))?n:t?this.specialPawnCapture.capturablePiece:null;var n=null!=o&&y.csPieceTypes.isPawn(e)&&null!=this.specialPawnCapture&&this.specialPawnCapture.isScornfulCapturable()&&this.specialPawnCapture.isScorned(e,i),s=t&&2<Math.abs(o.position[1]-i[1]),r=((this._enpassantCaptureCoordString=null,p.assertCondition)(e.canMoveTo(this,i),`Piece ${e.symbol} at ${null==(r=e.position)?void 0:r.toString()} move to `+i.toString()),null!=o&&((0,p.assertCondition)(e.color!=o.color&&e.canCaptureOn(this,i),`Piece ${e.symbol} at ${null==(r=e.position)?void 0:r.toString()} capture on `+i.toString()),t&&(this._enpassantCaptureCoordString=W.csConvert.columnFromIndex(o.position[0])+o.position[1].toString()),super.capturePiece(o)),null==o?"-":("P"==o.symbol?s?"@@":t||n?"@":"x":n?"@":"x")+o.symbol);return super.movePiece(e,i[0],i[1]),this.pieceCaptured=null!=o,this.pawnMoved="P"==e.symbol,r}setLastMove(e,i,t,o,n){this._lastMove=(null!=e?e:"")+i+t+o,void 0!==n&&(this._lastMove+="="+n)}forwardingTurn(){if(super.nextTurn(),"w"===this.turn&&this.moveNumber++,this.pawnMoved||this.pieceCaptured?this.halfmoveClock=0:this.halfmoveClock++,super.prepareCurrentTurn(),super.anyMove?100<=this.halfmoveClock&&(this._draw=!0):this.checked?this._mate=!0:this._stalemate=!0,this.checked)if(this._mate)this._lastMove+="#";else if(this.isKnightOrCloseCheck)this._lastMove+="^+";else if(this.isSingleCheck)this._lastMove+="+";else{if(!this.isDoubleCheck)throw new Error("never: exhaused check options");this._lastMove+="++"}super.computeHeuristic(this.turn,this.currentHeuristic)}initGame(){super.prepareGame(),this._mate=!1,this._stalemate=!1,this._resigned=!1,this._draw=!1,this.anyMove?100<=this.halfmoveClock&&(this._draw=!0):this.checked?this._mate=!0:this._stalemate=!0,this._lastMove="",super.computeHeuristic(this.turn,this.currentHeuristic)}parseMove(n){if(!n.startsWith("KR")||"-"!=n[3]&&"–"!=n[3]){var s=n.includes("-")?"-":n.includes("–")?"–":n.includes("x")?"x":n.includes("×")?"×":n.includes("@")?"@":n.includes("@@")?"@@":"";let e,i,t,o={};if(i=W.csTypes.isPieceName(n[0])&&W.csTypes.isColumn(n[1])?(e=n[0],[W.csConvert.toColumnIndex(n[1]),parseInt(n.slice(2))]):(e="P",[W.csConvert.toColumnIndex(n[0]),parseInt(n.slice(1))]),0<s.length){var r=n.indexOf(s);const l=n.slice(r+s.length);("x"==s||"×"==s)&&W.csTypes.isPieceName(l[0])&&W.csTypes.isColumn(l[1])?(o.capturedPiece=l[0],t=[W.csConvert.toColumnIndex(l[1]),parseInt(l.slice(2))]):(t=[W.csConvert.toColumnIndex(l[0]),parseInt(l.slice(1))],"x"!=s&&"×"!=s&&"@"!=s&&"@@"!=s||(o.capturedPiece="P")),"="==l[l.length-2]&&(o.promotedPiece=l[l.length-1])}else{if("="!=n[n.length-2])throw new Error("never: exhaused move format options");o.promotedPiece=n[n.length-1],t=void 0}return{pos:i,toPos:t,movePiece:e,data:o}}if("K"!=n[2]&&"D"!=n[2]&&"R"!=n[2])throw new Error("never: exhaused castling options");return n}}(t.Game=T).whiteKingCastleMove={I:"LineUp-FileUp",H:"LineUp-ColumnUp",F:"LineInvUp-ColumnUp",E:"LineInvUp-FileInvUp",D:"TransversalLineDec-FileInvUp"},T.blackKingCastleMove={I:"LineDown-FileDown",H:"LineDown-ColumnDown",F:"LineInvDown-ColumnDown",E:"LineInvDown-FileInvDown",D:"TransversalLineDec-FileInvDown"}},{"./cescacs.piece":2,"./cescacs.positionHelper":3,"./cescacs.types":4,"./ts.general":5}],2:[function(e,i,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.csPieceTypes=t.Pawn=t.Almogaver=t.Elephant=t.Bishop=t.Knight=t.Pegasus=t.Rook=t.Wyvern=t.Queen=t.King=t.Piece=void 0;const d=e("./cescacs.types"),v=e("./cescacs.positionHelper"),o=e("./ts.general");class n{constructor(e,i,t){if(this.color=e,null==i)this._position=null;else{if(null==t)throw new TypeError("Line shoud be defined when column is");this._position=v.PositionHelper.fromBoardPosition(i,t)}}get position(){return this._position}setPositionTo(e){if(null!=this._position)throw new Error("Piece can't be reassigned to a new position");this._position=e}moveTo(e,i){null!=this._position&&(this._position[0]=e,this._position[1]=i)}get pin(){return this._pin}set pin(e){this._pin=e}get hasOrthogonalAttack(){return"R"==this.symbol||"V"==this.symbol||"D"==this.symbol}get hasDiagonalAttack(){return"J"==this.symbol||"G"==this.symbol||"D"==this.symbol}get hasKnightJumpAttack(){return"N"==this.symbol||"V"==this.symbol||"G"==this.symbol}get hasOnlyCloseAttack(){return"P"==this.symbol||"E"==this.symbol||"M"==this.symbol||"K"==this.symbol}get isRegainable(){switch(this.symbol){case"D":case"V":case"R":case"G":case"N":case"J":return!0;default:return!1}}toString(){var e;return this.uncapitalizedSymbol+(null==(e=this.position)?void 0:e.toString())}get uncapitalizedSymbol(){return"White"==this.color?this.symbol:this.symbol.toLowerCase()}get symbolPositionString(){return this.symbol+(null==this.position?"":v.PositionHelper.toString(this.position))}get uncapitalizedSymbolPositionString(){return this.uncapitalizedSymbol+(null==this.position?"":v.PositionHelper.toString(this.position))}canMoveTo(e,i){return v.PositionHelper.positionIteratorIncludes(this.moves(e),i)}canCaptureOn(e,i){return this.canMoveTo(e,i)}captured(){(0,o.assertNonNullish)(this._position,"Don't capture again the piece"),this._position=null}*blockThreat(e,i){yield*v.PositionHelper.positionIteratorIntersection(this.moves(e),i)}*knightMoves(e,i=!1){if(null!=this._position&&null==this.pin)for(const o of v.PositionHelper.knightMoves(this._position)){var t;!i&&null!=(t=e.hasPiece(o))&&t===this.color||(yield o)}}*orthogonalMoves(i,t=!1){if(null!=this._position){var e=null==this.pin?null:d.csTypes.isOrthogonalOrientation(this.pin)?this.pin:[];for(const n of null!=e?e:d.csConvert.orthogonalDirections()){const s=v.PositionHelper.orthogonalRide(this._position,n);let e=s.next();for(;0==e.done;){var o=i.hasPiece(e.value);e=null==o?(yield e.value,s.next()):(!t&&o===this.color||(yield e.value),s.return())}}}}*diagonalMoves(i,t=!1){if(null!=this._position){var e=null==this.pin?null:d.csTypes.isDiagonalOrientation(this.pin)?this.pin:[];for(const n of null!=e?e:d.csConvert.diagonalDirections()){const s=v.PositionHelper.diagonalRide(this._position,n);let e=s.next();for(;!e.done;){var o=i.hasPiece(e.value);e=null==o?(yield e.value,s.next()):(!t&&o===this.color||(yield e.value),s.return())}}}}orthogonalStep(e,i,t=!0,o=!1){return null!=this._position?(null!=this.pin&&d.csTypes.isOrthogonalOrientation(this.pin)&&this.pin,(null==this._pin||this._pin.includes(i))&&null!=(i=v.PositionHelper.orthogonalStep(this._position,i))?(e=e.hasPiece(i),o||null==e||t&&e!==this.color?i:null):null):null}diagonalStep(e,i,t=!0,o=!1){return null!=this._position&&(null==this._pin||this._pin.includes(i))&&null!=(i=v.PositionHelper.diagonalStep(this._position,i))?(e=e.hasPiece(i),o||null==e||t&&e!==this.color?i:null):null}canMoveOrthogonallyTo(e,i,t=!0){if(null!=this.position){var o=v.PositionHelper.isOrthogonally(this.position,i);if(null!=o&&(null==this._pin||this._pin.includes(o))){var n=e.hasPiece(i);if(null==n||t&&n!=this.color)for(const s of v.PositionHelper.orthogonalRide(this.position,o)){if(v.PositionHelper.equals(i,s))return!0;if(null!=e.hasPiece(s))return!1}}}return!1}canMoveDiagonallyTo(e,i,t=!0){if(null!=this.position){var o=v.PositionHelper.isDiagonally(this.position,i);if(null!=o&&(null==this._pin||this._pin.includes(o))){var n=e.hasPiece(i);if(null==n||t&&n!=this.color)for(const s of v.PositionHelper.diagonalRide(this.position,o)){if(v.PositionHelper.equals(i,s))return!0;if(null!=e.hasPiece(s))return!1}}}return!1}}t.Piece=n;t.King=class extends n{constructor(e){super(e),this.symbol="K",this.value=0,this._moved=!1,this.checkPosition=null}setPositionTo(e){super.setPositionTo(e),this._moved=!this.isInitialPosition}setToInitialPosition(){super.setPositionTo(this.initialPosiition),this._moved=!1}get checked(){return null!=this.checkPosition}get moved(){return this._moved}set castlingStatus(e){this._moved=this._moved||"-"==e}getCastlingStatus(e){var i;return this._moved?"-":(i=e.getPiece(v.PositionHelper.initialKingSideRookPosition(this.color,e.isGrand)),e=e.getPiece(v.PositionHelper.initialQueenSideRookPosition(this.color,e.isGrand)),null!=i&&i.color==this.color&&s.isRook(i)&&!i.moved?null!=e&&e.color==this.color&&s.isRook(e)&&!e.moved?"RKR":"KR":null!=e&&e.color==this.color&&s.isRook(e)&&!e.moved?"KR":"K")}moveTo(e,i){super.moveTo(e,i),this._moved=!0}*moves(e){if(this.checked&&null!=this.position){for(const s of d.csConvert.orthogonalDirections()){var i,t;null!=this.pin&&this.pin.includes(s)||d.csTypes.hasDoubleCheckPin(this.checkPosition)&&this.checkPosition[2].includes(s)||(null==(i=v.PositionHelper.orthogonalStep(this.position,s))||null!=(t=e.hasPiece(i))&&t===this.color||e.isThreated(i,this.color)||(yield i))}for(const r of d.csConvert.diagonalDirections()){var o,n;null!=this.pin&&this.pin.includes(r)||d.csTypes.hasDoubleCheckPin(this.checkPosition)&&this.checkPosition[2].includes(r)||(null==(o=v.PositionHelper.diagonalStep(this.position,r))||null!=(n=e.hasPiece(o))&&n===this.color||e.isThreated(o,this.color)||(yield o))}}else for(const l of this.attemptMoves(e))e.isThreated(l,this.color)||(yield l)}markThreats(e){for(const i of this.attemptMoves(e,!0))e.hasThreat(i,this.color)||e.setThreat(i,this.color)}computeCheckAndPins(t){this.checkPosition=null,console.log(`Compute ${this.color} pins`);for(const i of v.PositionHelper.knightMoves(this.position)){var e=t.getPiece(i);null!=e&&e.color!=this.color&&e.hasKnightJumpAttack&&this.setKnightOrCloseAttack(i)}for(const l of d.csConvert.orthogonalDirections()){const a=v.PositionHelper.orthogonalRide(this.position,l);let e=a.next(),i=!0;for(;!e.done;){var o=e.value;const c=t.getPiece(o);if(null==c)i=!1,e=a.next();else{if(c.color!=this.color)i?c.hasOrthogonalAttack?this.setKnightOrCloseAttack(o,l):c.hasOnlyCloseAttack&&c.canCaptureOn(t,this.position)&&this.setKnightOrCloseAttack(o):c.hasOrthogonalAttack&&this.setOrthogonalAtack(o,l);else{const h=v.PositionHelper.orthogonalRide(o,l);let e=h.next();for(;!e.done;){var n=e.value,n=t.getPiece(n);e=null==n?h.next():(n.color!=this.color&&n.hasOrthogonalAttack&&(c.pin=d.csConvert.getOrthogonalOrientation(l)),h.return())}}e=a.return()}}}for(const u of d.csConvert.diagonalDirections()){const p=v.PositionHelper.diagonalRide(this.position,u);let e=p.next(),i=!0;for(;!e.done;){var s=e.value;const g=t.getPiece(s);if(null==g)i=!1,e=p.next();else{if(g.color!=this.color)i?g.hasDiagonalAttack?this.setKnightOrCloseAttack(s,u):g.hasOnlyCloseAttack&&g.canCaptureOn(t,this.position)&&this.setKnightOrCloseAttack(s):g.hasDiagonalAttack&&this.setDiagonalAtack(s,u);else{const P=v.PositionHelper.diagonalRide(s,u);let e=P.next();for(;!e.done;){var r=e.value,r=t.getPiece(r);e=null==r?P.next():(r.color!=this.color&&r.hasDiagonalAttack&&(g.pin=d.csConvert.getDiagonalOrientation(u)),P.return())}}e=p.return()}}}}isKnightOrCloseCheck(){return null!=this.checkPosition&&d.csTypes.isPosition(this.checkPosition)}isSingleCheck(){return null!=this.checkPosition&&d.csTypes.isSingleCheck(this.checkPosition)}isDoubleCheck(){return null!=this.checkPosition&&!d.csTypes.isPosition(this.checkPosition)&&!d.csTypes.isSingleCheck(this.checkPosition)}get checkThreat(){return null!=this.checkPosition?d.csTypes.isPosition(this.checkPosition)?this.checkPosition:d.csTypes.isSingleCheck(this.checkPosition)?this.checkPosition.p:null:null}getSingleCheckBlockingPositions(e){const i=[];if(null!=this.position&&d.csTypes.isSingleCheck(this.checkPosition)){var t=this.checkPosition.d;if(d.csTypes.isDiagonalDirection(t))for(const o of v.PositionHelper.diagonalRide(this.position,t)){if(null!=e.hasPiece(o))break;i.push(o)}else if(d.csTypes.isOrthogonalDirection(t))for(const n of v.PositionHelper.orthogonalRide(this.position,t)){if(null!=e.hasPiece(n))break;i.push(n)}}return i}setOrthogonalAtack(e,i){if(null!=this.checkPosition)if(d.csTypes.isPosition(this.checkPosition))this.checkPosition=[this.checkPosition,e,null],this.pin=d.csConvert.getOrthogonalOrientation(i);else{if(!d.csTypes.isSingleCheck(this.checkPosition))throw new Error("Triple check situation can't be achieved in the course of a game");this.checkPosition=[this.checkPosition.p,e,d.csConvert.getOrthogonalOrientation(i)]}else this.checkPosition={p:e,d:i},this.pin=d.csConvert.getOrthogonalOrientation(i)}setDiagonalAtack(e,i){if(null!=this.checkPosition)if(d.csTypes.isPosition(this.checkPosition))this.checkPosition=[this.checkPosition,e,null],this.pin=d.csConvert.getDiagonalOrientation(i);else{if(!d.csTypes.isSingleCheck(this.checkPosition))throw new Error("Triple check situation can't be achieved in the course of a game");this.checkPosition=[this.checkPosition.p,e,d.csConvert.getDiagonalOrientation(i)]}else this.checkPosition={p:e,d:i},this.pin=d.csConvert.getDiagonalOrientation(i)}setKnightOrCloseAttack(e,i){if(null!=this.checkPosition){if(d.csTypes.isPosition(this.checkPosition))throw new Error("Double knight or close check situation can't be achieved in the course of a game");if(!d.csTypes.isSingleCheck(this.checkPosition))throw new Error("Triple check situation can't be reached along a game");null==i?this.checkPosition=[this.checkPosition.p,e,null]:d.csTypes.isOrthogonalDirection(i)?this.checkPosition=[this.checkPosition.p,e,d.csConvert.getOrthogonalOrientation(i)]:this.checkPosition=[this.checkPosition.p,e,d.csConvert.getDiagonalOrientation(i)]}else this.checkPosition=e,null!=i&&(this.pin=d.csTypes.isOrthogonalDirection(i)?d.csConvert.getOrthogonalOrientation(i):d.csConvert.getDiagonalOrientation(i))}*orthogonalStepList(e,i){if(null!=this.position)for(const n of d.csConvert.orthogonalDirections()){var t,o=v.PositionHelper.orthogonalStep(this.position,n);null==o||!i&&null!=(t=e.hasPiece(o))&&t===this.color||(yield o)}}*diagonalStepList(e,i){if(null!=this.position)for(const n of d.csConvert.diagonalDirections()){var t,o=v.PositionHelper.diagonalStep(this.position,n);null==o||!i&&null!=(t=e.hasPiece(o))&&t===this.color||(yield o)}}*attemptMoves(e,i=!1){yield*this.orthogonalStepList(e,i),yield*this.diagonalStepList(e,i),this._moved||this.checked||(yield*this.knightMoves(e))}get initialPosiition(){return"White"==this.color?v.PositionHelper.whiteKingInitPosition:v.PositionHelper.blackKingInitPosition}get isInitialPosition(){return null!=this.position&&(8==this.position[0]&&("White"==this.color&&1==this.position[1]||"Black"==this.color&&27==this.position[1]))}};t.Queen=class extends n{constructor(){super(...arguments),this.symbol="D",this.value=15}*moves(e){yield*this.orthogonalMoves(e),yield*this.diagonalMoves(e)}canMoveTo(e,i){return super.canMoveOrthogonallyTo(e,i)||super.canMoveDiagonallyTo(e,i)}markThreats(e){for(const i of this.orthogonalMoves(e,!0))e.setThreat(i,this.color);for(const t of this.diagonalMoves(e,!0))e.setThreat(t,this.color)}};t.Wyvern=class extends n{constructor(){super(...arguments),this.symbol="V",this.value=14}*moves(e){yield*this.orthogonalMoves(e),yield*this.knightMoves(e)}canMoveTo(e,i){return super.canMoveOrthogonallyTo(e,i)||v.PositionHelper.positionIteratorIncludes(this.knightMoves(e),i)}markThreats(e){for(const i of this.orthogonalMoves(e,!0))e.setThreat(i,this.color);for(const t of this.knightMoves(e,!0))e.setThreat(t,this.color)}};t.Rook=class extends n{constructor(e,i,t){super(e),this.symbol="R",this.value=11,null!=i&&null!=t?(super.setPositionTo([d.csConvert.toColumnIndex(i),t]),this._moved=this.defaultMoveInitialitzation()):this._moved=!1}setPositionTo(e){super.setPositionTo(e),this._moved=this.defaultMoveInitialitzation()}isQueenSide(e){return null!=this.position&&(e?3==this.position[0]&&("White"==this.color?4==this.position[1]:24==this.position[1]):4==this.position[0]&&("White"==this.color?3==this.position[1]:25==this.position[1]))}isKingSide(e){return null!=this.position&&(e?11==this.position[0]&&("White"==this.color?4==this.position[1]:24==this.position[1]):10==this.position[0]&&("White"==this.color?3==this.position[1]:25==this.position[1]))}*moves(e){yield*this.orthogonalMoves(e)}moveTo(e,i){super.moveTo(e,i),this._moved=!0}canMoveTo(e,i,t=!0){return super.canMoveOrthogonallyTo(e,i,t)}markThreats(e){for(const i of this.orthogonalMoves(e,!0))e.setThreat(i,this.color)}setCastlingStatus(e,i){this._moved=this.isQueenSide(i)?!e.startsWith("R"):!this.isKingSide(i)||!e.endsWith("R")}get moved(){return this._moved}defaultMoveInitialitzation(){return!(this.isQueenSide(!1)||this.isKingSide(!1)||this.isQueenSide(!0)||this.isKingSide(!0))}};t.Pegasus=class extends n{constructor(){super(...arguments),this.symbol="G",this.value=8}*moves(e){yield*this.diagonalMoves(e),yield*this.knightMoves(e)}canMoveTo(e,i){return super.canMoveDiagonallyTo(e,i)||v.PositionHelper.positionIteratorIncludes(this.knightMoves(e),i)}markThreats(e){for(const i of this.diagonalMoves(e,!0))e.setThreat(i,this.color);for(const t of this.knightMoves(e,!0))e.setThreat(t,this.color)}};t.Knight=class extends n{constructor(){super(...arguments),this.symbol="N",this.value=4}*moves(e){if(yield*this.knightMoves(e),null!=this.position&&null==this.pin)for(const t of d.csConvert.knightDirections()){var i=v.PositionHelper.knightJump(this.position,t);null==i||null!=e.hasPiece(i)||null!=(i=v.PositionHelper.knightJump(i,t))&&null==e.hasPiece(i)&&(yield i)}}canCaptureOn(e,i){return v.PositionHelper.positionIteratorIncludes(this.knightMoves(e),i)}markThreats(e){for(const i of this.knightMoves(e,!0))e.setThreat(i,this.color)}};t.Bishop=class extends n{constructor(e,i,t){if(super(e),this.symbol="J",this.value=3,d.csTypes.isColumn(i)&&null!=t)super.setPositionTo([d.csConvert.toColumnIndex(i),t]),this.hexesColor=v.PositionHelper.hexColor(this.position);else{if(!d.csTypes.isHexColor(i))throw new TypeError("Bishop constructor error");this.hexesColor=i}}*moves(e){yield*this.diagonalMoves(e)}canMoveTo(e,i){return super.canMoveDiagonallyTo(e,i)}markThreats(e){for(const i of this.diagonalMoves(e,!0))e.setThreat(i,this.color)}};t.Elephant=class extends n{constructor(){super(...arguments),this.symbol="E",this.value=2}*moves(e,i=!1){var t,o,n,s,r,l,a=this.position;if(null!=a){const c=this.pin;null!=c&&("ColumnUp"!=c[0]||"ColumnDown"!=c[1])||null!=(t=v.PositionHelper.orthogonalStep(a,this.ownOrthogonalDirection))&&(null==(o=e.hasPiece(t))?(yield t,null==(n=v.PositionHelper.orthogonalStep(t,this.ownOrthogonalDirection))||null!=(s=e.hasPiece(n))&&!i&&s==this.color||(yield n)):!i&&o==this.color||(yield t));for(const h of["LineUp","LineInvUp","LineDown","LineInvDown"])null!=c&&!c.includes(h)||null==(r=v.PositionHelper.diagonalStep(a,h))||null!=(l=e.hasPiece(r))&&!i&&l==this.color||(yield r)}}markThreats(e){for(const i of this.moves(e,!0))e.setThreat(i,this.color)}get ownOrthogonalDirection(){return"White"===this.color?"ColumnUp":"ColumnDown"}};t.Almogaver=class extends n{constructor(){super(...arguments),this.symbol="M",this.value=2}*moves(e,i=!1,t=!1){var o,n,s,r=this.position;if(null!=r){const l=this.pin;if(!i)for(const a of d.csConvert.orthogonalDirections())null!=l&&!l.includes(a)||null!=(o=v.PositionHelper.orthogonalStep(r,a))&&null==e.hasPiece(o)&&null!=(o=v.PositionHelper.orthogonalStep(o,a))&&null==e.hasPiece(o)&&(yield o);for(const c of d.csConvert.diagonalDirections())null!=l&&!l.includes(c)||null==(n=v.PositionHelper.diagonalStep(r,c))||null==(s=e.hasPiece(n))||s===this.color&&!t||(yield n)}}canCaptureOn(e,i){return v.PositionHelper.positionIteratorIncludes(this.moves(e,!0,!1),i)}markThreats(e){for(const i of this.moves(e,!0,!0))e.setThreat(i,this.color)}};var s;t.Pawn=class extends n{constructor(){super(...arguments),this.symbol="P",this.value=1}*moves(e,i=!1,t=!1){var o,n,s=this.position;if(null!=s){const a=this.pin;if(!i){var r,l,i=this.ownOrthogonalStraightDirection;null!=a&&("ColumnUp"!=a[0]||"ColumnDown"!=a[1])||null!=(r=v.PositionHelper.orthogonalStep(s,i))&&null==e.hasPiece(r)&&(yield r,null!=(r=v.PositionHelper.orthogonalStep(r,i))&&null==e.hasPiece(r)&&(yield r,this.hasTripleStep(e.isGrand)&&null!=(r=v.PositionHelper.orthogonalStep(r,i))&&null==e.hasPiece(r)&&(yield r)));for(const h of this.ownOrthogonalAlternateDirections)null!=a&&!a.includes(h)||null!=(l=v.PositionHelper.orthogonalStep(s,h))&&null==e.hasPiece(l)&&(yield l)}const c=e.specialPawnCapture;null!=c&&c.isScornfulCapturable()&&c.isScorned(this)&&(null==this.pin||null!=(i=v.PositionHelper.isOrthogonally(s,c.capturablePiece.position))&&this.pin.includes(i))&&(yield c.capturablePiece.position);for(const u of this.ownCaptureDirections)null!=a&&!a.includes(u)||null!=(o=v.PositionHelper.diagonalStep(s,u))&&(null!=(n=e.hasPiece(o))?!t&&n==this.color||(yield o):null!=c&&c.isEnPassantCapturable()&&c.isEnPassantCapture(o)&&(yield o))}}promoteTo(e){(0,o.assertNonNullish)(this.position,"Pawn to promote is not captured"),(0,o.assertCondition)(v.PositionHelper.isPromotionHex(this.position,this.color),"Promotion hex "+v.PositionHelper.toString(this.position)),e.setPositionTo(this.position),this.captured()}get isAwaitingPromotion(){return null!=this.position&&v.PositionHelper.isPromotionHex(this.position,this.color)}canCaptureOn(e,i){return v.PositionHelper.positionIteratorIncludes(this.moves(e,!0,!1),i)}markThreats(e){for(const i of this.moves(e,!0,!0))e.setThreat(i,this.color)}hasTripleStep(e){var i,t=this.position;return null!=t&&(3<(i=t[0])&&i<7||3==i&&!e?t[1]==("White"==this.color?i+1:27-i):7<i&&i<11||11==i&&!e?t[1]==("White"==this.color?15-i:13+i):!!e&&(2==i||12==i?t[1]==("White"==this.color?5:23):(3==i||11==i)&&t[1]==("White"==this.color?6:22)))}get ownOrthogonalStraightDirection(){return"White"===this.color?"ColumnUp":"ColumnDown"}get ownOrthogonalAlternateDirections(){return"White"===this.color?["FileUp","FileInvUp"]:["FileDown","FileInvDown"]}get ownCaptureDirections(){return"White"==this.color?["LineUp","LineInvUp"]:["LineDown","LineInvDown"]}},(e=s=t.csPieceTypes||(t.csPieceTypes={})).isKing=function(e){return"K"==e.symbol},e.isQueen=function(e){return"D"==e.symbol},e.isWyvern=function(e){return"V"==e.symbol},e.isRook=function(e){return"R"==e.symbol},e.isPegasus=function(e){return"G"==e.symbol},e.isKnight=function(e){return"N"==e.symbol},e.isBishop=function(e){return"J"==e.symbol},e.isElephant=function(e){return"E"==e.symbol},e.isPawn=function(e){return"P"==e.symbol}},{"./cescacs.positionHelper":3,"./cescacs.types":4,"./ts.general":5}],3:[function(e,i,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.PositionHelper=void 0;const n=e("./cescacs.types");class s{static equals(e,i){return e[0]===i[0]&&e[1]===i[1]}static toString(e){return n.csConvert.columnFromIndex(e[0])+e[1].toString()}static positionKey(e){return e[0].toString()+"-"+e[1].toString()}static parse(e){if(e){const t=e.trim().toUpperCase();e=t.length;if(2<=e&&e<=3){e=t[0];if(n.csTypes.isColumn(e)){var i=parseInt(t.slice(1));if(n.csTypes.isLine(i))return[n.csConvert.toColumnIndex(e),i];throw new RangeError("Invalid line value: "+i)}throw new RangeError("Invalid column: "+e)}throw new RangeError("Invalid coordinates leght: "+t)}throw new RangeError("Empty string for coordinates value")}static fromBoardPosition(e,i,t=!1){e=[e=n.csTypes.isColumn(e)?n.csConvert.toColumnIndex(e):e,i];if(t&&!s.isValidPosition(e))throw new RangeError("Invalid position: "+e);return e}static isValidPosition(e){return n.csTypes.isPosition(e)&&s.isEvenLinesColumnIndex(e[0])==(e[1]%2==0)&&s.isOnBoard(e[0],e[1])}static get whiteKingInitPosition(){return[8,1]}static get blackKingInitPosition(){return[8,27]}static initialQueenSideRookPosition(e,i){return i?"White"==e?[3,4]:[3,24]:"White"==e?[4,3]:[4,25]}static initialKingSideRookPosition(e,i){return i?"White"==e?[11,4]:[11,24]:"White"==e?[10,3]:[10,25]}static isPromotionPos(e,i,t){return i==(e<=7?"White"==t?21+e:7-e:"White"==t?35-e:e-7)}static isPromotionHex(e,i){var t=e[0];return e[1]==(t<=7?"White"==i?21+t:7-t:"White"==i?35-t:t-7)}static hexColor(e){return s.lineHexColor(e[1])}static lineHexColor(e){switch(e%3){case 0:return"Black";case 1:return"White";case 2:return"Color";default:throw new Error}}static isOrthogonally(e,i){i=[i[0]-e[0],i[1]-e[1]];return 0==i[0]?0!=i[1]&&i[1]%2==0?0<i[1]?"ColumnUp":"ColumnDown":null:0<i[0]?i[0]==i[1]?"FileUp":i[0]==-i[1]?"FileDown":null:i[0]==i[1]?"FileInvDown":i[0]==-i[1]?"FileInvUp":null}static isDiagonally(e,i){i=[i[0]-e[0],i[1]-e[1]];return 0==i[1]?0!=i[0]&&i[0]%2==0?0<i[0]?"TransversalLineInc":"TransversalLineDec":null:(e=(i[0]<<1)+i[0],0<i[0]?e==i[1]?"LineUp":e==-i[1]?"LineDown":null:e==i[1]?"LineInvDown":e==-i[1]?"LineInvUp":null)}static orthogonalStep(e,i){i=s._ORTHOGONAL_MOVES[n.csConvert.toOrthogonalDirectionIndex(i)];return s.addOffset(e,i)}static diagonalStep(e,i){i=s._DIAGONAL_MOVES[n.csConvert.toDiagonalDirectionIndex(i)];return s.addOffset(e,i)}static*orthogonalRide(e,i){var t=s._ORTHOGONAL_MOVES[n.csConvert.toOrthogonalDirectionIndex(i)];let o=s.addOffset(e,t);for(;null!=o;)yield o,o=s.addOffset(o,t)}static*diagonalRide(e,i){var t=s._DIAGONAL_MOVES[n.csConvert.toDiagonalDirectionIndex(i)];let o=s.addOffset(e,t);for(;null!=o;)yield o,o=s.addOffset(o,t)}static*orthogonalMoves(i){for(const t of s._ORTHOGONAL_MOVES){let e=this.addOffset(i,t);for(;null!=e;)yield e,e=s.addOffset(e,t)}}static*diagonalMoves(i){for(const t of s._DIAGONAL_MOVES){let e=this.addOffset(i,t);for(;null!=e;)yield e,e=s.addOffset(e,t)}}static knightJump(e,i){i=s._KNIGHT_MOVES[n.csConvert.toKnightDirectionIndex(i)];return s.addOffset(e,i)}static*knightMoves(e){for(const t of s._KNIGHT_MOVES){var i=this.addOffset(e,t);null!=i&&(yield i)}}static positionIteratorIncludes(e,i){for(const t of e)if(t[0]===i[0]&&t[1]===i[1])return!0;return!1}static*positionIteratorIntersection(e,i){for(const t of e)i.some(e=>t[0]===e[0]&&t[1]===e[1])&&(yield t)}static isOnBoard(e,i){return 0<=e&&e<=14&&(e<=7?7-e<=i&&i<=21+e:e-7<=i&&i<=35-e)}static addOffset(e,i){var t=e[0]+i[0],e=e[1]+i[1];return s.isOnBoard(t,e)?[t,e]:null}}(t.PositionHelper=s)._ORTHOGONAL_MOVES=[[0,2],[0,-2],[1,1],[1,-1],[-1,1],[-1,-1]],s._DIAGONAL_MOVES=[[2,0],[-2,0],[1,3],[1,-3],[-1,3],[-1,-3]],s._KNIGHT_MOVES=[[3,1],[3,-1],[-3,1],[-3,-1],[2,4],[1,5],[2,-4],[1,-5],[-2,4],[-1,5],[-2,-4],[-1,-5]],s.isEvenLinesColumnIndex=e=>e%2!=0},{"./cescacs.types":4}],4:[function(e,i,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.csConvert=t.csTypes=void 0;const o=["P","T","A","B","C","D","E","F","G","H","I","K","L","X","Z"],n=["D","E","F","H","I"],s=["ColumnUp","ColumnDown","FileUp","FileDown","FileInvUp","FileInvDown"],r=["TransversalLineInc","TransversalLineDec","LineUp","LineDown","LineInvUp","LineInvDown"],l=["TransversalLineInc-FileUp","TransversalLineInc-FileDown","TransversalLineDec-FileInvUp","TransversalLineDec-FileInvDown","LineUp-FileUp","LineUp-ColumnUp","LineDown-FileDown","LineDown-ColumnDown","LineInvUp-FileInvUp","LineInvUp-ColumnUp","LineInvDown-FileInvDown","LineInvDown-ColumnDown"],a=[["ColumnUp","ColumnDown"],["FileUp","FileInvDown"],["FileInvUp","FileDown"]],c=[["TransversalLineInc","TransversalLineDec"],["LineUp","LineInvDown"],["LineInvUp","LineDown"]],h=["Black","White","Color"],u=["w","b"],p=["K","D","V","R","G","N","J","E","M","P"],g=["RKR","RK","KR","K","-"];var P;(P=t.csTypes||(t.csTypes={})).isNumber=e=>"number"==typeof e&&!isNaN(e),P.isColumn=e=>o.includes(e),P.isColumnIndex=e=>P.isNumber(e)&&Number.isInteger(e)&&0<=e&&e<=14,P.isLine=e=>P.isNumber(e)&&Number.isInteger(e)&&0<=e&&e<=28,P.isPosition=e=>Array.isArray(e)&&2==e.length&&P.isColumnIndex(e[0])&&P.isLine(e[1]),P.isOrthogonalDirection=e=>s.includes(e),P.isDiagonalDirection=e=>r.includes(e),P.isKnightDirection=e=>l.includes(e),P.iscastlingColumn=e=>n.includes(e),P.isDirectionMoveRange=e=>P.isNumber(e)&&Number.isInteger(e)&&0<=e&&e<=5,P.isDirectionFullMoveRange=e=>P.isNumber(e)&&Number.isInteger(e)&&0<=e&&e<=11,P.isOrthogonalOrientation=i=>Array.isArray(i)&&a.some(e=>e[0]==i[0]&&e[1]==i[1]),P.isDiagonalOrientation=i=>Array.isArray(i)&&c.some(e=>e[0]==i[0]&&e[1]==i[1]),P.isHexColor=e=>h.includes(e),P.isPieceName=e=>p.includes(e),P.isTurn=e=>u.includes(e),P.isCastlingStatus=e=>g.includes(e),P.isSingleCheck=e=>Object.prototype.hasOwnProperty.call(e,"d")&&Object.prototype.hasOwnProperty.call(e,"p"),P.isDoubleCheck=e=>Array.isArray(e)&&3==length&&P.isPosition(e[0])&&P.isPosition(e[1])&&(null==e[2]||P.isOrthogonalOrientation(e[2])||P.isDiagonalOrientation(e[2])),P.hasDoubleCheckPin=e=>Array.isArray(e)&&3==length&&P.isPosition(e[0])&&P.isPosition(e[1])&&null!=e[2]&&(P.isOrthogonalOrientation(e[2])||P.isDiagonalOrientation(e[2])),(t=t.csConvert||(t.csConvert={})).columnFromIndex=e=>o[e],t.toColumnIndex=e=>o.indexOf(e),t.toOrthogonalDirectionIndex=e=>s.indexOf(e),t.orthogonalDirectionFromIndex=e=>s[e],t.toDiagonalDirectionIndex=e=>r.indexOf(e),t.diagonalDirectionFromIndex=e=>r[e],t.toKnightDirectionIndex=e=>l.indexOf(e),t.knightDirectionFromIndex=e=>l[e],t.getOrthogonalOrientation=function(e){switch(e){case"ColumnUp":case"ColumnDown":return["ColumnUp","ColumnDown"];case"FileUp":case"FileInvDown":return["FileUp","FileInvDown"];case"FileInvUp":case"FileDown":return["FileInvUp","FileDown"];default:throw new Error(e)}},t.getDiagonalOrientation=function(e){switch(e){case"TransversalLineInc":case"TransversalLineDec":return["TransversalLineInc","TransversalLineDec"];case"LineUp":case"LineInvDown":return["LineUp","LineInvDown"];case"LineInvUp":case"LineDown":return["LineInvUp","LineDown"];default:throw new Error(e)}},t.orthogonalDirections=function*(){for(const e of s)yield e},t.diagonalDirections=function*(){for(const e of r)yield e},t.knightDirections=function*(){for(const e of l)yield e}},{}],5:[function(e,i,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.round2hundredths=t.assertCondition=t.assertNonNullish=void 0,t.assertNonNullish=function(e,i){if(null==e)throw new TypeError(`Unexpected ${e} value`+i==void 0?"":": "+i)},t.assertCondition=function(e,i){if(!e)throw new Error("Assertion does not hold"+i==void 0?"":": "+i)},t.round2hundredths=function(e){return Math.round(100*(e+Number.EPSILON))/100}},{}]},{},[1])(1)});