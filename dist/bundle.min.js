!function(e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):("undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this).cescacs=e()}(function(){return function o(s,n,r){function l(i,e){if(!n[i]){if(!s[i]){var t="function"==typeof require&&require;if(!e&&t)return t(i,!0);if(a)return a(i,!0);throw(e=new Error("Cannot find module '"+i+"'")).code="MODULE_NOT_FOUND",e}t=n[i]={exports:{}},s[i][0].call(t.exports,function(e){return l(s[i][1][e]||e)},t,t.exports,o,s,n,r)}return n[i].exports}for(var a="function"==typeof require&&require,e=0;e<r.length;e++)l(r[e]);return l}({1:[function(e,i,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Game=t.Board=t.EnPassantCapturable=t.ScornfulCapturable=t.PawnSpecialCaptureStatus=t.round2hundredths=t.csmv=t.cspty=t.PositionHelper=void 0;const y=e("./ts.general"),U=(Object.defineProperty(t,"round2hundredths",{enumerable:!0,get:function(){return y.round2hundredths}}),e("./cescacs.types")),G=e("./cescacs.piece"),V=(Object.defineProperty(t,"cspty",{enumerable:!0,get:function(){return G.csPieceTypes}}),e("./cescacs.positionHelper")),b=(Object.defineProperty(t,"PositionHelper",{enumerable:!0,get:function(){return V.PositionHelper}}),e("./cescacs.piece")),o=e("./cescacs.moves");Object.defineProperty(t,"csmv",{enumerable:!0,get:function(){return o.csMoves}});class n{constructor(e){this._capturablePiece=e}static parse(e,i){if(null!=i&&0<i.length&&"-"!=i){if(4<=i.length){const n=i.split("@");n.length=2;var t=V.PositionHelper.parse(n[0]);if(n[1].includes(",")||!isNaN(Number(n[1]))){i=e.getPiece(t);if(null==i)throw new Error(V.PositionHelper.toString(t)+" doesn't have a pawn");var o=n[1].split(",");if(1<=o.length&&o.length<=2){let e=[];for(const r of o){var s=Number(r);if(isNaN(s)||!U.csTypes.isLine(s))throw new TypeError("Invalid en passant capture line value");e.push(V.PositionHelper.fromBoardPosition(t[0],s,!0))}return new h(i,e)}throw new TypeError("Missing or invalid en passant capture lines")}o=V.PositionHelper.parse(n[1]),i=e.getPiece(o);if(null!=i)return new c(i,t);throw new Error(V.PositionHelper.toString(o)+" doesn't have a pawn")}throw new TypeError("Too short special pawn capture status string")}return null}isScornfulCapturable(){return"scornful"==this.specialCaptureType}isEnPassantCapturable(){return"enPassant"==this.specialCaptureType}get capturablePiece(){return this._capturablePiece}get capturablePawn(){return(0,y.assertCondition)(G.csPieceTypes.isPawn(this._capturablePiece)),this._capturablePiece}}class c extends(t.PawnSpecialCaptureStatus=n){constructor(e,i){super(e),this.specialCaptureType="scornful",this._capturerPawnPos=i}static promoteCapturablePawn(e,i){return new c(i,e._capturerPawnPos)}isScorned(e,i){e=null!=e.position&&V.PositionHelper.equals(e.position,this._capturerPawnPos);return null==i?e:e&&V.PositionHelper.equals(i,this.capturablePiece.position)}get scornfulCaptureDirection(){var e=this._capturerPawnPos[0],i=this.capturablePiece.position,t=i[0];return i[1]>this._capturerPawnPos[1]?e<t?"FileUp":"FileInvUp":e<t?"FileDown":"FileInvDown"}toString(){return V.PositionHelper.toString(this._capturerPawnPos)+"@"+V.PositionHelper.toString(this.capturablePiece.position)}}t.ScornfulCapturable=c;class h extends n{constructor(e,i){super(e),this.specialCaptureType="enPassant",this._captureTo=i}static promoteCapturablePawn(e,i){return new h(i,e._captureTo)}isEnPassantCapture(i,e){var t=this._captureTo.some(e=>V.PositionHelper.equals(e,i));return null==e?t:!(!t||null==e.position)&&(t=e.position,1==Math.abs(i[0]-t[0])&&("White"==e.color?i[1]-t[1]==3:t[1]-i[1]==3))}toString(){return V.PositionHelper.toString(this.capturablePiece.position)+"@"+this.captureLines()}captureLines(){const i=this._captureTo;if(0<i.length&&i.length<=2){let e=i[0][1].toString();return 1<i.length&&(e+=","+i[1][1].toString()),e}throw new Error("Invalid en passant capture positions set")}}t.EnPassantCapturable=h;class u{constructor(e,i){this.wPositions=[0,0,0,0,0,0,0,0],this.bPositions=[0,0,0,0,0,0,0,0],this.wThreats=[0,0,0,0,0,0,0,0],this.bThreats=[0,0,0,0,0,0,0,0],this.wPieces=new Map,this.bPieces=new Map,this._regainablePieces=[],this.wKing=new b.King("White"),this.bKing=new b.King("Black"),this._specialPawnCapture=null,this._currentHeuristic=u.newHeuristic(),this._wAwaitingPromotion=!1,this._bAwaitingPromotion=!1,this._grand=e,this._turn=null!=i?i:"w"}static newHeuristic(){return{pieces:[0,0],space:[0,0],positioning:0,mobility:0,king:0}}static splitCastlingStatus(o){if(null!=o&&0<o.length){let e,i,t=0;for(;t<o.length&&o[t].toUpperCase()==o[t];)t++;if(i=(i=0==t?(e="-",o):t==o.length?(e=o,"-"):(e=o.slice(0,t),o.slice(t))).toUpperCase(),U.csTypes.isCastlingStatus(e)&&U.csTypes.isCastlingStatus(i))return[e,i];throw new TypeError("Invalid TLPD issued castling status "+o)}return["RKR","RKR"]}static lineMask(e){return 1<<e}get isGrand(){return this._grand}get turn(){return this._turn}get isAwaitingPromotion(){return"w"==this._turn?this._wAwaitingPromotion:this._bAwaitingPromotion}set isAwaitingPromotion(e){"w"==this._turn?this._wAwaitingPromotion=e:this._bAwaitingPromotion=e}get specialPawnCapture(){return this._specialPawnCapture}set specialPawnCapture(e){this._specialPawnCapture=e}get checked(){return this.currentKing.checked}get isKnightOrCloseCheck(){return this.currentKing.isKnightOrCloseCheck()}get isSingleCheck(){return this.currentKing.isSingleCheck()}get isDoubleCheck(){return this.currentKing.isDoubleCheck()}get currentHeuristic(){return this._currentHeuristic}*whitePieces(){for(const e of this.wPieces.values())yield e}*blackPieces(){for(const e of this.bPieces.values())yield e}*whitePiecesFulfil(e){for(const i of this.wPieces.values())e(i)&&(yield i)}*blackPiecesFulfil(e){for(const i of this.bPieces.values())e(i)&&(yield i)}*whitePiecePositions(){for(const e of this.wPieces.values())yield e.position}*blackPiecePositions(){for(const e of this.bPieces.values())yield e.position}get currentKing(){return"w"===this.turn?this.wKing:this.bKing}hasPiece(e){var i=e[0]+1>>>1,e=u.lineMask(e[1]);return 0!=(this.wPositions[i]&e)?"White":0!=(this.bPositions[i]&e)?"Black":null}getHexPiece(e){e=V.PositionHelper.parse(e);return null==e?null:this.getPiece(e)}getPiece(e){var i=this.hasPiece(e);return null==i?null:("White"==i?this.wPieces:this.bPieces).get(V.PositionHelper.positionKey(e))}hasThreat(e,i){var t=e[0]+1>>>1;return 0!=(("White"==i?this.wThreats:this.bThreats)[t]&u.lineMask(e[1]))}isThreated(e,i){var t=e[0]+1>>>1;return 0!=(("White"==i?this.bThreats:this.wThreats)[t]&u.lineMask(e[1]))}setThreat(e,i){var t=e[0]+1>>>1;("White"==i?this.wThreats:this.bThreats)[t]|=u.lineMask(e[1])}hasRegainablePieces(t){const o="w"==this._turn?"White":"Black";return this._regainablePieces.reduce((e,i)=>e||i.color==o&&(!G.csPieceTypes.isBishop(i)||i.hexesColor==t),!1)}getHeuristicValue(e){return(0,y.round2hundredths)(e.pieces[0]-e.pieces[1]+e.space[0]-e.space[1]+e.positioning+e.mobility+e.king)}maxRegainablePiecesValue(t){const o="w"==this._turn?"White":"Black";return this._regainablePieces.reduce((e,i)=>i.value>e&&i.color==o&&(!G.csPieceTypes.isBishop(i)||i.hexesColor==t)?i.value:e,0)}currentRegainablePieceNames(t){const o="w"==this._turn?"White":"Black";return this._regainablePieces.reduce((e,i)=>i.color!=o||G.csPieceTypes.isBishop(i)&&i.hexesColor!=t?e:e.add(i.symbol),new Set)}*pieceMoves(e){const i=this.currentKing;var t;!i.checked||"K"==e.symbol?yield*e.moves(this):(null!=(t=i.checkThreat)&&e.canCaptureOn(this,t)&&(yield t),i.isSingleCheck()&&(yield*e.blockThreat(this,i.getSingleCheckBlockingPositions(this))))}addPiece(e){(0,y.assertNonNullish)(e.position,e.symbol+" position");var i=e.position;const t="White"==e.color?this.wPieces:this.bPieces;t.set(V.PositionHelper.positionKey(i),e);var o=i[0]+1>>>1,i=u.lineMask(i[1]);const s="White"==e.color?this.wPositions:this.bPositions;s[o]|=i}capturePiece(e){(0,y.assertNonNullish)(e.position,e.symbol+" position");var i=e.position,t=i[0]+1>>>1,o=u.lineMask(i[1]);const s="White"==e.color?this.wPositions:this.bPositions,n=(s[t]&=~o,"White"==e.color?this.wPieces:this.bPieces);n.delete(V.PositionHelper.positionKey(i)),e.captured(),e.isRegainable&&this._regainablePieces.push(e)}undoCapturePiece(e,i,t){var o;b.Piece.isRegainablePiece(e.symbol)&&(o=this._regainablePieces.indexOf(e),(0,y.assertCondition)(0<=o,"Captured piece found in the regainable pieces bag"),this._regainablePieces.splice(o,1)),e.setPositionTo([i,t]),this.addPiece(e)}movePiece(t,o,s){(0,y.assertNonNullish)(t.position,t.symbol+" position");var e=t.position,i=e[0]+1>>>1,n=u.lineMask(e[1]);const r="White"==t.color?this.wPieces:this.bPieces;if(G.csPieceTypes.isPawn(t)){let e=null,i=null;t.position[0]!=o?null!=(l=this.getPiece([t.position[0],s>t.position[1]?t.position[1]+2:t.position[1]-2]))&&G.csPieceTypes.isPawn(l)&&(e=l):2<Math.abs(s-t.position[1])&&(i=[],s>t.position[1]?(i.push([o,t.position[1]+2]),s>t.position[1]+4&&i.push([o,t.position[1]+4])):(i.push([o,t.position[1]-2]),s<t.position[1]-4&&i.push([o,t.position[1]-4]))),null!=e?this._specialPawnCapture=new c(t,e.position):null!=i?this._specialPawnCapture=new h(t,i):this._specialPawnCapture=null,V.PositionHelper.isPromotionPos(o,s,t.color)&&("White"==t.color?this._wAwaitingPromotion=!0:this._bAwaitingPromotion=!0)}else this._specialPawnCapture=null;r.delete(V.PositionHelper.positionKey(e)),t.moveTo(o,s),r.set(V.PositionHelper.positionKey(e),t);var l=e[0]+1>>>1,o=u.lineMask(e[1]);const a="White"==t.color?this.wPositions:this.bPositions;a[i]&=~n,a[l]|=o}undoPieceMove(e,i,t){const o="White"==e.color?this.wPieces:this.bPieces;var s=e.position,n=s[0]+1>>>1,r=u.lineMask(s[1]),i=(o.delete(V.PositionHelper.positionKey(s)),e.moveTo(i,t),o.set(V.PositionHelper.positionKey(s),e),s[0]+1>>>1),t=u.lineMask(s[1]);const l="White"==e.color?this.wPositions:this.bPositions;l[n]&=~r,l[i]|=t}promotePawn(e,i){if(this._regainablePieces.includes(i)){const t="White"==i.color?this.wPieces:this.bPieces;t.delete(V.PositionHelper.positionKey(e.position)),e.promoteTo(i),t.set(V.PositionHelper.positionKey(i.position),i),null!=this._specialPawnCapture&&this._specialPawnCapture.capturablePawn==e&&(this._specialPawnCapture.isScornfulCapturable()?this._specialPawnCapture=c.promoteCapturablePawn(this._specialPawnCapture,i):this._specialPawnCapture.isEnPassantCapturable()&&(this._specialPawnCapture=h.promoteCapturablePawn(this._specialPawnCapture,i)));e=this._regainablePieces.indexOf(i);this._regainablePieces.splice(e,1)}}undoPromotePawn(e,i){const t="White"==i.color?this.wPieces:this.bPieces;t.delete(V.PositionHelper.positionKey(i.position)),e.setPositionTo([i.position[0],i.position[1]]),i.captured(),this._regainablePieces.push(i),t.set(V.PositionHelper.positionKey(e.position),e)}addRegainablePiece(e){null==e.position&&this._regainablePieces.push(e)}currentRegainablePieces(t){const o="w"==this._turn?"White":"Black",s=this._regainablePieces;return s.filter((i,e)=>i.color==o&&(!G.csPieceTypes.isBishop(i)||i.hexesColor==t)&&e==s.findIndex(e=>e.color==o&&e.symbol==i.symbol&&(!G.csPieceTypes.isBishop(e)||e.hexesColor==t)))}resetGame(e){for(let e=0;e<8;e++)this.wPositions[e]=0,this.bPositions[e]=0,this.wThreats[e]=0,this.bThreats[e]=0;this.wPieces.clear(),this.bPieces.clear(),this._regainablePieces.length=0,this._specialPawnCapture=null,this._turn=e}prepareGame(){"w"==this._turn?this.prepareTurn(this.bKing):this.prepareTurn(this.wKing),this.prepareCurrentTurn()}nextTurn(){this._turn="w"===this._turn?"b":"w"}prepareCurrentTurn(){this.prepareTurn(this.currentKing)}prepareTurn(e){var i=e.color;const t="White"==i?this.bThreats:this.wThreats;for(let e=0;e<=7;e++)t[e]=0;for(const o of("White"==i?this.bPieces:this.wPieces).values())o.markThreats(this);for(const s of("White"==i?this.wPieces:this.bPieces).values())s.pin=null;e.computeCheckAndPins(this)}isMoveableTurn(){for(const e of("w"===this.turn?this.wPieces:this.bPieces).values()){const i=this.pieceMoves(e);if(!i.next().done)return!0}return!1}computeHeuristic(d,P,e,v){function w(e){let i=0;for(;0<e;)i+=1&e,e>>>=1;return i}function m(e){let i=0;for(e>>>=1;0<e;)i+=1&e,e>>>=2;return i}const f="w"===d?this.wKing:this.bKing;if(v.pieces[0]=0,v.pieces[1]=0,v.positioning=0,v.mobility=0,e){var C="w"==d?"White":"Black";v.king=0,f.checked?f.isDoubleCheck()?v.king-=30:f.isKnightOrCloseCheck()?v.king-=20:v.king-=15:f.moved||(v.king+=.1);for(const x of f.attemptMoves(this,!0)){var k=this.hasPiece(x);f.checked?this.isThreated(x,C)?v.king-=2:null==k?v.king+=.5:k==C&&(v.king-=.5):this.isThreated(x,C)?v.king-=this.hasThreat(x,C)?.25:.5:null==k?v.king-=.01:k==C&&(v.king+=.05)}const E="w"==d?this.wPieces:this.bPieces,W="w"==d?this.bPieces:this.wPieces;var y="w"==d?this.wThreats:this.bThreats,b="w"==d?this.bThreats:this.wThreats,T="w"==d?31:31<<24,D="w"==d?31<<24:31,K="w"==d?this.bPositions:this.wPositions;let o=0,s=0,i=0,t=0,e=0,n=0,r=0,l=0,a=0;for(const F of E.values())F.markThreats(this);let c=0,h=0,u=0,p=0,g=0;var S,_=(e,i)=>"White"==i?8<e[1]:e[1]<20,M=(e,i)=>"White"==i?e[1]>(7==e[0]?6:3):e[1]<(7==e[0]?22:25);for(const L of E.values())if(null!=L.position){var I=this.hasThreat(L.position,C);if(v.pieces[0]+=L.value,"J"===L.symbol&&e++,this.isThreated(L.position,C)?l-=I?.75*L.value:L.value:I&&(l+=1-.0625*L.value),null==L.pin){for(const B of this.pieceMoves(L))v.mobility+=.01;if(L.hasOrthogonalAttack){for(var[H,O]of function*(t,e,o){for(const r of U.csConvert.orthogonalDirections()){const l=V.PositionHelper.orthogonalRide(e,r);let i=l.next();for(;0==i.done;){var s=t.getPiece(i.value);if(null==s)i=l.next();else{const a=V.PositionHelper.orthogonalRide(i.value,r);let e=a.next();for(;0==e.done;){var n=t.getPiece(e.value);e=null==n?l.next():(n.color!=o&&(yield[s,n]),a.return())}i=l.return()}}}}(this,L.position,C))H.color==C?H.value<=L.value&&L.value<O.value&&(H.hasOrthogonalAttack?l+=.25*(O.value-H.value):!I&&O.hasOrthogonalAttack||(l+=.0625*O.value)):H.value>L.value?l+=.25*(H.value-L.value):H.value<O.value&&!H.hasOrthogonalAttack&&O.value>L.value&&(l+=.25*H.value);M(L.position,C)&&(p+=L.value)}if(L.hasDiagonalAttack){for(var[R,N]of function*(t,e,o){for(const r of U.csConvert.diagonalDirections()){const l=V.PositionHelper.diagonalRide(e,r);let i=l.next();for(;0==i.done;){var s=t.getPiece(i.value);if(null==s)i=l.next();else{const a=V.PositionHelper.diagonalRide(i.value,r);let e=a.next();for(;0==e.done;){var n=t.getPiece(e.value);e=null==n?l.next():(n.color!=o&&(yield[s,n]),a.return())}i=l.return()}}}}(this,L.position,C))R.color==C?R.value<=L.value&&L.value<N.value&&(R.hasDiagonalAttack?l+=.25*(N.value-R.value):!I&&N.hasDiagonalAttack||(l+=.0625*N.value)):R.value>L.value?l+=.25*(R.value-L.value):R.value<N.value&&!R.hasDiagonalAttack&&N.value>L.value&&(l+=.25*R.value);M(L.position,C)&&(p+=L.value)}else G.csPieceTypes.isElephant(L)||G.csPieceTypes.isAlmogaver(L)?(h+=L.value,_(L.position,C)&&(u+=L.value)):G.csPieceTypes.isPawn(L)&&(h+=L.value,L.hasTripleStep(this.isGrand)?v.mobility+=.01:_(L.position,C)&&(u++,I&&(u++,V.PositionHelper.promotionDistance(L.position,C)<14&&(g+=14-V.PositionHelper.promotionDistance(L.position,C)<<1))))}else a-=L.value,v.king-=I?.2:.4}P<=12&&h-u>>1>u&&(c=u-p);for(const A of W.values())null!=A.position&&(v.pieces[1]+=A.value,"J"===A.symbol&&n++,this.hasThreat(A.position,C)&&(l+=A.value),null!=A.pin&&(a+=A.value));for(let t=0;t<=7;t++){let e=K[t]&y[t]&~b[t],i=0;for(;0!=e;)1==(1&e)&&(S=(t<<1)-(i+1)%2,S=this.getPiece([S,i]),r+=S.value),e>>>=1,i++;o+=w(y[t]),s+=w(b[t])}i+=m(y[2]&~b[2]&T),t+=m(b[2]&~y[2]&D);for(let e=3;e<=5;e++)i+=w(y[e]&~b[e]&T),t+=w(b[e]&~y[e]&D);2<=e&&(v.pieces[0]+=3==e?1:.5),2<=n&&(v.pieces[1]+=3==n?1:.5),v.space[0]=.01*o,v.space[1]=.01*s,v.positioning=.01*(i-t+l+a+c+g)+.125*r}else f.checked?v.king=-120:v.king=-6,v.space[0]=0,v.space[0]=0;return v}clearThreats(e){const i="White"==e?this.wThreats:this.bThreats;for(let e=0;e<=7;e++)i[e]=0}clearPins(e){for(const i of("White"==e?this.wPieces:this.bPieces).values())i.pin=null}}class T extends(t.Board=u){constructor(e=!1,i){var t=null==i?void 0:i.split(" ");if(super(e,null==(null==t?void 0:t[1])||"w"!=t[1]&&"b"!=t[1]?"w":t[1]),this._moves=[],this.pawnMoved=!1,this.pieceCaptured=!1,this._mate=!1,this._stalemate=!1,this._draw=!1,this._resigned=!1,this._enpassantCaptureCoordString=null,this._lastMove="",void 0===i){this.wKing.setToInitialPosition(),this.addPiece(this.wKing),this.bKing.setToInitialPosition(),this.addPiece(this.bKing);for(const o of T.fillDefaultPositions(e))this.addPiece(o);this.halfmoveClock=0,this.moveNumber=1}else{if(!(null!=t&&2<=t.length&&U.csTypes.isTurn(t[1])))throw new Error("Piece positions and turn are mandatory parts of the TLPD string");var[i,e]=u.splitCastlingStatus(t[2]);if(this.restoreTLPDPositions(t[0],i,e),this.halfmoveClock=U.csTypes.isNumber(Number(t[4]))?Number(t[4]):0,isNaN(Number(t[4]))&&null!=t[4]&&"-"!==t[4])throw new TypeError("Invalid halfmove clock value");if(this.moveNumber=U.csTypes.isNumber(Number(t[5]))?Number(t[5]):1,isNaN(Number(t[5]))&&null!=t[5]&&"-"!==t[5])throw new TypeError("Invalid move number");super.specialPawnCapture=n.parse(this,t[3])}this.initGame()}static kingCastlingPosition(e,i){var t="White"==e?V.PositionHelper.whiteKingInitPosition:V.PositionHelper.blackKingInitPosition,e=("White"==e?T.whiteKingCastleMove:T.blackKingCastleMove)[i];return V.PositionHelper.knightJump(t,e)}static createPiece(e,i,t,o){if(null!=t&&null!=o){var s=U.csConvert.columnFromIndex(t);switch(e){case"K":throw new Error("King must be created before setting it on the board (without position)");case"D":return new b.Queen(i,s,o);case"V":return new b.Wyvern(i,s,o);case"R":return new b.Rook(i,s,o);case"G":return new b.Pegasus(i,s,o);case"N":return new b.Knight(i,s,o);case"J":return new b.Bishop(i,s,o);case"E":return new b.Elephant(i,s,o);case"M":return new b.Almogaver(i,s,o);case"P":return new b.Pawn(i,s,o);default:throw new Error(e)}}else switch(e){case"K":return new b.King(i);case"D":return new b.Queen(i);case"V":return new b.Wyvern(i);case"R":return new b.Rook(i);case"G":return new b.Pegasus(i);case"N":return new b.Knight(i);case"J":throw new Error("Bishop needs position or HexColor to be created");case"E":return new b.Elephant(i);case"M":return new b.Almogaver(i);case"P":return new b.Pawn(i);default:throw new Error(e)}}static convertPieceAliases(e){switch(e){case"Q":return"D";case"W":return"V";case"T":return"R";case"C":case"S":return"N";case"A":case"B":case"F":case"L":return"J";default:if(U.csTypes.isPieceName(e))return e;throw new TypeError("Invalid piece symbol "+e)}}static fillDefaultPositions(e=!1){const i=[];return i.push(new b.Queen("White","E",1),new b.Wyvern("White","F",0)),i.push(new b.Pegasus("White","D",2),new b.Bishop("White","F",2),new b.Pegasus("White","H",2)),e?(i.push(new b.Pawn("White","B",6),new b.Rook("White","B",4),new b.Knight("White","C",3)),i.push(new b.Knight("White","I",3),new b.Rook("White","K",4),new b.Pawn("White","K",6)),i.push(new b.Pawn("White","P",7),new b.Pawn("White","T",8),new b.Pawn("White","X",8),new b.Pawn("White","Z",7)),i.push(new b.Almogaver("White","C",7),new b.Almogaver("White","A",7),new b.Almogaver("White","L",7),new b.Almogaver("White","I",7))):i.push(new b.Pawn("White","B",4),new b.Rook("White","C",3),new b.Rook("White","I",3),new b.Pawn("White","K",4)),i.push(new b.Knight("White","E",3),new b.Knight("White","G",3)),i.push(new b.Elephant("White","D",4),new b.Bishop("White","F",4),new b.Elephant("White","H",4)),i.push(new b.Pawn("White","A",5),new b.Pawn("White","C",5),new b.Elephant("White","E",5),new b.Elephant("White","G",5),new b.Pawn("White","I",5),new b.Pawn("White","L",5)),i.push(new b.Pawn("White","D",6),new b.Bishop("White","F",6),new b.Pawn("White","H",6)),i.push(new b.Pawn("White","E",7),new b.Pawn("White","F",8),new b.Pawn("White","G",7)),i.push(new b.Queen("Black","E",27),new b.Wyvern("Black","F",28)),i.push(new b.Pegasus("Black","D",26),new b.Bishop("Black","F",26),new b.Pegasus("Black","H",26)),e?(i.push(new b.Pawn("Black","B",22),new b.Rook("Black","B",24),new b.Knight("Black","C",25)),i.push(new b.Knight("Black","I",25),new b.Rook("Black","K",24),new b.Pawn("Black","K",22)),i.push(new b.Pawn("Black","P",21),new b.Pawn("Black","T",20),new b.Pawn("Black","X",20),new b.Pawn("Black","Z",21)),i.push(new b.Almogaver("Black","C",21),new b.Almogaver("Black","A",21),new b.Almogaver("Black","I",21),new b.Almogaver("Black","L",21))):i.push(new b.Pawn("Black","B",24),new b.Rook("Black","C",25),new b.Rook("Black","I",25),new b.Pawn("Black","K",24)),i.push(new b.Knight("Black","E",25),new b.Knight("Black","G",25)),i.push(new b.Elephant("Black","D",24),new b.Bishop("Black","F",24),new b.Elephant("Black","H",24)),i.push(new b.Pawn("Black","A",23),new b.Pawn("Black","C",23),new b.Elephant("Black","E",23),new b.Elephant("Black","G",23),new b.Pawn("Black","I",23),new b.Pawn("Black","L",23)),i.push(new b.Pawn("Black","D",22),new b.Bishop("Black","F",22),new b.Pawn("Black","H",22)),i.push(new b.Pawn("Black","E",21),new b.Pawn("Black","F",20),new b.Pawn("Black","G",21)),i}static rookCastleMove(e,i,t,o,s){return"K"==o?"K"==i?s?"White"==t?"ColumnUp":"ColumnDown":"White"==t?"FileUp":"FileDown":"I"==i?s?"White"==t?"FileInvDown":"FileInvUp":"White"==t?"ColumnUp":"ColumnDown":"White"==t?"FileInvUp":"FileInvDown":"E"==i&&"D"==e?"White"==t?"FileDown":"FileUp":"White"==t?"FileUp":"FileDown"}get gameEnd(){return this._mate||this._stalemate||this._draw||this._resigned}get mate(){return this._mate}get stalemate(){return this._stalemate}set draw(e){this._draw=e}get draw(){return this._draw}set resign(e){this._resigned=e}get resigned(){return this._resigned}moves(e){return Object.freeze(this._moves.slice(e))}strMoves(){let t=[];for(let i=0;i<this._moves.length;i+=2){let e=o.csMoves.fullMoveNotation(this._moves[i]);i<this._moves.length-1&&(e+=", "+o.csMoves.fullMoveNotation(this._moves[i+1])),t.push(e)}return t.join("\n")}get lastMove(){return this._lastMove}get preMoveHeuristic(){return this.currentHeuristic}get enPassantCaptureCoordString(){return this._enpassantCaptureCoordString}get resultString(){if(this.gameEnd){if(this._mate||this._resigned)return"w"==this.turn?"0 - 3":"3 - 0";if(this._stalemate)return"w"==this.turn?"1 - 2":"2 - 1";if(this._draw)return"1 - 1";throw new Error("End game exhaustiveCheck fail")}return null}set resultString(e){if(null!=e&&0<e.length)if(this.gameEnd){if(e!=this.resultString)throw new Error(`Incorrect end game value issued: ${e} correct value `+this.resultString)}else switch(e){case"0 - 3":if("w"!=this.turn)throw new Error("Incorrect resign turn: "+e);this.resign=!0;break;case"3 - 0":if("b"!=this.turn)throw new Error("Incorrect resign turn: "+e);this.resign=!0;break;case"1 - 1":this.draw=!0;break;case"null":break;default:throw new Error("Incorrect end game value issued: "+e)}}get movesJSON(){return JSON.stringify(this._moves)}restoreMovesJSON(e){this._moves=JSON.parse(e)}doMove(i,t,e){var o,s;try{var n=V.PositionHelper.parse(i);const a=V.PositionHelper.parse(t),c=this.getPiece(n);if(null==c||null!=e&&c.symbol!=e)console.log("empty piece at "+V.PositionHelper.toString(n)),this._lastMove="";else{(0,y.assertCondition)(c.canMoveTo(this,a),`Piece ${c.symbol} at ${null==(o=c.position)?void 0:o.toString()} move to `+a.toString());const h={piece:c,pos:n,moveTo:a};var r=this.getPiece(a);if(null!=r){(0,y.assertCondition)(c.color!=r.color&&c.canCaptureOn(this,a),`Piece ${c.symbol} at ${null==(s=c.position)?void 0:s.toString()} capture on `+a.toString());var l=G.csPieceTypes.isPawn(c)&&null!=this.specialPawnCapture&&this.specialPawnCapture.isScornfulCapturable()&&this.specialPawnCapture.isScorned(c,a);h.captured=r,h.special=l?a:void 0,this._enpassantCaptureCoordString=null,this.pieceCaptured=!0}else if(G.csPieceTypes.isPawn(c)&&null!=this.specialPawnCapture&&this.specialPawnCapture.isEnPassantCapturable()&&this.specialPawnCapture.isEnPassantCapture(a,c)){const u=this.specialPawnCapture.capturablePiece;h.captured=u,h.special=[u.position[0],u.position[1]],this._enpassantCaptureCoordString=U.csConvert.columnFromIndex(u.position[0])+u.position[1].toString(),this.pieceCaptured=!0}else this._enpassantCaptureCoordString=null,this.pieceCaptured=!1;this.pawnMoved="P"==c.symbol,this.pushMove(h)}}catch(e){console.log(i,t,e)}}doPromotePawn(i,t,o){try{var s,n,r,l="string"==typeof i?V.PositionHelper.parse(i):i,a="string"==typeof t?V.PositionHelper.parse(t):t,c=this.getPiece(l);if(null!=c&&G.csPieceTypes.isPawn(c)){let e;if("string"==typeof o){(0,y.assertCondition)(V.PositionHelper.isPromotionHex(a,c.color),"Promotion hex");const h=V.PositionHelper.hexColor(a);e=this.currentRegainablePieces(h).find(e=>e.symbol==o&&(!G.csPieceTypes.isBishop(e)||e.hexesColor==h)),(0,y.assertNonNullish)(e,"promotion piece")}else e=o;V.PositionHelper.equals(l,a)?(this.pieceCaptured=!1,this.pawnMoved=!0,this._lastMove=V.PositionHelper.toString(a)+"="+o):(s=this.movePieceTo(c,a),n="string"==typeof i?i:V.PositionHelper.toString(l),r="string"==typeof t?t:V.PositionHelper.toString(a),this.setLastMove(void 0,n,s,r,e.symbol)),super.promotePawn(c,e),this.forwardingTurn()}else console.log("empty piece or invalid for promotion at "+V.PositionHelper.toString(l)),this._lastMove=""}catch(e){console.log(e)}}movePieceTo(e,i){var t=G.csPieceTypes.isPawn(e)&&null!=this.specialPawnCapture&&this.specialPawnCapture.isEnPassantCapturable()&&this.specialPawnCapture.isEnPassantCapture(i,e);const o=null!=(s=this.getPiece(i))?s:t?this.specialPawnCapture.capturablePiece:null;var s=null!=o&&G.csPieceTypes.isPawn(e)&&null!=this.specialPawnCapture&&this.specialPawnCapture.isScornfulCapturable()&&this.specialPawnCapture.isScorned(e,i),n=t&&2<Math.abs(o.position[1]-i[1]),r=((this._enpassantCaptureCoordString=null,y.assertCondition)(e.canMoveTo(this,i),`Piece ${e.symbol} at ${null==(r=e.position)?void 0:r.toString()} move to `+i.toString()),null!=o&&((0,y.assertCondition)(e.color!=o.color&&e.canCaptureOn(this,i),`Piece ${e.symbol} at ${null==(r=e.position)?void 0:r.toString()} capture on `+i.toString()),t&&(this._enpassantCaptureCoordString=U.csConvert.columnFromIndex(o.position[0])+o.position[1].toString()),super.capturePiece(o)),null==o?"-":("P"==o.symbol?n?"@@":t||s?"@":"x":s?"@":"x")+o.symbol);return super.movePiece(e,i[0],i[1]),this.pieceCaptured=null!=o,this.pawnMoved="P"==e.symbol,r}castling(e,i,t,o,s,n){super.movePiece(e,i[0],i[1]),super.movePiece(t,o[0],o[1]),void 0!==s&&null!=n&&super.movePiece(s,n[0],n[1]),this.pieceCaptured=!1,this.pawnMoved=!1}doCastling(e,i=0){this.isGrand?(0,y.assertCondition)(U.csTypes.isGrandCastlingString(e),"castling move string"):(0,y.assertCondition)(U.csTypes.isCastlingString(e),"castling move string");var t="w"==this.turn?"White":"Black",o="w"==this.turn?this.wKing:this.bKing,s=e.split("-"),n="R"==s[0][2]?"K":s[0][2],r=s[1][0],l=s[1][1],a=3==s[1].length&&"O"!=s[1][2]?s[1][2]:void 0,s=!(3<s[1].length)&&(3==s[1].length&&"O"==s[1][2]||void 0),c=((0,y.assertCondition)("K"==n||"D"==n,n+" must be King (K) side or Queen (D) side"),this.castlingKingPosition(r)),l=this.castlingRookPosition(r,l,n,s);const h=this.getPiece("K"==n?V.PositionHelper.initialKingSideRookPosition(t,this.isGrand):V.PositionHelper.initialQueenSideRookPosition(t,this.isGrand));if((0,y.assertNonNullish)(c,"king castling position"),(0,y.assertNonNullish)(h,"castling rook piece"),(0,y.assertCondition)(G.csPieceTypes.isRook(h),"castling rook"),(0,y.assertCondition)(!h.moved,"castling rook's not been moved"),(0,y.assertCondition)(h.canMoveTo(this,l,!1),"castling rook movement"),void 0!==a){n=this.castlingRookPosition(r,a,"D",s);const u=this.getPiece(V.PositionHelper.initialQueenSideRookPosition(t,this.isGrand));(0,y.assertNonNullish)(u,"double castling queen side rook"),(0,y.assertCondition)(G.csPieceTypes.isRook(u),"castling queen rook"),(0,y.assertCondition)(!u.moved,"castling queen rook's not been moved"),(0,y.assertCondition)(u.canMoveTo(this,n,!1),"castling queen rook movement"),super.movePiece(u,n[0],n[1])}super.movePiece(o,c[0],c[1]),super.movePiece(h,l[0],l[1]),this.pieceCaptured=!1,this.pawnMoved=!1,this._enpassantCaptureCoordString=null,this._lastMove=e,this.forwardingTurn()}*pieceList(){for(const e of this.whitePieces())yield e.uncapitalizedSymbolPositionString;for(const i of this.blackPieces())yield i.uncapitalizedSymbolPositionString}*threatedPieceStringPositions(){var e="w"==this.turn?this.whitePiecePositions():this.blackPiecePositions(),i="w"==this.turn?"White":"Black";for(const t of e)this.isThreated(t,i)&&(yield V.PositionHelper.toString(t))}*ownThreatedPieceStringPositions(){var e="w"==this.turn?this.blackPiecePositions():this.whitePiecePositions(),i="w"==this.turn?"Black":"White";for(const t of e)this.isThreated(t,i)&&(yield V.PositionHelper.toString(t))}*castlingMoves(e,i){}*castlingStrMoves(e,s){var i=V.PositionHelper.initialQueenSideRookPosition(e,this.isGrand),t=V.PositionHelper.initialKingSideRookPosition(e,this.isGrand);const n=this.getPiece(i),o=this.getPiece(t);if(null!=o&&!o.moved)for(const c of U.csConvert.orthogonalDirections()){var r,l=V.PositionHelper.orthogonalStep(s,c);if(null!=l&&o.canMoveTo(this,l,!1)){let o="KRK-"+U.csConvert.columnFromIndex(s[0])+U.csConvert.columnFromIndex(l[0]);if(9==s[0]&&10==l[0]&&(r=l[1]-t[1],o+=2==r||-2==r?"O":"OO"),yield o,null!=n&&!n.moved){let i,t;if(s[0]==l[0]){i=l[0]+1,t=s[1]>l[1]?l[1]+1:s[1]+1;const h=[i,t];let e;(e=n.canMoveTo(this,h,!1))||(h[0]=l[0]-1,e=n.canMoveTo(this,h,!1)),e&&(yield o="KRR-"+U.csConvert.columnFromIndex(s[0])+U.csConvert.columnFromIndex(l[0])+U.csConvert.columnFromIndex(h[0]))}else{i=l[0],t=s[1]>l[1]?l[1]+2:l[1]-2;const u=[i,t];n.canMoveTo(this,u,!1)&&(yield o="KRR-"+U.csConvert.columnFromIndex(s[0])+U.csConvert.columnFromIndex(l[0])+U.csConvert.columnFromIndex(u[0])),u[0]=s[0],u[1]=s[1]>l[1]?s[1]-2:s[1]+2,n.canMoveTo(this,u,!1)&&(yield o="KRR-"+U.csConvert.columnFromIndex(s[0])+U.csConvert.columnFromIndex(l[0])+U.csConvert.columnFromIndex(u[0]))}}}}if(null!=n&&!n.moved)for(const p of U.csConvert.orthogonalDirections()){var a=V.PositionHelper.orthogonalStep(s,p);null!=a&&n.canMoveTo(this,a,!1)&&(yield"KRD-"+U.csConvert.columnFromIndex(s[0])+U.csConvert.columnFromIndex(a[0]))}}castlingKingPosition(e){var i="w"==this.turn?this.wKing:this.bKing;return(0,y.assertCondition)(U.csTypes.iscastlingColumn(e),`Column: ${e} has to be a king castling column`),i.moved?null:(e=T.kingCastlingPosition(i.color,e),null!=this.hasPiece(e)||this.isThreated(e,i.color)?null:e)}castlingRookPosition(e,i,t,o){var s="w"==this.turn?"White":"Black",n="K"==t?V.PositionHelper.initialKingSideRookPosition(s,this.isGrand):V.PositionHelper.initialQueenSideRookPosition(s,this.isGrand),r=((0,y.assertCondition)(U.csTypes.iscastlingColumn(e),`King column: ${e} has to be a king castling column`),T.rookCastleMove(e,i,s,t,this.isGrand));let l=V.PositionHelper.orthogonalStep(n,r);if("ColumnUp"==r||"ColumnDown"==r)return l=void 0===o&&!this.isGrand||void 0!==o&&!o?V.PositionHelper.orthogonalStep(l,r):l;for(var a=U.csConvert.toColumnIndex(i);l[0]!=a;)l=V.PositionHelper.orthogonalStep(l,r);return l}playerCastlingPositionStatus(e){var i="w"==this.turn?this.wKing:this.bKing;return(0,y.assertCondition)(U.csTypes.iscastlingColumn(e),`Column: ${e} has to be a king castling column`),i.moved?null:(e=("w"==this.turn?T.whiteKingCastleMove:T.blackKingCastleMove)[e],[e=V.PositionHelper.knightJump(i.position,e),null!=this.hasPiece(e)?"occupied":this.isThreated(e,i.color)?"threated":""])}get castlingStatus(){var e=this.wKing.getCastlingStatus(this),i=this.bKing.getCastlingStatus(this).toLowerCase();return"-"==e&&"-"==i?"-":"-"==e?i:"-"==i?e:e+i}playerCastlingStatus(){const e="w"==this.turn?this.wKing:this.bKing;return e.getCastlingStatus(this)}get valueTLPD(){var e;return this.piecePositionsTLPD+" "+this.turn+" "+this.castlingStatus+" "+(null!=(e=null==(e=this.specialPawnCapture)?void 0:e.toString())?e:"-")+" "+this.halfmoveClock.toString()+" "+this.moveNumber.toString()}get piecePositionsTLPD(){let e="/";for(let o=28;0<=o;o--){var s=o%2==0,n=o<=5?7-o:23<=o?o-21:s?1:0,r=o<=5?o+7:23<=o?35-o:s?13:14;let i="",t=0;for(let e=n;e<=r;e+=2){var l=this.getPiece([e,o]);null!=l?(0<t&&(i+=t.toString()),i+=l.uncapitalizedSymbol,t=0):t++}0<i.length&&(e+=o.toString()+":"+i,0<t&&(e+=t.toString()),e+="/")}return e}loadTLPD(i){try{(0,y.assertCondition)(null!=i,"Not empty TLPD"),(0,y.assertCondition)(12<i.trim().length,"Enough TLPD length");var e=i.split(" "),t=((0,y.assertCondition)(2<=e.length,"Piece positions and turn are mandatory"),(0,y.assertCondition)(10<=e[0].length,"Piece positions string"),(0,y.assertCondition)(U.csTypes.isTurn(e[1]),"Correct turn"),e[1]),[o,s]=(super.resetGame(t),this._moves.length=0,u.splitCastlingStatus(e[2]));if(this.restoreTLPDPositions(e[0],o,s),this.halfmoveClock=U.csTypes.isNumber(Number(e[4]))?Number(e[4]):0,isNaN(Number(e[4]))&&null!=e[4]&&"-"!==e[4])throw new TypeError("Invalid halfmove clock value");if(this.moveNumber=U.csTypes.isNumber(Number(e[5]))?Number(e[5]):1,isNaN(Number(e[5]))&&null!=e[5]&&"-"!==e[5])throw new TypeError("Invalid move number");return super.specialPawnCapture=n.parse(this,e[3]),this.initGame(),null}catch(e){return console.log(e),e instanceof Error?(null!=(i=e.name)&&""!=i||(e.name="TLPD"),e.toString()):String(e)}}restoreTLPDPositions(e,i,t){(0,y.assertCondition)(10<=e.length&&"/"==e[0]&&"/"==e[e.length-1],"Valid TLPD string positions: "+e);const o=[];var s,n=[],r=[],e=e.split("/");this.wKing.captured(),this.bKing.captured();for(s of e)if(0<s.length){if(s.startsWith(":")||s.endsWith(":")||1!=(s.match(/:/g)||[]).length)throw new Error("Incorrect line number issued: "+s);var[l,a]=s.split(":"),c=Number(l);if(!(!isNaN(c)&&0<=c&&c<=28))throw new Error("Incorrect line issued: "+l);{var h=0<=c&&c<6?7+c:c<=22?c%2==0?13:14:35-c;let e=0<=c&&c<6?7-c:c<=22?c%2==0?1:0:c-21;for(const w of a){if(e>h)throw new Error("Incorrect TLPD line content");var u=Number(w);if(isNaN(u)){var p=U.csTypes.isPieceName(w)?w:T.convertPieceAliases(w.toUpperCase()),g=w.toUpperCase()==w?"White":"Black";if("K"==p)if("White"==g){if(null!=this.wKing.position)throw new Error("Can't place two White Kings");if(this.wKing.setPositionTo([e,c]),null!=this.hasPiece(this.wKing.position))throw new Error("Can't place White King on the place used by another piece");this.addPiece(this.wKing)}else{if(null!=this.bKing.position)throw new Error("Can't place two Black Kings");if(this.bKing.setPositionTo([e,c]),null!=this.hasPiece(this.bKing.position))throw new Error("Can't place Black King on the place used by another piece");this.addPiece(this.bKing)}else{var d=T.createPiece(p,g,e,c);if(G.csPieceTypes.isRook(d)&&o.push(d),G.csPieceTypes.isPawn(d)&&d.isAwaitingPromotion&&(super.isAwaitingPromotion=!0),null!=this.hasPiece(d.position))throw new Error(`You cannot put a ${g} ${p} there`+", because the hex is already in use; There may be a repeated line in the TLPD");{const m="White"==g?n:r;this.addPiece(d),m.push(d)}}e+=2}else e+=u<<1}}}if(null==this.wKing.position)throw new Error("There must be a White King");if(null==this.bKing.position)throw new Error("There must be a Black King");var P,v=(e,t)=>e.reduce((e,i)=>i.symbol===t?e+1:e,0);for(P of["White","Black"]){const f="White"==P?n:r;let e=v(f,"D");if(1<e)throw new Error(`Too many ${P} Queens`);if(0==e&&this.addRegainablePiece(T.createPiece("D",P)),1<(e=v(f,"V")))throw new Error(`Too many ${P} Wyverns`);if(0==e&&this.addRegainablePiece(T.createPiece("V",P)),2<(e=v(f,"R")))throw new Error(`Too many ${P} Rooks`);for(;e<2;)this.addRegainablePiece(T.createPiece("R",P)),e++;if(2<(e=v(f,"G")))throw new Error(`Too many ${P} Pegasus`);for(;e<2;)this.addRegainablePiece(T.createPiece("G",P)),e++;if(2<(e=v(f,"N")))throw new Error(`Too many ${P} Knights`);for(;e<2;)this.addRegainablePiece(T.createPiece("N",P)),e++;if(3<(e=v(f,"J")))throw new Error(`Too many ${P} Bishops`);{let e={White:0,Black:0,Color:0};for(const C of f.filter(e=>G.csPieceTypes.isBishop(e)))e[C.hexesColor]+=1;if(1<e.White||1<e.Black||1<e.Color)throw new Error(`Too many ${P} Bishops on same color hexes`);0==e.White&&this.addRegainablePiece(new b.Bishop(P,"White")),0==e.Black&&this.addRegainablePiece(new b.Bishop(P,"Black")),0==e.Color&&this.addRegainablePiece(new b.Bishop(P,"Color"))}}this.wKing.castlingStatus=i,this.bKing.castlingStatus=t;for(const k of o)k.setCastlingStatus("White"==k.color?i:t,this.isGrand)}setLastMove(e,i,t,o,s){this._lastMove=(null!=e?e:"")+i+t+o,void 0!==s&&(this._lastMove+="="+s)}forwardingTurn(){super.nextTurn(),"w"===this.turn&&this.moveNumber++,this.pawnMoved||this.pieceCaptured?this.halfmoveClock=0:this.halfmoveClock++,super.prepareCurrentTurn();var e=super.isMoveableTurn();if(e?100<=this.halfmoveClock&&(this._draw=!0):this.checked?this._mate=!0:this._stalemate=!0,this.checked)if(this._mate)this._lastMove+="#";else if(this.isKnightOrCloseCheck)this._lastMove+="^+";else if(this.isSingleCheck)this._lastMove+="+";else{if(!this.isDoubleCheck)throw new Error("never: exhaused check options");this._lastMove+="++"}super.computeHeuristic(this.turn,this.moveNumber,e,this.currentHeuristic)}backwardingTurn(e){0<this.moveNumber&&(super.nextTurn(),"b"===this.turn&&this.moveNumber--,void 0===e.initHalfMoveClock?this.halfmoveClock--:this.halfmoveClock=0,super.prepareCurrentTurn(),super.computeHeuristic(this.turn,this.moveNumber,!0,this.currentHeuristic))}initGame(){super.prepareGame(),this._mate=!1,this._stalemate=!1,this._resigned=!1,this._draw=!1;var e=super.isMoveableTurn();e?100<=this.halfmoveClock&&(this._draw=!0):this.checked?this._mate=!0:this._stalemate=!0,this._lastMove="",super.computeHeuristic(this.turn,this.moveNumber,e,this.currentHeuristic)}pushMove(e){const i={n:this.moveNumber,turn:this.turn,move:e,initHalfMoveClock:0==this.halfmoveClock?1:void 0,specialPawnCapture:null==this.specialPawnCapture?void 0:this.specialPawnCapture.toString(),castlingStatus:o.csMoves.isMoveInfo(e)&&0<=["K","R"].indexOf(e.piece.symbol)?this.playerCastlingStatus():void 0,end:void 0,check:void 0};this.applyMove(e),super.nextTurn(),"w"===this.turn&&this.moveNumber++,o.csMoves.isMoveInfo(e)&&"P"==e.piece.symbol||o.csMoves.isCaptureInfo(e)||o.csMoves.isPromotionInfo(e)?this.halfmoveClock=0:this.halfmoveClock++,super.prepareCurrentTurn();var t=super.isMoveableTurn();if(t){if(100<=this.halfmoveClock)this._draw=!0,i.end="draw";else if(this.checked)if(this.isKnightOrCloseCheck)i.check="^+";else if(this.isSingleCheck)i.check="+";else{if(!this.isDoubleCheck)throw new Error("never: exhaused check options");i.check+="++"}}else this.checked?(this._mate=!0,i.end="mate"):(this._stalemate=!0,i.end="stalemate");this._moves.push(i),super.computeHeuristic(this.turn,this.moveNumber,t,this.currentHeuristic),this._lastMove=o.csMoves.moveNotation(e)}popMove(){if(0<this._moves.length){const e=this._moves.pop();super.nextTurn(),this._draw=!1,this._resigned=!1,this._mate=!1,this._stalemate=!1,this.undoMove(e.move,"w"==this.turn?"White":"Black"),null!=e.castlingStatus&&o.csMoves.isMoveInfo(e.move)&&("R"==e.move.piece.symbol?e.move.piece.setCastlingStatus(e.castlingStatus,this.isGrand):"K"==e.move.piece.symbol&&(e.move.piece.castlingStatus=e.castlingStatus)),void 0===e.specialPawnCapture?this.specialPawnCapture=null:this.specialPawnCapture=n.parse(this,e.specialPawnCapture),"b"===this.turn&&this.moveNumber--,void 0===e.initHalfMoveClock?this.halfmoveClock--:this.halfmoveClock=0,super.prepareCurrentTurn(),super.computeHeuristic(this.turn,this.moveNumber,!0,this.currentHeuristic),this._lastMove=o.csMoves.moveNotation(e.move)}}applyMove(e){var i,t;o.csMoves.isCastlingInfo(e)?this.doCastling(o.csMoves.moveNotation(e)):((i=e.piece).position,o.csMoves.isMoveInfo(e)?(t=e.moveTo,o.csMoves.isCaptureInfo(e)&&super.capturePiece(e.captured),super.movePiece(i,t[0],t[1]),o.csMoves.isPromotionInfo(e)&&super.promotePawn(i,e.promoted)):(super.promotePawn(i,e.promoted),this.pieceCaptured=!1,this.pawnMoved=!0))}undoMove(e,i){o.csMoves.isCastlingInfo(e)?this.undoCastling(o.csMoves.moveNotation(e),i):o.csMoves.isMoveInfo(e)?(o.csMoves.isPromotionInfo(e)&&super.undoPromotePawn(e.piece,e.promoted),super.undoPieceMove(e.piece,e.moveTo[0],e.moveTo[1]),o.csMoves.isCaptureInfo(e)&&(i=void 0===e.special?e.moveTo:e.special,super.undoCapturePiece(e.captured,i[0],i[1]))):super.undoPromotePawn(e.piece,e.promoted)}undoCastling(e,i){var t=e=>{for(const i of e)return i},o=this.isGrand,s=e[2];e[4];const n=U.csConvert.toColumnIndex(e[5]),r="White"==i?this.wKing:this.bKing;var l="White"==i?V.PositionHelper.whiteKingInitPosition:V.PositionHelper.blackKingInitPosition;const a="D"==s?V.PositionHelper.initialQueenSideRookPosition(i,o):V.PositionHelper.initialKingSideRookPosition(i,o),c="White"==i?this.whitePiecesFulfil:this.blackPiecesFulfil,h=t(c(e=>G.csPieceTypes.isRook(e)&&null!=e.position&&e.position[0]==n&&null!=V.PositionHelper.isOrthogonally(e.position,a)));if(super.undoPieceMove(r,l[0],l[1]),super.undoPieceMove(h,a[0],a[1]),r.castlingStatus="RKR",h.setCastlingStatus("RKR",o),"R"==s){const u=U.csConvert.toColumnIndex(e[6]),p=V.PositionHelper.initialQueenSideRookPosition(i,o),g=t(c(e=>G.csPieceTypes.isRook(e)&&null!=e.position&&e.position[0]==u&&null!=V.PositionHelper.isOrthogonally(e.position,p)));super.undoPieceMove(g,p[0],p[1]),g.setCastlingStatus("RKR",o)}}applyMoveSq(e){const i=e.split(/\r?\n/);for(let e=0;e<i.length;e++){var t=i[e].split(/[.,]\s?/);(0,y.assertCondition)(1<t.length,"numbered plays"),this.applyStringMove(t[1]),e<i.length-1?((0,y.assertCondition)(3==t.length,"both players on each numbered play"),this.applyStringMove(t[2])):3==t.length&&this.applyStringMove(t[2])}}applyStringMove(e,i=!1){var t=(e,i=0)=>{let t=i;for(;t<e.length;){var o=e.charCodeAt(t);if(!(48<=o&&o<58||65<=o&&o<91||97<=o&&o<123))return t;t++}return t},o=e=>V.PositionHelper.isValidPosition(V.PositionHelper.parse(e));if(i&&(0,y.assertCondition)(4<=e.length,"Moviment length must be at least of 4 chars"),!e.startsWith("KR")||"-"!=e[3]&&"–"!=e[3]){var s,n=t(e),r=U.csTypes.isPieceName(e[0])&&U.csTypes.isColumn(e[1])?e[0]:"P",l=e.slice("P"==r?0:1,n),a=(i&&((0,y.assertCondition)(n<e.length-1,"Moviment divided into parts"),(0,y.assertCondition)(o(l),"Initial hex")),"@"==e.charAt(n)&&"@"==e.charAt(n+1)?"@@":e.charAt(n));"="==a?(s=e[n+1],i&&(0,y.assertCondition)("P"==r,"Promoting a pawn"),this.doPromotePawn(l,l,s)):(i&&(0,y.assertCondition)(n<e.length-2,"Movement destination"),t=t(e,s=n+a.length),n=U.csTypes.isPieceName(e[s])&&U.csTypes.isColumn(e[s+1])?e[s]:void 0,s=e.slice(void 0===n?s:s+1,t),i&&((0,y.assertCondition)(o(s),"Destination hex"),(0,y.assertCondition)(void 0===n||"-"!=a&&"–"!=a,"Captured piece")),t<e.length&&"="==e[t]?(o=e[t+1],i&&(0,y.assertCondition)("P"==r,"Promoting a pawn"),this.doPromotePawn(l,s,o)):this.doMove(l,s,r))}else{n="–"==e[3]?e.replace("–","-"):e;if(!(!i||!this.isGrand&&U.csTypes.isCastlingString(n)||this.isGrand&&U.csTypes.isGrandCastlingString(n)))throw new Error("never: incorrect castling move: "+n);this.doCastling(n,i)}}}(t.Game=T).whiteKingCastleMove={I:"LineUp-FileUp",H:"LineUp-ColumnUp",F:"LineInvUp-ColumnUp",E:"LineInvUp-FileInvUp",D:"TransversalLineDec-FileInvUp"},T.blackKingCastleMove={I:"LineDown-FileDown",H:"LineDown-ColumnDown",F:"LineInvDown-ColumnDown",E:"LineInvDown-FileInvDown",D:"TransversalLineDec-FileInvDown"}},{"./cescacs.moves":2,"./cescacs.piece":3,"./cescacs.positionHelper":4,"./cescacs.types":5,"./ts.general":6}],2:[function(e,i,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.csMoves=void 0;const s=e("./cescacs.types"),n=e("./cescacs.positionHelper");function r(e){return!(void 0===e.side||void 0===e.col||void 0===e.rPos||void 0===e.kRook&&void 0===e.qRook||"R"==e.side&&void 0!==e.r2Pos)}function l(e){return void 0!==e.piece&&void 0!==e.prPos&&void 0!==e.promoted}function a(e){return void 0!==e.piece&&void 0!==e.pos&&void 0!==e.moveTo}function c(e){return void 0!==e.captured}function o(i){if(r(i))return t=void 0!==i.r2Pos?s.csConvert.columnFromIndex(i.r2Pos[0]):"K"==i.side&&"H"==i.col&&10==i.rPos[0]?5==i.rPos[1]||23==i.rPos[1]?"O":7==i.rPos[1]||21==i.rPos[1]?"OO":"":"","KR"+i.side+"-"+i.col+s.csConvert.columnFromIndex(i.rPos[0])+t;if(a(i)){var t=("P"==i.piece.symbol?"":i.piece.symbol)+n.PositionHelper.toString(i.pos),o=l(i)?"="+i.promoted.symbol:"";let e;return t+(e=c(i)?void 0!==i.special?n.PositionHelper.equals(i.moveTo,i.special)||2==Math.abs(i.special[1]-i.moveTo[1])?"@":"@@":"P"==i.captured.symbol?"×":"×"+i.captured.symbol:"-")+n.PositionHelper.toString(i.moveTo)+o}if(l(i))return n.PositionHelper.toString(i.prPos)+"="+i.promoted.symbol;throw new TypeError("must be a move notation")}(e=t.csMoves||(t.csMoves={})).isCastlingInfo=r,e.isPromotionInfo=l,e.isMoveInfo=a,e.isCaptureInfo=c,e.fullMoveNotation=function(e){var i=null!=(i=e.check)?i:"mate"==e.end?"#":"";return("w"==e.turn?e.n+". ":"")+o(e.move)+i},e.endText=function(e,i){if(void 0===e.end)return"";switch(e.end){case"mate":case"resigned":return"b"==i?"3 - 0":"0 - 3";case"stalemate":return"b"==i?"2 - 1":"1 - 2";case"draw":return"1 - 1";default:var t=e.end;throw new Error(t)}},e.moveNotation=o},{"./cescacs.positionHelper":4,"./cescacs.types":5}],3:[function(e,i,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.csPieceTypes=t.Pawn=t.Almogaver=t.Elephant=t.Bishop=t.Knight=t.Pegasus=t.Rook=t.Wyvern=t.Queen=t.King=t.Piece=void 0;const P=e("./cescacs.types"),v=e("./cescacs.positionHelper"),a=e("./ts.general");class o{constructor(e,i,t){if(this.color=e,null==i)this._position=null;else{if(null==t)throw new TypeError("Line shoud be defined when column is");this._position=v.PositionHelper.fromBoardPosition(i,t)}}static isRegainablePiece(e){switch(e){case"D":case"V":case"R":case"G":case"N":case"J":return!0;default:return!1}}get position(){return this._position}setPositionTo(e){if(null!=this._position)throw new Error("Piece can't be reassigned to a new position");this._position=e}moveTo(e,i){null!=this._position&&(this._position[0]=e,this._position[1]=i)}get pin(){return this._pin}set pin(e){this._pin=e}get hasOrthogonalAttack(){return"R"==this.symbol||"V"==this.symbol||"D"==this.symbol}get hasDiagonalAttack(){return"J"==this.symbol||"G"==this.symbol||"D"==this.symbol}get hasKnightJumpAttack(){return"N"==this.symbol||"V"==this.symbol||"G"==this.symbol}get hasOnlyCloseAttack(){return"P"==this.symbol||"E"==this.symbol||"M"==this.symbol||"K"==this.symbol}get isRegainable(){return o.isRegainablePiece(this.symbol)}toString(){var e;return this.uncapitalizedSymbol+(null==(e=this.position)?void 0:e.toString())}get uncapitalizedSymbol(){return"White"==this.color?this.symbol:this.symbol.toLowerCase()}get symbolPositionString(){return this.symbol+(null==this.position?"":v.PositionHelper.toString(this.position))}get uncapitalizedSymbolPositionString(){return this.uncapitalizedSymbol+(null==this.position?"":v.PositionHelper.toString(this.position))}canMoveTo(e,i){return v.PositionHelper.positionIteratorIncludes(this.moves(e),i)}canCaptureOn(e,i){return this.canMoveTo(e,i)}captured(){(0,a.assertNonNullish)(this._position,"Don't capture again the piece"),this._position=null}*blockThreat(e,i){yield*v.PositionHelper.positionIteratorIntersection(this.moves(e),i)}*knightMoves(e,i=!1){if(null!=this._position&&null==this.pin)for(const o of v.PositionHelper.knightMoves(this._position)){var t;!i&&null!=(t=e.hasPiece(o))&&t===this.color||(yield o)}}*orthogonalMoves(i,t=!1){if(null!=this._position){var e=null==this.pin?null:P.csTypes.isOrthogonalOrientation(this.pin)?this.pin:[];for(const s of null!=e?e:P.csConvert.orthogonalDirections()){const n=v.PositionHelper.orthogonalRide(this._position,s);let e=n.next();for(;0==e.done;){var o=i.hasPiece(e.value);e=null==o?(yield e.value,n.next()):(!t&&o===this.color||(yield e.value),n.return())}}}}*diagonalMoves(i,t=!1){if(null!=this._position){var e=null==this.pin?null:P.csTypes.isDiagonalOrientation(this.pin)?this.pin:[];for(const s of null!=e?e:P.csConvert.diagonalDirections()){const n=v.PositionHelper.diagonalRide(this._position,s);let e=n.next();for(;!e.done;){var o=i.hasPiece(e.value);e=null==o?(yield e.value,n.next()):(!t&&o===this.color||(yield e.value),n.return())}}}}orthogonalStep(e,i,t=!0,o=!1){return null!=this._position?(null!=this.pin&&P.csTypes.isOrthogonalOrientation(this.pin)&&this.pin,(null==this._pin||this._pin.includes(i))&&null!=(i=v.PositionHelper.orthogonalStep(this._position,i))?(e=e.hasPiece(i),o||null==e||t&&e!==this.color?i:null):null):null}diagonalStep(e,i,t=!0,o=!1){return null!=this._position&&(null==this._pin||this._pin.includes(i))&&null!=(i=v.PositionHelper.diagonalStep(this._position,i))?(e=e.hasPiece(i),o||null==e||t&&e!==this.color?i:null):null}canMoveOrthogonallyTo(e,i,t=!0){if(null!=this.position){var o=v.PositionHelper.isOrthogonally(this.position,i);if(null!=o&&(null==this._pin||this._pin.includes(o))){var s=e.hasPiece(i);if(null==s||t&&s!=this.color)for(const n of v.PositionHelper.orthogonalRide(this.position,o)){if(v.PositionHelper.equals(i,n))return!0;if(null!=e.hasPiece(n))return!1}}}return!1}canMoveDiagonallyTo(e,i,t=!0){if(null!=this.position){var o=v.PositionHelper.isDiagonally(this.position,i);if(null!=o&&(null==this._pin||this._pin.includes(o))){var s=e.hasPiece(i);if(null==s||t&&s!=this.color)for(const n of v.PositionHelper.diagonalRide(this.position,o)){if(v.PositionHelper.equals(i,n))return!0;if(null!=e.hasPiece(n))return!1}}}return!1}}class s extends(t.Piece=o){constructor(e){super(e),this.symbol="K",this.value=0,this._moved=!1,this.checkPosition=null}setPositionTo(e){super.setPositionTo(e),this._moved=!this.isInitialPosition}setToInitialPosition(){super.setPositionTo(this.initialPosiition),this._moved=!1}get checked(){return null!=this.checkPosition}get moved(){return this._moved}set castlingStatus(e){this._moved=this._moved||"-"==e}getCastlingStatus(e){var i;return this._moved?"-":(i=e.getPiece(v.PositionHelper.initialKingSideRookPosition(this.color,e.isGrand)),e=e.getPiece(v.PositionHelper.initialQueenSideRookPosition(this.color,e.isGrand)),null!=i&&i.color==this.color&&w.isRook(i)&&!i.moved?null!=e&&e.color==this.color&&w.isRook(e)&&!e.moved?"RKR":"KR":null!=e&&e.color==this.color&&w.isRook(e)&&!e.moved?"KR":"K")}moveTo(e,i){super.moveTo(e,i),this._moved=!0}*moves(e){if(this.checked){(0,a.assertNonNullish)(this.position),(0,a.assertNonNullish)(this.checkPosition);for(const n of P.csConvert.orthogonalDirections()){var i,t=v.PositionHelper.orthogonalStep(this.position,n);null==t||null!=this.pin&&this.pin.includes(n)&&!P.csTypes.isCheckAttackPos(this.checkPosition,t)||null!=(i=e.hasPiece(t))&&i==this.color||e.isThreated(t,this.color)||(yield t)}for(const r of P.csConvert.diagonalDirections()){var o,s=v.PositionHelper.diagonalStep(this.position,r);null==s||null!=this.pin&&this.pin.includes(r)&&!P.csTypes.isCheckAttackPos(this.checkPosition,s)||null!=(o=e.hasPiece(s))&&o==this.color||e.isThreated(s,this.color)||(yield s)}}else for(const l of this.attemptMoves(e))e.isThreated(l,this.color)||(yield l)}markThreats(e){for(const i of this.attemptMoves(e,!0))e.isThreated(i,this.color)||e.setThreat(i,this.color)}computeCheckAndPins(t){this.checkPosition=null,console.log(`Compute ${this.color} pins`);for(const i of v.PositionHelper.knightMoves(this.position)){var e=t.getPiece(i);null!=e&&e.color!=this.color&&e.hasKnightJumpAttack&&this.setKnightOrCloseAttack(i)}for(const l of P.csConvert.orthogonalDirections()){const a=v.PositionHelper.orthogonalRide(this.position,l);let e=a.next(),i=!0;for(;!e.done;){var o=e.value;const c=t.getPiece(o);if(null==c)i=!1,e=a.next();else{if(c.color!=this.color)i?c.hasOrthogonalAttack?this.setKnightOrCloseAttack(o,l):c.hasOnlyCloseAttack&&c.canCaptureOn(t,this.position)&&this.setKnightOrCloseAttack(o):c.hasOrthogonalAttack&&this.setOrthogonalAtack(o,l);else{const h=v.PositionHelper.orthogonalRide(o,l);let e=h.next();for(;!e.done;){var s=e.value,s=t.getPiece(s);e=null==s?h.next():(s.color!=this.color&&s.hasOrthogonalAttack&&(c.pin=P.csConvert.getOrthogonalOrientation(l)),h.return())}}e=a.return()}}}for(const u of P.csConvert.diagonalDirections()){const p=v.PositionHelper.diagonalRide(this.position,u);let e=p.next(),i=!0;for(;!e.done;){var n=e.value;const g=t.getPiece(n);if(null==g)i=!1,e=p.next();else{if(g.color!=this.color)i?g.hasDiagonalAttack?this.setKnightOrCloseAttack(n,u):g.hasOnlyCloseAttack&&g.canCaptureOn(t,this.position)&&this.setKnightOrCloseAttack(n):g.hasDiagonalAttack&&this.setDiagonalAtack(n,u);else{const d=v.PositionHelper.diagonalRide(n,u);let e=d.next();for(;!e.done;){var r=e.value,r=t.getPiece(r);e=null==r?d.next():(r.color!=this.color&&r.hasDiagonalAttack&&(g.pin=P.csConvert.getDiagonalOrientation(u)),d.return())}}e=p.return()}}}}isKnightOrCloseCheck(){return null!=this.checkPosition&&P.csTypes.isPosition(this.checkPosition)}isSingleCheck(){return null!=this.checkPosition&&P.csTypes.isSingleCheck(this.checkPosition)}isDoubleCheck(){return null!=this.checkPosition&&!P.csTypes.isPosition(this.checkPosition)&&!P.csTypes.isSingleCheck(this.checkPosition)}get checkThreat(){return null!=this.checkPosition?P.csTypes.isPosition(this.checkPosition)?this.checkPosition:P.csTypes.isSingleCheck(this.checkPosition)?this.checkPosition.p:null:null}getSingleCheckBlockingPositions(e){const i=[];if((0,a.assertNonNullish)(this.position),P.csTypes.isSingleCheck(this.checkPosition)){var t=this.checkPosition.d;if(P.csTypes.isDiagonalDirection(t))for(const o of v.PositionHelper.diagonalRide(this.position,t)){if(null!=e.hasPiece(o))break;i.push(o)}else if(P.csTypes.isOrthogonalDirection(t))for(const s of v.PositionHelper.orthogonalRide(this.position,t)){if(null!=e.hasPiece(s))break;i.push(s)}}return i}setOrthogonalAtack(e,i){if(null!=this.checkPosition)if(P.csTypes.isPosition(this.checkPosition))this.checkPosition=[this.checkPosition,e,null],this.pin=P.csConvert.getOrthogonalOrientation(i);else{if(!P.csTypes.isSingleCheck(this.checkPosition))throw new Error("Triple check situation can't be achieved in the course of a game");this.checkPosition=[this.checkPosition.p,e,P.csConvert.getOrthogonalOrientation(i)]}else this.checkPosition={p:e,d:i},this.pin=P.csConvert.getOrthogonalOrientation(i)}setDiagonalAtack(e,i){if(null!=this.checkPosition)if(P.csTypes.isPosition(this.checkPosition))this.checkPosition=[this.checkPosition,e,null],this.pin=P.csConvert.getDiagonalOrientation(i);else{if(!P.csTypes.isSingleCheck(this.checkPosition))throw new Error("Triple check situation can't be achieved in the course of a game");this.checkPosition=[this.checkPosition.p,e,P.csConvert.getDiagonalOrientation(i)]}else this.checkPosition={p:e,d:i},this.pin=P.csConvert.getDiagonalOrientation(i)}setKnightOrCloseAttack(e,i){if(null!=this.checkPosition){if(P.csTypes.isPosition(this.checkPosition))throw new Error("Double knight or close check situation can't be achieved in the course of a game");if(!P.csTypes.isSingleCheck(this.checkPosition))throw new Error("Triple check situation can't be reached along a game");null==i?this.checkPosition=[this.checkPosition.p,e,null]:P.csTypes.isOrthogonalDirection(i)?this.checkPosition=[this.checkPosition.p,e,P.csConvert.getOrthogonalOrientation(i)]:this.checkPosition=[this.checkPosition.p,e,P.csConvert.getDiagonalOrientation(i)]}else this.checkPosition=e,null!=i&&(this.pin=P.csTypes.isOrthogonalDirection(i)?P.csConvert.getOrthogonalOrientation(i):P.csConvert.getDiagonalOrientation(i))}*orthogonalStepList(e,i){(0,a.assertNonNullish)(this.position);for(const s of P.csConvert.orthogonalDirections()){var t,o=v.PositionHelper.orthogonalStep(this.position,s);null==o||!i&&null!=(t=e.hasPiece(o))&&t===this.color||(yield o)}}*diagonalStepList(e,i){(0,a.assertNonNullish)(this.position);for(const s of P.csConvert.diagonalDirections()){var t,o=v.PositionHelper.diagonalStep(this.position,s);null==o||!i&&null!=(t=e.hasPiece(o))&&t===this.color||(yield o)}}*attemptMoves(e,i=!1){yield*this.orthogonalStepList(e,i),yield*this.diagonalStepList(e,i),this._moved||this.checked||(yield*this.knightMoves(e))}get initialPosiition(){return"White"==this.color?v.PositionHelper.whiteKingInitPosition:v.PositionHelper.blackKingInitPosition}get isInitialPosition(){return null!=this.position&&(8==this.position[0]&&("White"==this.color&&1==this.position[1]||"Black"==this.color&&27==this.position[1]))}}t.King=s;class n extends o{constructor(){super(...arguments),this.symbol="D",this.value=15}*moves(e){yield*this.orthogonalMoves(e),yield*this.diagonalMoves(e)}canMoveTo(e,i){return super.canMoveOrthogonallyTo(e,i)||super.canMoveDiagonallyTo(e,i)}markThreats(e){for(const i of this.orthogonalMoves(e,!0))e.setThreat(i,this.color);for(const t of this.diagonalMoves(e,!0))e.setThreat(t,this.color)}}t.Queen=n;class r extends o{constructor(){super(...arguments),this.symbol="V",this.value=14}*moves(e){yield*this.orthogonalMoves(e),yield*this.knightMoves(e)}canMoveTo(e,i){return super.canMoveOrthogonallyTo(e,i)||v.PositionHelper.positionIteratorIncludes(this.knightMoves(e),i)}markThreats(e){for(const i of this.orthogonalMoves(e,!0))e.setThreat(i,this.color);for(const t of this.knightMoves(e,!0))e.setThreat(t,this.color)}}t.Wyvern=r;class l extends o{constructor(e,i,t){super(e),this.symbol="R",this.value=11,null!=i&&null!=t?(super.setPositionTo([P.csConvert.toColumnIndex(i),t]),this._moved=this.defaultMoveInitialitzation()):this._moved=!1}setPositionTo(e){super.setPositionTo(e),this._moved=this.defaultMoveInitialitzation()}isQueenSide(e){return null!=this.position&&(e?3==this.position[0]&&("White"==this.color?4==this.position[1]:24==this.position[1]):4==this.position[0]&&("White"==this.color?3==this.position[1]:25==this.position[1]))}isKingSide(e){return null!=this.position&&(e?11==this.position[0]&&("White"==this.color?4==this.position[1]:24==this.position[1]):10==this.position[0]&&("White"==this.color?3==this.position[1]:25==this.position[1]))}*moves(e){yield*this.orthogonalMoves(e)}moveTo(e,i){super.moveTo(e,i),this._moved=!0}canMoveTo(e,i,t=!0){return super.canMoveOrthogonallyTo(e,i,t)}markThreats(e){for(const i of this.orthogonalMoves(e,!0))e.setThreat(i,this.color)}setCastlingStatus(e,i){this._moved=this.isQueenSide(i)?!e.startsWith("R"):!this.isKingSide(i)||!e.endsWith("R")}get moved(){return this._moved}defaultMoveInitialitzation(){return!(this.isQueenSide(!1)||this.isKingSide(!1)||this.isQueenSide(!0)||this.isKingSide(!0))}}t.Rook=l;class c extends o{constructor(){super(...arguments),this.symbol="G",this.value=8}*moves(e){yield*this.diagonalMoves(e),yield*this.knightMoves(e)}canMoveTo(e,i){return super.canMoveDiagonallyTo(e,i)||v.PositionHelper.positionIteratorIncludes(this.knightMoves(e),i)}markThreats(e){for(const i of this.diagonalMoves(e,!0))e.setThreat(i,this.color);for(const t of this.knightMoves(e,!0))e.setThreat(t,this.color)}}t.Pegasus=c;class h extends o{constructor(){super(...arguments),this.symbol="N",this.value=4}*moves(e){if(yield*this.knightMoves(e),null!=this.position&&null==this.pin)for(const t of P.csConvert.knightDirections()){var i=v.PositionHelper.knightJump(this.position,t);null==i||null!=e.hasPiece(i)||null!=(i=v.PositionHelper.knightJump(i,t))&&null==e.hasPiece(i)&&(yield i)}}canCaptureOn(e,i){return v.PositionHelper.positionIteratorIncludes(this.knightMoves(e),i)}markThreats(e){for(const i of this.knightMoves(e,!0))e.setThreat(i,this.color)}}t.Knight=h;class u extends o{constructor(e,i,t){if(super(e),this.symbol="J",this.value=3,P.csTypes.isColumn(i)&&null!=t)super.setPositionTo([P.csConvert.toColumnIndex(i),t]),this.hexesColor=v.PositionHelper.hexColor(this.position);else{if(!P.csTypes.isHexColor(i))throw new TypeError("Bishop constructor error");this.hexesColor=i}}*moves(e){yield*this.diagonalMoves(e)}canMoveTo(e,i){return super.canMoveDiagonallyTo(e,i)}markThreats(e){for(const i of this.diagonalMoves(e,!0))e.setThreat(i,this.color)}}t.Bishop=u;class p extends o{constructor(){super(...arguments),this.symbol="E",this.value=2}*moves(e,i=!1){var t,o,s,n,r,l,a=this.position;if(null!=a){const c=this.pin;null!=c&&("ColumnUp"!=c[0]||"ColumnDown"!=c[1])||null!=(t=v.PositionHelper.orthogonalStep(a,this.ownOrthogonalDirection))&&(null==(o=e.hasPiece(t))?(yield t,null==(s=v.PositionHelper.orthogonalStep(t,this.ownOrthogonalDirection))||null!=(n=e.hasPiece(s))&&!i&&n==this.color||(yield s)):!i&&o==this.color||(yield t));for(const h of["LineUp","LineInvUp","LineDown","LineInvDown"])null!=c&&!c.includes(h)||null==(r=v.PositionHelper.diagonalStep(a,h))||null!=(l=e.hasPiece(r))&&!i&&l==this.color||(yield r)}}markThreats(e){for(const i of this.moves(e,!0))e.setThreat(i,this.color)}get ownOrthogonalDirection(){return"White"===this.color?"ColumnUp":"ColumnDown"}}t.Elephant=p;class g extends o{constructor(){super(...arguments),this.symbol="M",this.value=2}*moves(e,i=!1,t=!1){var o,s,n,r=this.position;if(null!=r){const l=this.pin;if(!i)for(const a of P.csConvert.orthogonalDirections())null!=l&&!l.includes(a)||null!=(o=v.PositionHelper.orthogonalStep(r,a))&&null==e.hasPiece(o)&&null!=(o=v.PositionHelper.orthogonalStep(o,a))&&null==e.hasPiece(o)&&(yield o);for(const c of P.csConvert.diagonalDirections())null!=l&&!l.includes(c)||null==(s=v.PositionHelper.diagonalStep(r,c))||null==(n=e.hasPiece(s))||n===this.color&&!t||(yield s)}}canCaptureOn(e,i){return v.PositionHelper.positionIteratorIncludes(this.moves(e,!0,!1),i)}markThreats(e){for(const i of this.moves(e,!0,!0))e.setThreat(i,this.color)}}t.Almogaver=g;class d extends o{constructor(){super(...arguments),this.symbol="P",this.value=1}*moves(e,i=!1,t=!1){var o,s,n=this.position;if(null!=n){const a=this.pin;if(!i){var r,l,i=this.ownOrthogonalStraightDirection;null!=a&&("ColumnUp"!=a[0]||"ColumnDown"!=a[1])||null!=(r=v.PositionHelper.orthogonalStep(n,i))&&null==e.hasPiece(r)&&(yield r,null!=(r=v.PositionHelper.orthogonalStep(r,i))&&null==e.hasPiece(r)&&(yield r,this.hasTripleStep(e.isGrand)&&null!=(r=v.PositionHelper.orthogonalStep(r,i))&&null==e.hasPiece(r)&&(yield r)));for(const h of this.ownOrthogonalAlternateDirections)null!=a&&!a.includes(h)||null!=(l=v.PositionHelper.orthogonalStep(n,h))&&null==e.hasPiece(l)&&(yield l)}const c=e.specialPawnCapture;null!=c&&c.isScornfulCapturable()&&c.isScorned(this)&&(null==this.pin||null!=(i=v.PositionHelper.isOrthogonally(n,c.capturablePiece.position))&&this.pin.includes(i))&&(yield c.capturablePiece.position);for(const u of this.ownCaptureDirections)null!=a&&!a.includes(u)||null!=(o=v.PositionHelper.diagonalStep(n,u))&&(null!=(s=e.hasPiece(o))?!t&&s==this.color||(yield o):null!=c&&c.isEnPassantCapturable()&&c.isEnPassantCapture(o)&&(yield o))}}promoteTo(e){(0,a.assertNonNullish)(this.position,"Pawn to promote is not captured"),(0,a.assertCondition)(v.PositionHelper.isPromotionHex(this.position,this.color),"Promotion hex "+v.PositionHelper.toString(this.position)),e.setPositionTo(this.position),this.captured()}get isAwaitingPromotion(){return null!=this.position&&v.PositionHelper.isPromotionHex(this.position,this.color)}canCaptureOn(e,i){return v.PositionHelper.positionIteratorIncludes(this.moves(e,!0,!1),i)}markThreats(e){for(const i of this.moves(e,!0,!0))e.setThreat(i,this.color)}hasTripleStep(e){var i,t=this.position;return null!=t&&(3<(i=t[0])&&i<7||3==i&&!e?t[1]==("White"==this.color?i+1:27-i):7<i&&i<11||11==i&&!e?t[1]==("White"==this.color?15-i:13+i):!!e&&(2==i||12==i?t[1]==("White"==this.color?5:23):(3==i||11==i)&&t[1]==("White"==this.color?6:22)))}get ownOrthogonalStraightDirection(){return"White"===this.color?"ColumnUp":"ColumnDown"}get ownOrthogonalAlternateDirections(){return"White"===this.color?["FileUp","FileInvUp"]:["FileDown","FileInvDown"]}get ownCaptureDirections(){return"White"==this.color?["LineUp","LineInvUp"]:["LineDown","LineInvDown"]}}var w;t.Pawn=d,(e=w=t.csPieceTypes||(t.csPieceTypes={})).isKing=function(e){return"K"==e.symbol},e.isQueen=function(e){return"D"==e.symbol},e.isWyvern=function(e){return"V"==e.symbol},e.isRook=function(e){return"R"==e.symbol},e.isPegasus=function(e){return"G"==e.symbol},e.isKnight=function(e){return"N"==e.symbol},e.isBishop=function(e){return"J"==e.symbol},e.isElephant=function(e){return"E"==e.symbol},e.isPawn=function(e){return"P"==e.symbol},e.isAlmogaver=function(e){return"M"==e.symbol}},{"./cescacs.positionHelper":4,"./cescacs.types":5,"./ts.general":6}],4:[function(e,i,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.PositionHelper=void 0;const s=e("./cescacs.types");class n{static equals(e,i){return e[0]===i[0]&&e[1]===i[1]}static toString(e){return s.csConvert.columnFromIndex(e[0])+e[1].toString()}static positionKey(e){return e[0].toString()+"-"+e[1].toString()}static parse(e){if(e){const t=e.trim().toUpperCase();e=t.length;if(2<=e&&e<=3){e=t[0];if(s.csTypes.isColumn(e)){var i=parseInt(t.slice(1));if(s.csTypes.isLine(i))return[s.csConvert.toColumnIndex(e),i];throw new RangeError("Invalid line value: "+i)}throw new RangeError("Invalid column: "+e)}throw new RangeError("Invalid coordinates leght: "+t)}throw new RangeError("Empty string for coordinates value")}static fromBoardPosition(e,i,t=!1){e=[e=s.csTypes.isColumn(e)?s.csConvert.toColumnIndex(e):e,i];if(t&&!n.isValidPosition(e))throw new RangeError("Invalid position: "+e);return e}static isValidPosition(e){return s.csTypes.isPosition(e)&&n.isEvenLinesColumnIndex(e[0])==(e[1]%2==0)&&n.isOnBoard(e[0],e[1])}static get whiteKingInitPosition(){return[8,1]}static get blackKingInitPosition(){return[8,27]}static initialQueenSideRookPosition(e,i){return i?"White"==e?[3,4]:[3,24]:"White"==e?[4,3]:[4,25]}static initialKingSideRookPosition(e,i){return i?"White"==e?[11,4]:[11,24]:"White"==e?[10,3]:[10,25]}static isPromotionPos(e,i,t){return i==(e<=7?"White"==t?21+e:7-e:"White"==t?35-e:e-7)}static isPromotionHex(e,i){var t=e[0];return e[1]==(t<=7?"White"==i?21+t:7-t:"White"==i?35-t:t-7)}static promotionDistance(e,i){var t=e[0];return"White"==i?(t<=7?21+t:35-t)-e[1]:e[1]-(t<=7?7-t:t-7)}static hexColor(e){return n.lineHexColor(e[1])}static lineHexColor(e){switch(e%3){case 0:return"Black";case 1:return"White";case 2:return"Color";default:throw new Error}}static isOrthogonally(e,i){i=[i[0]-e[0],i[1]-e[1]];return 0==i[0]?0!=i[1]&&i[1]%2==0?0<i[1]?"ColumnUp":"ColumnDown":null:0<i[0]?i[0]==i[1]?"FileUp":i[0]==-i[1]?"FileDown":null:i[0]==i[1]?"FileInvDown":i[0]==-i[1]?"FileInvUp":null}static isDiagonally(e,i){i=[i[0]-e[0],i[1]-e[1]];return 0==i[1]?0!=i[0]&&i[0]%2==0?0<i[0]?"TransversalLineInc":"TransversalLineDec":null:(e=(i[0]<<1)+i[0],0<i[0]?e==i[1]?"LineUp":e==-i[1]?"LineDown":null:e==i[1]?"LineInvDown":e==-i[1]?"LineInvUp":null)}static orthogonalStep(e,i){i=n._ORTHOGONAL_MOVES[s.csConvert.toOrthogonalDirectionIndex(i)];return n.addOffset(e,i)}static diagonalStep(e,i){i=n._DIAGONAL_MOVES[s.csConvert.toDiagonalDirectionIndex(i)];return n.addOffset(e,i)}static*orthogonalRide(e,i){var t=n._ORTHOGONAL_MOVES[s.csConvert.toOrthogonalDirectionIndex(i)];let o=n.addOffset(e,t);for(;null!=o;)yield o,o=n.addOffset(o,t)}static*diagonalRide(e,i){var t=n._DIAGONAL_MOVES[s.csConvert.toDiagonalDirectionIndex(i)];let o=n.addOffset(e,t);for(;null!=o;)yield o,o=n.addOffset(o,t)}static*orthogonalMoves(i){for(const t of n._ORTHOGONAL_MOVES){let e=this.addOffset(i,t);for(;null!=e;)yield e,e=n.addOffset(e,t)}}static*diagonalMoves(i){for(const t of n._DIAGONAL_MOVES){let e=this.addOffset(i,t);for(;null!=e;)yield e,e=n.addOffset(e,t)}}static knightJump(e,i){i=n._KNIGHT_MOVES[s.csConvert.toKnightDirectionIndex(i)];return n.addOffset(e,i)}static*knightMoves(e){for(const t of n._KNIGHT_MOVES){var i=this.addOffset(e,t);null!=i&&(yield i)}}static positionIteratorIncludes(e,i){for(const t of e)if(t[0]===i[0]&&t[1]===i[1])return!0;return!1}static*positionIteratorIntersection(e,i){for(const t of e)i.some(e=>t[0]===e[0]&&t[1]===e[1])&&(yield t)}static isOnBoard(e,i){return 0<=e&&e<=14&&(e<=7?7-e<=i&&i<=21+e:e-7<=i&&i<=35-e)}static addOffset(e,i){var t=e[0]+i[0],e=e[1]+i[1];return n.isOnBoard(t,e)?[t,e]:null}}(t.PositionHelper=n)._ORTHOGONAL_MOVES=[[0,2],[0,-2],[1,1],[1,-1],[-1,1],[-1,-1]],n._DIAGONAL_MOVES=[[2,0],[-2,0],[1,3],[1,-3],[-1,3],[-1,-3]],n._KNIGHT_MOVES=[[3,1],[3,-1],[-3,1],[-3,-1],[2,4],[1,5],[2,-4],[1,-5],[-2,4],[-1,5],[-2,-4],[-1,-5]],n.isEvenLinesColumnIndex=e=>e%2!=0},{"./cescacs.types":5}],5:[function(e,i,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.csConvert=t.csTypes=void 0;const o=["P","T","A","B","C","D","E","F","G","H","I","K","L","X","Z"],s=["D","E","F","H","I"],n=["ColumnUp","ColumnDown","FileUp","FileDown","FileInvUp","FileInvDown"],r=["TransversalLineInc","TransversalLineDec","LineUp","LineDown","LineInvUp","LineInvDown"],l=["TransversalLineInc-FileUp","TransversalLineInc-FileDown","TransversalLineDec-FileInvUp","TransversalLineDec-FileInvDown","LineUp-FileUp","LineUp-ColumnUp","LineDown-FileDown","LineDown-ColumnDown","LineInvUp-FileInvUp","LineInvUp-ColumnUp","LineInvDown-FileInvDown","LineInvDown-ColumnDown"],a=[["ColumnUp","ColumnDown"],["FileUp","FileInvDown"],["FileInvUp","FileDown"]],c=[["TransversalLineInc","TransversalLineDec"],["LineUp","LineInvDown"],["LineInvUp","LineDown"]],h=["Black","White","Color"],u=["w","b"],p=["K","D","V","R","G","N","J","E","M","P"],g=["RKR","RK","KR","K","-"],d=["KRK-II","KRK-IK","KRK-IH","KRK-HIO","KRK-HIOO","KRK-HH","KRK-HG","KRK-FG","KRK-FE","KRK-EF","KRK-EE","KRD-DD","KRD-DE","KRD-HH","KRD-HG","KRD-FG","KRD-FE","KRD-EF","KRD-ED","KRR-HIH","KRR-HGG","KRR-FGG","KRR-FEE","KRR-EEF"],P=["KRK-FF","KRK-FG","KRK-HG","KRK-HI","KRD-DE","KRD-DC","KRD-ED","KRD-EE","KRD-FE","KRD-FF","KRR-FFE","KRR-FGF"];var v;(v=t.csTypes||(t.csTypes={})).isNumber=e=>"number"==typeof e&&!isNaN(e),v.isColumn=e=>o.includes(e),v.isColumnIndex=e=>v.isNumber(e)&&Number.isInteger(e)&&0<=e&&e<=14,v.isLine=e=>v.isNumber(e)&&Number.isInteger(e)&&0<=e&&e<=28,v.isPosition=e=>Array.isArray(e)&&2==e.length&&v.isColumnIndex(e[0])&&v.isLine(e[1]),v.isOrthogonalDirection=e=>n.includes(e),v.isDiagonalDirection=e=>r.includes(e),v.isKnightDirection=e=>l.includes(e),v.iscastlingColumn=e=>s.includes(e),v.isDirectionMoveRange=e=>v.isNumber(e)&&Number.isInteger(e)&&0<=e&&e<=5,v.isDirectionFullMoveRange=e=>v.isNumber(e)&&Number.isInteger(e)&&0<=e&&e<=11,v.isOrthogonalOrientation=i=>Array.isArray(i)&&a.some(e=>e[0]==i[0]&&e[1]==i[1]),v.isDiagonalOrientation=i=>Array.isArray(i)&&c.some(e=>e[0]==i[0]&&e[1]==i[1]),v.isHexColor=e=>h.includes(e),v.isPieceName=e=>p.includes(e),v.isTurn=e=>u.includes(e),v.isCastlingStatus=e=>g.includes(e),v.isCastlingString=e=>d.includes(e),v.isGrandCastlingString=e=>P.includes(e),v.isSingleCheck=e=>Object.prototype.hasOwnProperty.call(e,"d")&&Object.prototype.hasOwnProperty.call(e,"p"),v.isDoubleCheck=e=>Array.isArray(e)&&3==length&&v.isPosition(e[0])&&v.isPosition(e[1])&&(null==e[2]||v.isOrthogonalOrientation(e[2])||v.isDiagonalOrientation(e[2])),v.hasDoubleCheckPin=e=>Array.isArray(e)&&3==length&&v.isPosition(e[0])&&v.isPosition(e[1])&&null!=e[2]&&(v.isOrthogonalOrientation(e[2])||v.isDiagonalOrientation(e[2])),v.isCheckAttackPos=(e,i)=>v.isPosition(e)?i[0]==e[0]&&i[1]==e[1]:v.isSingleCheck(e)?e.p[0]==i[0]&&e.p[1]==i[1]:e[0][0]==i[0]&&e[0][1]==i[1]||e[1][0]==i[0]&&e[1][1]==i[1],(t=t.csConvert||(t.csConvert={})).columnFromIndex=e=>o[e],t.toColumnIndex=e=>o.indexOf(e),t.toOrthogonalDirectionIndex=e=>n.indexOf(e),t.orthogonalDirectionFromIndex=e=>n[e],t.toDiagonalDirectionIndex=e=>r.indexOf(e),t.diagonalDirectionFromIndex=e=>r[e],t.toKnightDirectionIndex=e=>l.indexOf(e),t.knightDirectionFromIndex=e=>l[e],t.getOrthogonalOrientation=function(e){switch(e){case"ColumnUp":case"ColumnDown":return["ColumnUp","ColumnDown"];case"FileUp":case"FileInvDown":return["FileUp","FileInvDown"];case"FileInvUp":case"FileDown":return["FileInvUp","FileDown"];default:throw new Error(e)}},t.getDiagonalOrientation=function(e){switch(e){case"TransversalLineInc":case"TransversalLineDec":return["TransversalLineInc","TransversalLineDec"];case"LineUp":case"LineInvDown":return["LineUp","LineInvDown"];case"LineInvUp":case"LineDown":return["LineInvUp","LineDown"];default:throw new Error(e)}},t.orthogonalDirections=function*(){for(const e of n)yield e},t.diagonalDirections=function*(){for(const e of r)yield e},t.knightDirections=function*(){for(const e of l)yield e}},{}],6:[function(e,i,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.round2hundredths=t.isNotNullNorWhitespace=t.isNotNullNorEmpty=t.assertCondition=t.assertNonNullish=void 0,t.assertNonNullish=function(e,i){var t;if(null==e)throw console.log(null!==(t="NonNullish assertion fail: "+i)?t:"-"),new TypeError(`Unexpected ${e} value`+i==void 0?"":": "+i)},t.assertCondition=function(e,i){if(!e)throw console.log(null!==(e="Condition assertion fail: "+i)?e:"-"),new Error("Assertion does not hold"+i==void 0?"":": "+i)},t.isNotNullNorEmpty=function(e){return null!=e&&0<e.length},t.isNotNullNorWhitespace=function(e){return null!=e&&0<e.length&&0<e.trim().length},t.round2hundredths=function(e){return Math.round(100*(e+Number.EPSILON))/100}},{}]},{},[1])(1)});