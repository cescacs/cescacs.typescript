!function(e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):("undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this).cescacs=e()}(function(){return function o(s,n,r){function a(i,e){if(!n[i]){if(!s[i]){var t="function"==typeof require&&require;if(!e&&t)return t(i,!0);if(l)return l(i,!0);throw(e=new Error("Cannot find module '"+i+"'")).code="MODULE_NOT_FOUND",e}t=n[i]={exports:{}},s[i][0].call(t.exports,function(e){return a(s[i][1][e]||e)},t,t.exports,o,s,n,r)}return n[i].exports}for(var l="function"==typeof require&&require,e=0;e<r.length;e++)a(r[e]);return a}({1:[function(e,i,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Game=t.Board=t.EnPassantCapturable=t.ScornfulCapturable=t.PawnSpecialCaptureStatus=t.round2hundredths=t.csmv=t.cspty=t.PositionHelper=void 0;const b=e("./ts.general"),U=(Object.defineProperty(t,"round2hundredths",{enumerable:!0,get:function(){return b.round2hundredths}}),e("./cescacs.types")),G=e("./cescacs.piece"),V=(Object.defineProperty(t,"cspty",{enumerable:!0,get:function(){return G.csPieceTypes}}),e("./cescacs.positionHelper")),y=(Object.defineProperty(t,"PositionHelper",{enumerable:!0,get:function(){return V.PositionHelper}}),e("./cescacs.piece")),o=e("./cescacs.moves");Object.defineProperty(t,"csmv",{enumerable:!0,get:function(){return o.csMoves}});class n{constructor(e){this._capturablePiece=e}static parse(e,i){if(null!=i&&0<i.length&&"-"!=i){if(4<=i.length){const n=i.split("@");n.length=2;var t=V.PositionHelper.parse(n[0]);if(n[1].includes(",")||!isNaN(Number(n[1]))){i=e.getPiece(t);if(null==i)throw new Error(V.PositionHelper.toString(t)+" doesn't have a pawn");var o=n[1].split(",");if(1<=o.length&&o.length<=2){let e=[];for(const r of o){var s=Number(r);if(isNaN(s)||!U.csTypes.isLine(s))throw new TypeError("Invalid en passant capture line value");e.push(V.PositionHelper.fromBoardPosition(t[0],s,!0))}return new h(i,e)}throw new TypeError("Missing or invalid en passant capture lines")}o=V.PositionHelper.parse(n[1]),i=e.getPiece(o);if(null!=i)return new c(i,t);throw new Error(V.PositionHelper.toString(o)+" doesn't have a pawn")}throw new TypeError("Too short special pawn capture status string")}return null}isScornfulCapturable(){return"scornful"==this.specialCaptureType}isEnPassantCapturable(){return"enPassant"==this.specialCaptureType}get capturablePiece(){return this._capturablePiece}get capturablePawn(){return(0,b.assertCondition)(G.csPieceTypes.isPawn(this._capturablePiece)),this._capturablePiece}}class c extends(t.PawnSpecialCaptureStatus=n){constructor(e,i){super(e),this.specialCaptureType="scornful",this._capturerPawnPos=i}static promoteCapturablePawn(e,i){return new c(i,e._capturerPawnPos)}isScorned(e,i){e=null!=e.position&&V.PositionHelper.equals(e.position,this._capturerPawnPos);return null==i?e:e&&V.PositionHelper.equals(i,this.capturablePiece.position)}get scornfulCaptureDirection(){var e=this._capturerPawnPos[0],i=this.capturablePiece.position,t=i[0];return i[1]>this._capturerPawnPos[1]?e<t?"FileUp":"FileInvUp":e<t?"FileDown":"FileInvDown"}toString(){return V.PositionHelper.toString(this._capturerPawnPos)+"@"+V.PositionHelper.toString(this.capturablePiece.position)}}t.ScornfulCapturable=c;class h extends n{constructor(e,i){super(e),this.specialCaptureType="enPassant",this._captureTo=i}static promoteCapturablePawn(e,i){return new h(i,e._captureTo)}isEnPassantCapture(i,e){var t=this._captureTo.some(e=>V.PositionHelper.equals(e,i));return null==e?t:!(!t||null==e.position)&&(t=e.position,1==Math.abs(i[0]-t[0])&&("White"==e.color?i[1]-t[1]==3:t[1]-i[1]==3))}toString(){return V.PositionHelper.toString(this.capturablePiece.position)+"@"+this.captureLines()}captureLines(){const i=this._captureTo;if(0<i.length&&i.length<=2){let e=i[0][1].toString();return 1<i.length&&(e+=","+i[1][1].toString()),e}throw new Error("Invalid en passant capture positions set")}}t.EnPassantCapturable=h;class u{constructor(e,i){this.wPositions=[0,0,0,0,0,0,0,0],this.bPositions=[0,0,0,0,0,0,0,0],this.wThreats=[0,0,0,0,0,0,0,0],this.bThreats=[0,0,0,0,0,0,0,0],this.wPieces=new Map,this.bPieces=new Map,this._regainablePieces=[],this.wKing=new y.King("White"),this.bKing=new y.King("Black"),this._specialPawnCapture=null,this._currentHeuristic=u.newHeuristic(),this._wAwaitingPromotion=!1,this._bAwaitingPromotion=!1,this._grand=e,this._turn=i??"w"}static newHeuristic(){return{pieces:[0,0],space:[0,0],positioning:0,mobility:0,king:0}}static splitCastlingStatus(o){if(null!=o&&0<o.length){let e,i,t=0;for(;t<o.length&&o[t].toUpperCase()==o[t];)t++;if(i=(i=0==t?(e="-",o):t==o.length?(e=o,"-"):(e=o.slice(0,t),o.slice(t))).toUpperCase(),U.csTypes.isCastlingStatus(e)&&U.csTypes.isCastlingStatus(i))return[e,i];throw new TypeError("Invalid TLPD issued castling status "+o)}return["RKR","RKR"]}static lineMask(e){return 1<<e}get isGrand(){return this._grand}get turn(){return this._turn}get isAwaitingPromotion(){return"w"==this._turn?this._wAwaitingPromotion:this._bAwaitingPromotion}setAwaitingPromotion(e){"White"==e?this._wAwaitingPromotion=!0:this._bAwaitingPromotion=!0}get specialPawnCapture(){return this._specialPawnCapture}set specialPawnCapture(e){this._specialPawnCapture=e}get turnKing(){return"w"===this.turn?this.wKing:this.bKing}get checked(){return this.turnKing.checked}get isKnightOrCloseCheck(){return this.turnKing.isKnightOrCloseCheck()}get isSingleCheck(){return this.turnKing.isSingleCheck()}get isDoubleCheck(){return this.turnKing.isDoubleCheck()}get currentHeuristic(){return this._currentHeuristic}getHeuristicValue(e){return(0,b.round2hundredths)(e.pieces[0]-e.pieces[1]+e.space[0]-e.space[1]+e.positioning+e.mobility+e.king)}*whitePieces(){for(const e of this.wPieces.values())yield e}*blackPieces(){for(const e of this.bPieces.values())yield e}*whitePiecePositions(){for(const e of this.wPieces.values())yield e.position}*blackPiecePositions(){for(const e of this.bPieces.values())yield e.position}hasPiece(e){var i=e[0]+1>>>1,e=u.lineMask(e[1]);return 0!=(this.wPositions[i]&e)?"White":0!=(this.bPositions[i]&e)?"Black":null}getHexPiece(e){e=V.PositionHelper.parse(e);return null!=e&&V.PositionHelper.isValidPosition(e)?this.getPiece(e):null}getPiece(e){var i=this.hasPiece(e);return null==i?null:("White"==i?this.wPieces:this.bPieces).get(V.PositionHelper.positionKey(e))}hasThreat(e,i){var t=e[0]+1>>>1;return 0!=(("White"==i?this.wThreats:this.bThreats)[t]&u.lineMask(e[1]))}isThreated(e,i){var t=e[0]+1>>>1;return 0!=(("White"==i?this.bThreats:this.wThreats)[t]&u.lineMask(e[1]))}setThreat(e,i){var t=e[0]+1>>>1;("White"==i?this.wThreats:this.bThreats)[t]|=u.lineMask(e[1])}addRegainablePiece(e){null==e.position&&this._regainablePieces.push(e)}hasRegainablePieces(t){const o="w"==this._turn?"White":"Black";return this._regainablePieces.reduce((e,i)=>e||i.color==o&&(!G.csPieceTypes.isBishop(i)||i.hexesColor==t),!1)}hasAwaitingRegainablePieces(){const t="w"==this._turn?"White":"Black";if(this._regainablePieces.reduce((e,i)=>e||i.color==t&&"J"!=i.symbol,!1))return!0;{const e=this._regainablePieces.filter(e=>e.color==t&&"J"==e.symbol);if(0==e.length)return!1;{const i="w"==this._turn?this.wPieces:this.bPieces;for(const o of i.values())if(G.csPieceTypes.isPawn(o)){const s=o.awaitingPromotion;if(null!=s&&e.some(e=>e.hexesColor==s))return!0}return!1}}}maxRegainablePiecesValue(t){const o="w"==this._turn?"White":"Black";return this._regainablePieces.reduce((e,i)=>i.value>e&&i.color==o&&(!G.csPieceTypes.isBishop(i)||i.hexesColor==t)?i.value:e,0)}currentRegainablePieceNames(t){const o="w"==this._turn?"White":"Black";return this._regainablePieces.reduce((e,i)=>i.color!=o||G.csPieceTypes.isBishop(i)&&i.hexesColor!=t?e:e.add(i.symbol),new Set)}findRegeinablePiece(i,t,o){var e=this._regainablePieces.find(e=>e.color==i&&e.symbol==t&&(!G.csPieceTypes.isBishop(e)||e.hexesColor==o));return(0,b.assertNonNullish)(e,"retrieve the promoted piece"),e}*pieceMoves(e){const i=this.turnKing;var t;!i.checked||"K"==e.symbol?yield*e.moves(this):(null!=(t=i.checkThreat)&&e.canCaptureOn(this,t)&&(yield t),i.isSingleCheck()&&(yield*e.blockThreat(this,i.getSingleCheckBlockingPositions(this))))}addPiece(e){(0,b.assertNonNullish)(e.position,e.symbol+" position");var i=e.position;const t="White"==e.color?this.wPieces:this.bPieces;t.set(V.PositionHelper.positionKey(i),e);var o=i[0]+1>>>1,i=u.lineMask(i[1]);const s="White"==e.color?this.wPositions:this.bPositions;s[o]|=i}capturePiece(e){(0,b.assertNonNullish)(e.position,e.symbol+" position");var i=e.position,t=i[0]+1>>>1,o=u.lineMask(i[1]);const s="White"==e.color?this.wPositions:this.bPositions,n=(s[t]&=~o,"White"==e.color?this.wPieces:this.bPieces);n.delete(V.PositionHelper.positionKey(i)),e.captured(),e.isRegainable&&this._regainablePieces.push(e)}undoCapturePiece(e,i,t){var o;y.Piece.isRegainablePiece(e.symbol)&&(o=this._regainablePieces.indexOf(e),(0,b.assertCondition)(0<=o,"Captured piece found in the regainable pieces bag"),this._regainablePieces.splice(o,1)),e.setPositionTo([i,t]),this.addPiece(e)}movePiece(t,o,s){(0,b.assertNonNullish)(t.position,t.symbol+" position");var e=t.position,i=e[0]+1>>>1,n=u.lineMask(e[1]);const r="White"==t.color?this.wPieces:this.bPieces;if(G.csPieceTypes.isPawn(t)){let e=null,i=null;t.position[0]!=o?null!=(a=this.getPiece([t.position[0],s>t.position[1]?t.position[1]+2:t.position[1]-2]))&&G.csPieceTypes.isPawn(a)&&(e=a):2<Math.abs(s-t.position[1])&&(i=[],s>t.position[1]?(i.push([o,t.position[1]+2]),s>t.position[1]+4&&i.push([o,t.position[1]+4])):(i.push([o,t.position[1]-2]),s<t.position[1]-4&&i.push([o,t.position[1]-4]))),null!=e?this._specialPawnCapture=new c(t,e.position):null!=i?this._specialPawnCapture=new h(t,i):this._specialPawnCapture=null,V.PositionHelper.isPromotionPos(o,s,t.color)&&("White"==t.color?this._wAwaitingPromotion=!0:this._bAwaitingPromotion=!0)}else this._specialPawnCapture=null;r.delete(V.PositionHelper.positionKey(e)),t.moveTo(o,s),r.set(V.PositionHelper.positionKey(e),t);var a=e[0]+1>>>1,o=u.lineMask(e[1]);const l="White"==t.color?this.wPositions:this.bPositions;l[i]&=~n,l[a]|=o}undoPieceMove(e,i,t){const o="White"==e.color?this.wPieces:this.bPieces;var s=e.position,n=s[0]+1>>>1,r=u.lineMask(s[1]),i=(o.delete(V.PositionHelper.positionKey(s)),e.moveTo(i,t),o.set(V.PositionHelper.positionKey(s),e),s[0]+1>>>1),t=u.lineMask(s[1]);const a="White"==e.color?this.wPositions:this.bPositions;a[n]&=~r,a[i]|=t}promotePawn(e,i){if(this._regainablePieces.includes(i)){const t="White"==i.color?this.wPieces:this.bPieces;t.delete(V.PositionHelper.positionKey(e.position)),e.promoteTo(i),t.set(V.PositionHelper.positionKey(i.position),i),null!=this._specialPawnCapture&&this._specialPawnCapture.capturablePawn==e&&(this._specialPawnCapture.isScornfulCapturable()?this._specialPawnCapture=c.promoteCapturablePawn(this._specialPawnCapture,i):this._specialPawnCapture.isEnPassantCapturable()&&(this._specialPawnCapture=h.promoteCapturablePawn(this._specialPawnCapture,i)));e=this._regainablePieces.indexOf(i);this._regainablePieces.splice(e,1),"White"==i.color?this._wAwaitingPromotion=!1:this._bAwaitingPromotion=!1}}undoPromotePawn(e,i){const t="White"==i.color?this.wPieces:this.bPieces;t.delete(V.PositionHelper.positionKey(i.position)),e.setPositionTo([i.position[0],i.position[1]]),i.captured(),this._regainablePieces.push(i),t.set(V.PositionHelper.positionKey(e.position),e)}resetGame(e){for(let e=0;e<8;e++)this.wPositions[e]=0,this.bPositions[e]=0,this.wThreats[e]=0,this.bThreats[e]=0;this.wPieces.clear(),this.bPieces.clear(),this._regainablePieces.length=0,this._specialPawnCapture=null,this._turn=e}prepareGame(){"w"==this._turn?this.prepareTurn(this.bKing):this.prepareTurn(this.wKing),this.prepareCurrentTurn()}nextTurn(){this._turn="w"===this._turn?"b":"w"}prepareCurrentTurn(){this.prepareTurn(this.turnKing)}prepareTurn(e){var i=e.color;const t="White"==i?this.bThreats:this.wThreats;for(let e=0;e<=7;e++)t[e]=0;for(const o of("White"==i?this.bPieces:this.wPieces).values())o.markThreats(this);for(const s of("White"==i?this.wPieces:this.bPieces).values())s.pin=null;e.computeCheckAndPins(this)}isMoveableTurn(){for(const e of("w"===this.turn?this.wPieces:this.bPieces).values()){const i=this.pieceMoves(e);if(!i.next().done)return!0}return!1}computeHeuristic(d,v,e,P){function m(e){let i=0;for(;0<e;)i+=1&e,e>>>=1;return i}function w(e){let i=0;for(e>>>=1;0<e;)i+=1&e,e>>>=2;return i}const f=this.turnKing;if(P.pieces[0]=0,P.pieces[1]=0,P.positioning=0,P.mobility=0,e){var C="w"==d?"White":"Black";f.checked?f.isDoubleCheck()?P.king=-15:f.isKnightOrCloseCheck()?P.king=-12:P.king=-10:f.moved?P.king=0:P.king=.1;for(const x of f.attemptMoves(this,!0)){var k=this.hasPiece(x);f.checked?this.isThreated(x,C)?P.king-=2:null==k?P.king+=.5:k==C&&(P.king-=.5):this.isThreated(x,C)?P.king-=this.hasThreat(x,C)?.25:.5:null==k?P.king-=.01:k==C&&(P.king+=.05)}const E="w"==d?this.wPieces:this.bPieces,W="w"==d?this.bPieces:this.wPieces;var b="w"==d?this.wThreats:this.bThreats,y="w"==d?this.bThreats:this.wThreats,T="w"==d?31:31<<24,_="w"==d?31<<24:31,D="w"==d?this.bPositions:this.wPositions;let o=0,s=0,i=0,t=0,e=0,n=0,r=0,a=0,l=0;for(const F of E.values())F.markThreats(this);let c=0,h=0,u=0,p=0,g=0;var K,S=(e,i)=>"White"==i?8<e[1]:e[1]<20,M=(e,i)=>"White"==i?e[1]>(7==e[0]?6:3):e[1]<(7==e[0]?22:25);for(const L of E.values())if(null!=L.position){var I=this.hasThreat(L.position,C);if(P.pieces[0]+=L.value,"J"===L.symbol&&e++,this.isThreated(L.position,C)?a-=I?.75*L.value:L.value:I&&(a+=1-.0625*L.value),null==L.pin){for(const B of this.pieceMoves(L))P.mobility+=.01;if(L.hasOrthogonalAttack){for(var[H,R]of function*(t,e,o){for(const r of U.csConvert.orthogonalDirections()){const a=V.PositionHelper.orthogonalRide(e,r);let i=a.next();for(;0==i.done;){var s=t.getPiece(i.value);if(null==s)i=a.next();else{const l=V.PositionHelper.orthogonalRide(i.value,r);let e=l.next();for(;0==e.done;){var n=t.getPiece(e.value);e=null==n?a.next():(n.color!=o&&(yield[s,n]),l.return())}i=a.return()}}}}(this,L.position,C))H.color==C?H.value<=L.value&&L.value<R.value&&(H.hasOrthogonalAttack?a+=.25*(R.value-H.value):!I&&R.hasOrthogonalAttack||(a+=.0625*R.value)):H.value>L.value?a+=.25*(H.value-L.value):H.value<R.value&&!H.hasOrthogonalAttack&&R.value>L.value&&(a+=.25*H.value);M(L.position,C)&&(p+=L.value)}if(L.hasDiagonalAttack){for(var[O,N]of function*(t,e,o){for(const r of U.csConvert.diagonalDirections()){const a=V.PositionHelper.diagonalRide(e,r);let i=a.next();for(;0==i.done;){var s=t.getPiece(i.value);if(null==s)i=a.next();else{const l=V.PositionHelper.diagonalRide(i.value,r);let e=l.next();for(;0==e.done;){var n=t.getPiece(e.value);e=null==n?a.next():(n.color!=o&&(yield[s,n]),l.return())}i=a.return()}}}}(this,L.position,C))O.color==C?O.value<=L.value&&L.value<N.value&&(O.hasDiagonalAttack?a+=.25*(N.value-O.value):!I&&N.hasDiagonalAttack||(a+=.0625*N.value)):O.value>L.value?a+=.25*(O.value-L.value):O.value<N.value&&!O.hasDiagonalAttack&&N.value>L.value&&(a+=.25*O.value);M(L.position,C)&&(p+=L.value)}else G.csPieceTypes.isElephant(L)||G.csPieceTypes.isAlmogaver(L)?(h+=L.value,S(L.position,C)&&(u+=L.value)):G.csPieceTypes.isPawn(L)&&(h+=L.value,L.hasTripleStep(this.isGrand)?P.mobility+=.01:S(L.position,C)&&(u++,I&&(u++,V.PositionHelper.promotionDistance(L.position,C)<14&&(g+=14-V.PositionHelper.promotionDistance(L.position,C)<<1))))}else l-=L.value,P.king-=I?.2:.4}v<=12&&h-u>>1>u&&(c=u-p);for(const A of W.values())null!=A.position&&(P.pieces[1]+=A.value,"J"===A.symbol&&n++,this.hasThreat(A.position,C)&&(a+=A.value),null!=A.pin&&(l+=A.value));for(let t=0;t<=7;t++){let e=D[t]&b[t]&~y[t],i=0;for(;0!=e;)1==(1&e)&&(K=(t<<1)-(i+1)%2,K=this.getPiece([K,i]),r+=K.value),e>>>=1,i++;o+=m(b[t]),s+=m(y[t])}i+=w(b[2]&~y[2]&T),t+=w(y[2]&~b[2]&_);for(let e=3;e<=5;e++)i+=m(b[e]&~y[e]&T),t+=m(y[e]&~b[e]&_);2<=e&&(P.pieces[0]+=3==e?1:.5),2<=n&&(P.pieces[1]+=3==n?1:.5),P.space[0]=.01*o,P.space[1]=.01*s,P.positioning=.01*(i-t+a+l+c+g)+.125*r}else f.checked?P.king=-120:P.king=-6,P.space[0]=0,P.space[0]=0;return P}clearThreats(e){const i="White"==e?this.wThreats:this.bThreats;for(let e=0;e<=7;e++)i[e]=0}clearPins(e){for(const i of("White"==e?this.wPieces:this.bPieces).values())i.pin=null}}class T extends(t.Board=u){constructor(e=!1,i){var t=i?.split(" ");if(super(e,null==t?.[1]||"w"!=t[1]&&"b"!=t[1]?"w":t[1]),this._moves=[],this._top=-1,this.fixedNumbering=!0,this.pawnMoved=!1,this.pieceCaptured=!1,this._mate=!1,this._stalemate=!1,this._draw=!1,this._resigned=!1,this._enpassantCaptureCoordString=null,this._lastMove="",void 0===i){this.wKing.setToInitialPosition(),this.addPiece(this.wKing),this.bKing.setToInitialPosition(),this.addPiece(this.bKing);for(const o of T.fillDefaultPositions(e))this.addPiece(o);this.halfmoveClock=0,this.moveNumber=1,this.fixedNumbering=!0}else{if(!(null!=t&&2<=t.length&&U.csTypes.isTurn(t[1])))throw new Error("Piece positions and turn are mandatory parts of the TLPD string");var[i,e]=u.splitCastlingStatus(t[2]);if(this.restoreTLPDPositions(t[0],i,e),this.halfmoveClock=U.csTypes.isNumber(Number(t[4]))?Number(t[4]):0,isNaN(Number(t[4]))&&null!=t[4]&&"-"!==t[4])throw new TypeError("Invalid halfmove clock value");if(this.moveNumber=U.csTypes.isNumber(Number(t[5]))?Number(t[5]):1,isNaN(Number(t[5]))){if(null!=t[5]&&"-"!=t[5])throw new TypeError("Invalid move number");this.fixedNumbering=!1}else this.fixedNumbering=!0;super.specialPawnCapture=n.parse(this,t[3])}this.initGame()}static kingCastlingPosition(e,i){var t="White"==e?V.PositionHelper.whiteKingInitPosition:V.PositionHelper.blackKingInitPosition,e=("White"==e?T.whiteKingCastlingMove:T.blackKingCastlingMove)[i];return V.PositionHelper.knightJump(t,e)}static createPiece(e,i,t,o){if(null!=t&&null!=o){var s=U.csConvert.columnFromIndex(t);switch(e){case"K":throw new Error("King must be created before setting it on the board (without position)");case"D":return new y.Queen(i,s,o);case"V":return new y.Wyvern(i,s,o);case"R":return new y.Rook(i,s,o);case"G":return new y.Pegasus(i,s,o);case"N":return new y.Knight(i,s,o);case"J":return new y.Bishop(i,s,o);case"E":return new y.Elephant(i,s,o);case"M":return new y.Almogaver(i,s,o);case"P":return new y.Pawn(i,s,o);default:throw new Error(e)}}else switch(e){case"K":return new y.King(i);case"D":return new y.Queen(i);case"V":return new y.Wyvern(i);case"R":return new y.Rook(i);case"G":return new y.Pegasus(i);case"N":return new y.Knight(i);case"J":throw new Error("Bishop needs position or HexColor to be created");case"E":return new y.Elephant(i);case"M":return new y.Almogaver(i);case"P":return new y.Pawn(i);default:throw new Error(e)}}static convertPieceAliases(e){switch(e){case"Q":return"D";case"W":return"V";case"T":return"R";case"C":case"S":return"N";case"A":case"B":case"F":case"L":return"J";default:if(U.csTypes.isPieceName(e))return e;throw new TypeError("Invalid piece symbol "+e)}}static fillDefaultPositions(e=!1){const i=[];return i.push(new y.Queen("White","E",1),new y.Wyvern("White","F",0)),i.push(new y.Pegasus("White","D",2),new y.Bishop("White","F",2),new y.Pegasus("White","H",2)),e?(i.push(new y.Pawn("White","B",6),new y.Rook("White","B",4),new y.Knight("White","C",3)),i.push(new y.Knight("White","I",3),new y.Rook("White","K",4),new y.Pawn("White","K",6)),i.push(new y.Pawn("White","P",7),new y.Pawn("White","T",8),new y.Pawn("White","X",8),new y.Pawn("White","Z",7)),i.push(new y.Almogaver("White","C",7),new y.Almogaver("White","A",7),new y.Almogaver("White","L",7),new y.Almogaver("White","I",7))):i.push(new y.Pawn("White","B",4),new y.Rook("White","C",3),new y.Rook("White","I",3),new y.Pawn("White","K",4)),i.push(new y.Knight("White","E",3),new y.Knight("White","G",3)),i.push(new y.Elephant("White","D",4),new y.Bishop("White","F",4),new y.Elephant("White","H",4)),i.push(new y.Pawn("White","A",5),new y.Pawn("White","C",5),new y.Elephant("White","E",5),new y.Elephant("White","G",5),new y.Pawn("White","I",5),new y.Pawn("White","L",5)),i.push(new y.Pawn("White","D",6),new y.Bishop("White","F",6),new y.Pawn("White","H",6)),i.push(new y.Pawn("White","E",7),new y.Pawn("White","F",8),new y.Pawn("White","G",7)),i.push(new y.Queen("Black","E",27),new y.Wyvern("Black","F",28)),i.push(new y.Pegasus("Black","D",26),new y.Bishop("Black","F",26),new y.Pegasus("Black","H",26)),e?(i.push(new y.Pawn("Black","B",22),new y.Rook("Black","B",24),new y.Knight("Black","C",25)),i.push(new y.Knight("Black","I",25),new y.Rook("Black","K",24),new y.Pawn("Black","K",22)),i.push(new y.Pawn("Black","P",21),new y.Pawn("Black","T",20),new y.Pawn("Black","X",20),new y.Pawn("Black","Z",21)),i.push(new y.Almogaver("Black","C",21),new y.Almogaver("Black","A",21),new y.Almogaver("Black","I",21),new y.Almogaver("Black","L",21))):i.push(new y.Pawn("Black","B",24),new y.Rook("Black","C",25),new y.Rook("Black","I",25),new y.Pawn("Black","K",24)),i.push(new y.Knight("Black","E",25),new y.Knight("Black","G",25)),i.push(new y.Elephant("Black","D",24),new y.Bishop("Black","F",24),new y.Elephant("Black","H",24)),i.push(new y.Pawn("Black","A",23),new y.Pawn("Black","C",23),new y.Elephant("Black","E",23),new y.Elephant("Black","G",23),new y.Pawn("Black","I",23),new y.Pawn("Black","L",23)),i.push(new y.Pawn("Black","D",22),new y.Bishop("Black","F",22),new y.Pawn("Black","H",22)),i.push(new y.Pawn("Black","E",21),new y.Pawn("Black","F",20),new y.Pawn("Black","G",21)),i}static rookCastleMove(e,i,t,o,s){return"K"==o?"K"==i?s?"White"==t?"ColumnUp":"ColumnDown":"White"==t?"FileUp":"FileDown":"I"==i?s?"White"==t?"FileInvDown":"FileInvUp":"White"==t?"ColumnUp":"ColumnDown":"White"==t?"FileInvUp":"FileInvDown":"E"==i&&"D"==e?"White"==t?"FileDown":"FileUp":"White"==t?"FileUp":"FileDown"}get gameEnd(){return this._mate||this._stalemate||this._draw||this._resigned}get mate(){return this._mate}get stalemate(){return this._stalemate}set draw(e){this._draw=e}get draw(){return this._draw}set resign(e){this._resigned=e}get resigned(){return this._resigned}moves(e){return Object.freeze(this._moves.slice(e))}strMoves(){let t=[];if(0<this._moves.length){let e;for(let i=e="b"==this._moves[0].turn?(t.push(this._moves[0].n+". ×, "+o.csMoves.fullMoveNotation(this._moves[0])),1):0;i<=this._top;i+=2){let e=o.csMoves.fullMoveNotation(this._moves[i]);i<this._top&&(e+=", "+o.csMoves.fullMoveNotation(this._moves[i+1])),t.push(e)}}return t.join("\n")}moveBottom(){for(;0<this._top;){var e=this._moves[this._top--];this.undoMove(e.move,e.turn)}}moveBackward(){var e;0<this._top&&(e=this._moves[this._top--],this.undoMove(e.move,e.turn))}moveForward(){var e;this._top<this._moves.length-1&&(e=this._moves[++this._top],this.applyMove(e.move,e.turn))}moveTop(){for(;this._top<this._moves.length-1;){var e=this._moves[++this._top];this.applyMove(e.move,e.turn)}}get topMoveId(){return 0<=this._top?o.csMoves.undoStatusId(this._moves[this._top]):null}get lastMove(){return this._lastMove}get preMoveHeuristic(){return this.currentHeuristic}get enPassantCaptureCoordString(){return this._enpassantCaptureCoordString}get resultString(){if(this.gameEnd){if(this._mate||this._resigned)return"w"==this.turn?"0 - 3":"3 - 0";if(this._stalemate)return"w"==this.turn?"1 - 2":"2 - 1";if(this._draw)return"1 - 1";throw new Error("End game exhaustiveCheck fail")}return null}set resultString(e){if(null!=e&&0<e.length)if(this.gameEnd){if(e!=this.resultString)throw new Error(`Incorrect end game value issued: ${e} correct value `+this.resultString)}else switch(e){case"0 - 3":if("w"!=this.turn)throw new Error("Incorrect resign turn: "+e);this.resign=!0;break;case"3 - 0":if("b"!=this.turn)throw new Error("Incorrect resign turn: "+e);this.resign=!0;break;case"1 - 1":this.draw=!0;break;case"null":break;default:throw new Error("Incorrect end game value issued: "+e)}}get movesJSON(){return JSON.stringify(this._moves)}restoreMovesJSON(e){this._moves=JSON.parse(e),this._top=this._moves.length-1}doMove(e,i,t){try{(0,b.assertCondition)(this._top==this._moves.length-1,"push the moves over the last one");var o=V.PositionHelper.parse(e);const r=V.PositionHelper.parse(i),a=this.getPiece(o),l=((0,b.assertCondition)(null!=a,`piece on ${e} position`),(0,b.assertCondition)(null==t||a.symbol==t,t+" is the piece on "+o),(0,b.assertCondition)(a.canMoveTo(this,r),`Piece ${a.symbol} at ${a.position?.toString()} move to `+r.toString()),{piece:a,pos:o,moveTo:r});var s=this.getPiece(r);if(null!=s){(0,b.assertCondition)(a.color!=s.color&&a.canCaptureOn(this,r),`Piece ${a.symbol} at ${a.position?.toString()} capture on `+r.toString());var n=G.csPieceTypes.isPawn(a)&&null!=this.specialPawnCapture&&this.specialPawnCapture.isScornfulCapturable()&&this.specialPawnCapture.isScorned(a,r);l.captured=s,l.special=n?r:void 0,this._enpassantCaptureCoordString=null,this.pieceCaptured=!0}else if(G.csPieceTypes.isPawn(a)&&null!=this.specialPawnCapture&&this.specialPawnCapture.isEnPassantCapturable()&&this.specialPawnCapture.isEnPassantCapture(r,a)){const c=this.specialPawnCapture.capturablePiece;l.captured=c,l.special=[c.position[0],c.position[1]],this._enpassantCaptureCoordString=U.csConvert.columnFromIndex(c.position[0])+c.position[1].toString(),this.pieceCaptured=!0}else this._enpassantCaptureCoordString=null,this.pieceCaptured=!1;this.pawnMoved="P"==a.symbol,this.pushMove(l)}catch(e){throw e instanceof Error&&"Error"==e.name&&(e.name="DoMove"),e}}doPromotePawn(e,i,t){try{(0,b.assertCondition)(this._top==this._moves.length-1,"push the moves over the last one");var o=V.PositionHelper.parse(e);const a=V.PositionHelper.parse(i),l=this.getPiece(o);(0,b.assertCondition)(null!=l&&G.csPieceTypes.isPawn(l),`pawn on ${e} position`),(0,b.assertCondition)(V.PositionHelper.isPromotionHex(a,l.color),"Promotion hex");var s=V.PositionHelper.hexColor(a);const c=super.findRegeinablePiece(l.color,t,s),h={piece:l,prPos:a,promoted:c};if(V.PositionHelper.equals(o,a))this.pieceCaptured=!1,this._lastMove=V.PositionHelper.toString(a)+"="+t;else{h.pos=o,h.moveTo=a;var n=this.getPiece(a);if(null!=n){(0,b.assertCondition)(l.color!=n.color&&l.canCaptureOn(this,a),`Pawn at ${c.position?.toString()} capture on `+a.toString());var r=G.csPieceTypes.isPawn(c)&&null!=this.specialPawnCapture&&this.specialPawnCapture.isScornfulCapturable()&&this.specialPawnCapture.isScorned(c,a);h.captured=n,h.special=r?a:void 0,this._enpassantCaptureCoordString=null,this.pieceCaptured=!0}else if(null!=this.specialPawnCapture&&this.specialPawnCapture.isEnPassantCapturable()&&this.specialPawnCapture.isEnPassantCapture(a,l)){const u=this.specialPawnCapture.capturablePiece;h.captured=u,h.special=[u.position[0],u.position[1]],this._enpassantCaptureCoordString=U.csConvert.columnFromIndex(u.position[0])+u.position[1].toString(),this.pieceCaptured=!0}else this._enpassantCaptureCoordString=null,this.pieceCaptured=!1}this.pawnMoved=!0,this.pushMove(h)}catch(e){throw e instanceof Error&&"Error"==e.name&&(e.name="DoPromotePawn"),e}}doCastling(e){try{this.isGrand?(0,b.assertCondition)(U.csTypes.isGrandCastlingString(e),"castling move string"):(0,b.assertCondition)(U.csTypes.isCastlingString(e),"castling move string");var i=super.turnKing,t="w"==this.turn?"White":"Black",o=e.split("-"),s="R"==o[0][2]?"K":o[0][2],n=o[1][0],r=o[1][1],a=3==o[1].length&&"O"!=o[1][2]?o[1][2]:void 0,l=!(3<o[1].length)&&(3==o[1].length&&"O"==o[1][2]||void 0),c=T.kingCastlingPosition(i.color,n),h=((0,b.assertCondition)("K"==s||"D"==s,s+" must be King (K) side or Queen (D) side"),this.castlingRookPosition(n,r,s,l));const p=this.getPiece("K"==s?V.PositionHelper.initialKingSideRookPosition(t,this.isGrand):V.PositionHelper.initialQueenSideRookPosition(t,this.isGrand)),g=((0,b.assertCondition)(!i.moved,"King hasn't been moved"),(0,b.assertNonNullish)(c,"king destination hex"),(0,b.assertCondition)(null==this.hasPiece(c),"empty king destination hex"),(0,b.assertCondition)(!this.isThreated(c,i.color),"Not threated king destination hex"),(0,b.assertNonNullish)(p,"castling rook piece"),(0,b.assertCondition)(G.csPieceTypes.isRook(p),"castling rook"),(0,b.assertCondition)(!p.moved,"castling rook's not been moved"),(0,b.assertCondition)(p.canMoveTo(this,h,!1),"castling rook movement"),{side:o[0][2],col:n,rPos:h,kRook:"K"==s?p:void 0,qRook:"D"==s?p:void 0});if(void 0!==a){var u=this.castlingRookPosition(n,a,"D",l);const d=this.getPiece(V.PositionHelper.initialQueenSideRookPosition(t,this.isGrand));(0,b.assertNonNullish)(d,"double castling queen side rook"),(0,b.assertCondition)(G.csPieceTypes.isRook(d),"castling queen rook"),(0,b.assertCondition)(!d.moved,"castling queen rook's not been moved"),(0,b.assertCondition)(d.canMoveTo(this,u,!1),"castling queen rook movement"),g.r2Pos=u}this._lastMove=e,this._enpassantCaptureCoordString=null,this.pawnMoved=!1,this.pieceCaptured=!1,this.pushMove(g)}catch(e){throw e instanceof Error&&"Error"==e.name&&(e.name="DoMove"),e}}*pieceList(){for(const e of this.whitePieces())yield e.uncapitalizedSymbolPositionString;for(const i of this.blackPieces())yield i.uncapitalizedSymbolPositionString}*threatedPieceStringPositions(){var e="w"==this.turn?this.whitePiecePositions():this.blackPiecePositions(),i="w"==this.turn?"White":"Black";for(const t of e)this.isThreated(t,i)&&(yield V.PositionHelper.toString(t))}*ownThreatedPieceStringPositions(){var e="w"==this.turn?this.blackPiecePositions():this.whitePiecePositions(),i="w"==this.turn?"Black":"White";for(const t of e)this.isThreated(t,i)&&(yield V.PositionHelper.toString(t))}*castlingMoves(e,i){}*castlingStrMoves(e,s){var i=V.PositionHelper.initialQueenSideRookPosition(e,this.isGrand),t=V.PositionHelper.initialKingSideRookPosition(e,this.isGrand);const n=this.getPiece(i),o=this.getPiece(t);if(null!=o&&!o.moved)for(const c of U.csConvert.orthogonalDirections()){var r,a=V.PositionHelper.orthogonalStep(s,c);if(null!=a&&o.canMoveTo(this,a,!1)){let o="KRK-"+U.csConvert.columnFromIndex(s[0])+U.csConvert.columnFromIndex(a[0]);if(9==s[0]&&10==a[0]&&(r=a[1]-t[1],o+=2==r||-2==r?"O":"OO"),yield o,null!=n&&!n.moved){let i,t;if(s[0]==a[0]){i=a[0]+1,t=s[1]>a[1]?a[1]+1:s[1]+1;const h=[i,t];let e;(e=n.canMoveTo(this,h,!1))||(h[0]=a[0]-1,e=n.canMoveTo(this,h,!1)),e&&(yield o="KRR-"+U.csConvert.columnFromIndex(s[0])+U.csConvert.columnFromIndex(a[0])+U.csConvert.columnFromIndex(h[0]))}else{i=a[0],t=s[1]>a[1]?a[1]+2:a[1]-2;const u=[i,t];n.canMoveTo(this,u,!1)&&(yield o="KRR-"+U.csConvert.columnFromIndex(s[0])+U.csConvert.columnFromIndex(a[0])+U.csConvert.columnFromIndex(u[0])),u[0]=s[0],u[1]=s[1]>a[1]?s[1]-2:s[1]+2,n.canMoveTo(this,u,!1)&&(yield o="KRR-"+U.csConvert.columnFromIndex(s[0])+U.csConvert.columnFromIndex(a[0])+U.csConvert.columnFromIndex(u[0]))}}}}if(null!=n&&!n.moved)for(const p of U.csConvert.orthogonalDirections()){var l=V.PositionHelper.orthogonalStep(s,p);null!=l&&n.canMoveTo(this,l,!1)&&(yield"KRD-"+U.csConvert.columnFromIndex(s[0])+U.csConvert.columnFromIndex(l[0]))}}castlingKingPosition(e){(0,b.assertCondition)(U.csTypes.isCastlingColumn(e),`Column: ${e} has to be a king castling column`);var i=super.turnKing;return i.moved?null:(e=T.kingCastlingPosition(i.color,e),null!=this.hasPiece(e)||this.isThreated(e,i.color)?null:e)}castlingRookPosition(e,i,t,o){var s="w"==this.turn?"White":"Black",n="K"==t?V.PositionHelper.initialKingSideRookPosition(s,this.isGrand):V.PositionHelper.initialQueenSideRookPosition(s,this.isGrand),r=((0,b.assertCondition)(U.csTypes.isCastlingColumn(e),`King column: ${e} has to be a king castling column`),T.rookCastleMove(e,i,s,t,this.isGrand));let a=V.PositionHelper.orthogonalStep(n,r);if("ColumnUp"==r||"ColumnDown"==r)return a=void 0===o&&!this.isGrand||void 0!==o&&!o?V.PositionHelper.orthogonalStep(a,r):a;for(var l=U.csConvert.toColumnIndex(i);a[0]!=l;)a=V.PositionHelper.orthogonalStep(a,r);return a}playerCastlingPositionStatus(e){var i=super.turnKing;return(0,b.assertCondition)(U.csTypes.isCastlingColumn(e),`Column: ${e} has to be a king castling column`),i.moved?null:(e=("w"==this.turn?T.whiteKingCastlingMove:T.blackKingCastlingMove)[e],[e=V.PositionHelper.knightJump(i.position,e),null!=this.hasPiece(e)?"occupied":this.isThreated(e,i.color)?"threated":""])}get castlingStatus(){var e=this.wKing.getCastlingStatus(this),i=this.bKing.getCastlingStatus(this).toLowerCase();return"-"==e&&"-"==i?"-":"-"==e?i:"-"==i?e:e+i}playerCastlingStatus(){return super.turnKing.getCastlingStatus(this)}get valueTLPD(){return this.piecePositionsTLPD+" "+this.turn+" "+this.castlingStatus+" "+(this.specialPawnCapture?.toString()??"-")+" "+this.halfmoveClock.toString()+" "+(this.fixedNumbering?this.moveNumber.toString():"-")}get piecePositionsTLPD(){let e="/";for(let o=28;0<=o;o--){var s=o%2==0,n=o<=5?7-o:23<=o?o-21:s?1:0,r=o<=5?o+7:23<=o?35-o:s?13:14;let i="",t=0;for(let e=n;e<=r;e+=2){var a=this.getPiece([e,o]);null!=a?(0<t&&(i+=t.toString()),i+=a.uncapitalizedSymbol,t=0):t++}0<i.length&&(e+=o.toString()+":"+i,0<t&&(e+=t.toString()),e+="/")}return e}loadTLPD(e){try{(0,b.assertCondition)(null!=e,"Not empty TLPD"),(0,b.assertCondition)(12<e.trim().length,"Enough TLPD length");var i=e.split(" "),t=((0,b.assertCondition)(2<=i.length,"Piece positions and turn are mandatory"),(0,b.assertCondition)(10<=i[0].length,"Piece positions string"),(0,b.assertCondition)(U.csTypes.isTurn(i[1]),"Correct turn"),i[1]),[o,s]=(super.resetGame(t),this._moves.length=0,this._top=-1,u.splitCastlingStatus(i[2]));if(this.restoreTLPDPositions(i[0],o,s),this.halfmoveClock=U.csTypes.isNumber(Number(i[4]))?Number(i[4]):0,isNaN(Number(i[4]))&&null!=i[4]&&"-"!==i[4])throw new TypeError("Invalid halfmove clock value");if(this.moveNumber=U.csTypes.isNumber(Number(i[5]))?Number(i[5]):1,isNaN(Number(i[5]))){if(null!=i[5]&&"-"!=i[5])throw new TypeError("Invalid move number");this.fixedNumbering=!1}else this.fixedNumbering=!0;super.specialPawnCapture=n.parse(this,i[3]),this.initGame()}catch(e){throw e instanceof Error&&"Error"==e.name&&(e.name="TLPD"),e}}restoreTLPDPositions(e,i,t){(0,b.assertCondition)(10<=e.length&&"/"==e[0]&&"/"==e[e.length-1],"Valid TLPD string positions: "+e);const o=[];var s,n=[],r=[],e=e.split("/");this.wKing.captured(),this.bKing.captured();for(s of e)if(0<s.length){if(s.startsWith(":")||s.endsWith(":")||1!=(s.match(/:/g)||[]).length)throw new Error("Incorrect line number issued: "+s);var[a,l]=s.split(":"),c=Number(a);if(!(!isNaN(c)&&0<=c&&c<=28))throw new Error("Incorrect line issued: "+a);{var h=0<=c&&c<6?7+c:c<=22?c%2==0?13:14:35-c;let e=0<=c&&c<6?7-c:c<=22?c%2==0?1:0:c-21;for(const m of l){if(e>h)throw new Error("Incorrect TLPD line content");var u=Number(m);if(isNaN(u)){var p=U.csTypes.isPieceName(m)?m:T.convertPieceAliases(m.toUpperCase()),g=m.toUpperCase()==m?"White":"Black";if("K"==p)if("White"==g){if(null!=this.wKing.position)throw new Error("Can't place two White Kings");if(this.wKing.setPositionTo([e,c]),null!=this.hasPiece(this.wKing.position))throw new Error("Can't place White King on the place used by another piece");this.addPiece(this.wKing)}else{if(null!=this.bKing.position)throw new Error("Can't place two Black Kings");if(this.bKing.setPositionTo([e,c]),null!=this.hasPiece(this.bKing.position))throw new Error("Can't place Black King on the place used by another piece");this.addPiece(this.bKing)}else{var d=T.createPiece(p,g,e,c);if(G.csPieceTypes.isRook(d)?o.push(d):G.csPieceTypes.isPawn(d)&&null!=d.awaitingPromotion&&super.setAwaitingPromotion(d.color),null!=this.hasPiece(d.position))throw new Error(`You cannot put a ${g} ${p} there`+", because the hex is already in use; There may be a repeated line in the TLPD");{const w="White"==g?n:r;this.addPiece(d),w.push(d)}}e+=2}else e+=u<<1}}}if(null==this.wKing.position)throw new Error("There must be a White King");if(null==this.bKing.position)throw new Error("There must be a Black King");var v,P=(e,t)=>e.reduce((e,i)=>i.symbol===t?e+1:e,0);for(v of["White","Black"]){const f="White"==v?n:r;let e=P(f,"D");if(1<e)throw new Error(`Too many ${v} Queens`);if(0==e&&this.addRegainablePiece(T.createPiece("D",v)),1<(e=P(f,"V")))throw new Error(`Too many ${v} Wyverns`);if(0==e&&this.addRegainablePiece(T.createPiece("V",v)),2<(e=P(f,"R")))throw new Error(`Too many ${v} Rooks`);for(;e<2;)this.addRegainablePiece(T.createPiece("R",v)),e++;if(2<(e=P(f,"G")))throw new Error(`Too many ${v} Pegasus`);for(;e<2;)this.addRegainablePiece(T.createPiece("G",v)),e++;if(2<(e=P(f,"N")))throw new Error(`Too many ${v} Knights`);for(;e<2;)this.addRegainablePiece(T.createPiece("N",v)),e++;if(3<(e=P(f,"J")))throw new Error(`Too many ${v} Bishops`);{let e={White:0,Black:0,Color:0};for(const C of f.filter(e=>G.csPieceTypes.isBishop(e)))e[C.hexesColor]+=1;if(1<e.White||1<e.Black||1<e.Color)throw new Error(`Too many ${v} Bishops on same color hexes`);0==e.White&&this.addRegainablePiece(new y.Bishop(v,"White")),0==e.Black&&this.addRegainablePiece(new y.Bishop(v,"Black")),0==e.Color&&this.addRegainablePiece(new y.Bishop(v,"Color"))}}this.wKing.castlingStatus=i,this.bKing.castlingStatus=t;for(const k of o)k.setCastlingStatus("White"==k.color?i:t,this.isGrand)}forwardingTurn(){super.nextTurn(),"w"===this.turn&&this.moveNumber++,this.pawnMoved||this.pieceCaptured?this.halfmoveClock=0:this.halfmoveClock++,super.prepareCurrentTurn();var e=super.isMoveableTurn();if(e?100<=this.halfmoveClock&&(this._draw=!0):this.checked?this._mate=!0:this._stalemate=!0,this.checked)if(this._mate)this._lastMove+="#";else if(this.isKnightOrCloseCheck)this._lastMove+="^+";else if(this.isSingleCheck)this._lastMove+="+";else{if(!this.isDoubleCheck)throw new Error("never: exhaused check options");this._lastMove+="++"}super.computeHeuristic(this.turn,this.moveNumber,e,this.currentHeuristic)}initGame(){super.prepareGame(),this._mate=!1,this._stalemate=!1,this._resigned=!1,this._draw=!1;var e=super.isMoveableTurn();e?100<=this.halfmoveClock&&(this._draw=!0):this.checked?this._mate=!0:this._stalemate=!0,this._lastMove="",super.computeHeuristic(this.turn,this.moveNumber,e,this.currentHeuristic)}pushMove(e){const i={n:this.moveNumber,turn:this.turn,move:e,initHalfMoveClock:0==this.halfmoveClock?1:void 0,specialPawnCapture:null==this.specialPawnCapture?void 0:this.specialPawnCapture.toString(),castlingStatus:o.csMoves.isMoveInfo(e)&&0<=["K","R"].indexOf(e.piece.symbol)?this.playerCastlingStatus():void 0,end:void 0,check:void 0};this.applyMove(e,this.turn),super.nextTurn(),"w"===this.turn&&this.moveNumber++,o.csMoves.isMoveInfo(e)&&"P"==e.piece.symbol||o.csMoves.isCaptureInfo(e)||o.csMoves.isPromotionInfo(e)?this.halfmoveClock=0:this.halfmoveClock++,super.prepareCurrentTurn();var t=super.isMoveableTurn();if(t){if(200<=this.halfmoveClock)this._draw=!0,i.end="draw";else if(this.checked)if(this.isKnightOrCloseCheck)i.check="^+";else if(this.isSingleCheck)i.check="+";else{if(!this.isDoubleCheck)throw new Error("never: exhaused check options");i.check+="++"}}else this.checked?(this._mate=!0,i.end="mate"):(this._stalemate=!0,i.end="stalemate");this._moves.push(i),this._top++,super.computeHeuristic(this.turn,this.moveNumber,t,this.currentHeuristic),this._lastMove=o.csMoves.moveNotation(e)}popMove(){if(0<this._moves.length){this._top--;const e=this._moves.pop();super.nextTurn(),this._draw=!1,this._resigned=!1,this._mate=!1,this._stalemate=!1,this.undoMove(e.move,e.turn),null!=e.castlingStatus&&o.csMoves.isMoveInfo(e.move)&&("R"==e.move.piece.symbol?e.move.piece.setCastlingStatus(e.castlingStatus,this.isGrand):"K"==e.move.piece.symbol&&(e.move.piece.castlingStatus=e.castlingStatus)),void 0===e.specialPawnCapture?this.specialPawnCapture=null:this.specialPawnCapture=n.parse(this,e.specialPawnCapture),"b"===this.turn&&this.moveNumber--,void 0===e.initHalfMoveClock?this.halfmoveClock--:this.halfmoveClock=0,super.prepareCurrentTurn(),super.computeHeuristic(this.turn,this.moveNumber,!0,this.currentHeuristic),this._lastMove=o.csMoves.moveNotation(e.move)}}applyMove(e,i){var t;o.csMoves.isCastlingInfo(e)?this.applyCastling(e,"w"==i?"White":"Black"):(i=e.piece,o.csMoves.isMoveInfo(e)?(t=e.moveTo,o.csMoves.isCaptureInfo(e)&&super.capturePiece(e.captured),super.movePiece(i,t[0],t[1]),o.csMoves.isPromotionInfo(e)&&super.promotePawn(i,e.promoted)):super.promotePawn(i,e.promoted))}applyCastling(e,i){var i="White"==i?this.wKing:this.bKing,t=T.kingCastlingPosition(i.color,e.col);switch(e.side){case"K":super.movePiece(e.kRook,e.rPos[0],e.rPos[1]);break;case"D":super.movePiece(e.qRook,e.rPos[0],e.rPos[1]);break;case"R":super.movePiece(e.kRook,e.rPos[0],e.rPos[1]),super.movePiece(e.qRook,e.r2Pos[0],e.r2Pos[1])}super.movePiece(i,t[0],t[1])}undoMove(e,i){o.csMoves.isCastlingInfo(e)?this.undoCastling(e,"w"==i?"White":"Black"):o.csMoves.isMoveInfo(e)?(o.csMoves.isPromotionInfo(e)&&super.undoPromotePawn(e.piece,e.promoted),super.undoPieceMove(e.piece,e.pos[0],e.pos[1]),o.csMoves.isCaptureInfo(e)&&(i=void 0===e.special?e.moveTo:e.special,super.undoCapturePiece(e.captured,i[0],i[1]))):super.undoPromotePawn(e.piece,e.promoted)}undoCastling(e,i){var t=this.isGrand;const o="White"==i?this.wKing:this.bKing;var s="White"==i?V.PositionHelper.whiteKingInitPosition:V.PositionHelper.blackKingInitPosition,n="D"==e.side?V.PositionHelper.initialQueenSideRookPosition(i,t):V.PositionHelper.initialKingSideRookPosition(i,t);const r="D"==e.side?e.qRook:e.kRook;console.log(e),(0,b.assertNonNullish)(r),super.undoPieceMove(o,s[0],s[1]),super.undoPieceMove(r,n[0],n[1]),o.castlingStatus="RKR",r.setCastlingStatus("RKR",t),"R"==e.side&&(s=V.PositionHelper.initialQueenSideRookPosition(i,t),super.undoPieceMove(e.qRook,s[0],s[1]),e.qRook.setCastlingStatus("RKR",t))}applyMoveSq(e){try{(0,b.assertCondition)(this._top==this._moves.length-1,"push the moves over the last one");var i="1"!=(e=e.replaceAll(" ","").replace(/\n\n+/g,"\n").replace(/^[\s\n]+|[\s\n]+$/gm,""))[0]||"?"!=e[1];e=e.replace(/^1\?/,"1.").replace(/^1....,/,"1.…");const s=new RegExp(/^(\d+\..*\n)+\d+\..*$/),n=((0,b.assertCondition)(s.test(e),"numbered lines"),e.split(/\r?\n/));var t=this.moveNumber;for(let e=0;e<n.length;e++){var o=n[e].split(/[.,]\s?/);const r=parseInt(o[0]);(0,b.assertCondition)(r.toString()==o[0],`Line number of "${n[e]}"`),(0,b.assertCondition)(this.moveNumber==(i?r:t+r-1),`Expected move number ${this.moveNumber} on move `+e),1==r?((0,b.assertCondition)(3==o.length,"first move must be a numbered pair of moves; white move can be an ellipsis: "+n[0]),"…"==o[1]?(0,b.assertCondition)("b"==this.turn,"It begins on black's turn"):((0,b.assertCondition)("w"==this.turn,"It begins on white's turn"),this.applyStringMove(o[1])),this.applyStringMove(o[2])):e==n.length-1?((0,b.assertCondition)(2<=o.length&&o.length<=3,"last move "+n[e]),this.applyStringMove(o[1]),3==o.length&&this.applyStringMove(o[2])):((0,b.assertCondition)(3==o.length,"numbered pair of moves: "+n[e]),this.applyStringMove(o[1]),this.applyStringMove(o[2]))}this.fixedNumbering=this.fixedNumbering&&1!=t||i}catch(e){throw e instanceof Error&&"Error"==e.name&&(e.name="Move seq"),e}}applyStringMove(e){var i,t,o,s,n,r=(e,i=0)=>{let t=i;for(;t<e.length;){var o=e.charCodeAt(t);if(!(48<=o&&o<58||65<=o&&o<91||97<=o&&o<123))return t;t++}return t},a=e=>V.PositionHelper.isValidPosition(V.PositionHelper.parse(e));(0,b.assertCondition)(this._top==this._moves.length-1,"push the move over the last one"),(0,b.assertCondition)(4<=e.length,"Moviment length must be at least of 4 chars"),e.startsWith("KR")&&"-"==e[3]||"–"==e[3]?(s="–"==e[3]?e.replace("–","-"):e,this.isGrand?(0,b.assertCondition)(U.csTypes.isGrandCastlingString(s),"grand castling move: "+s):(0,b.assertCondition)(U.csTypes.isCastlingString(s),"castling move: "+s),this.doCastling(s)):(s=r(e=e.replace("x","×")),i=U.csTypes.isPieceName(e[0])&&U.csTypes.isColumn(e[1])?e[0]:"P",t=e.slice("P"==i?0:1,s),(0,b.assertCondition)(s<e.length-1,"Moviment divided into parts"),(0,b.assertCondition)(a(t),"Initial hex"),o="@"==e.charAt(s)&&"@"==e.charAt(s+1)?"@@":e.charAt(s),(0,b.assertCondition)(["-","–","×","@","@@","="].includes(o),`valid origin&destiny separator "${o}"`),"="==o?(n=e[s+1],(0,b.assertCondition)("P"==i,"Promoting a pawn"),this.doPromotePawn(t,t,n)):((0,b.assertCondition)(s<e.length-2,"Movement destination"),r=r(e,n=s+o.length),s=U.csTypes.isPieceName(e[n])&&U.csTypes.isColumn(e[n+1])?e[n]:void 0,n=e.slice(void 0===s?n:n+1,r),(0,b.assertCondition)(a(n),"Destination hex"),(0,b.assertCondition)(void 0===s||"-"!=o&&"–"!=o,"Captured piece"),r<e.length&&"="==e[r]?(a=e[r+1],(0,b.assertCondition)("P"==i,"Promoting a pawn"),this.doPromotePawn(t,n,a)):this.doMove(t,n,i)))}}(t.Game=T).whiteKingCastlingMove={I:"LineUp-FileUp",H:"LineUp-ColumnUp",F:"LineInvUp-ColumnUp",E:"LineInvUp-FileInvUp",D:"TransversalLineDec-FileInvUp"},T.blackKingCastlingMove={I:"LineDown-FileDown",H:"LineDown-ColumnDown",F:"LineInvDown-ColumnDown",E:"LineInvDown-FileInvDown",D:"TransversalLineDec-FileInvDown"}},{"./cescacs.moves":2,"./cescacs.piece":3,"./cescacs.positionHelper":4,"./cescacs.types":5,"./ts.general":6}],2:[function(e,i,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.csMoves=void 0;const s=e("./cescacs.types"),n=e("./cescacs.positionHelper"),o=e("./cescacs.piece");function r(e){return"string"==typeof e&&("K"===e||"D"===e||"R"===e)}function a(e){return void 0!==e.side&&r(e.side)&&void 0!==e.col&&s.csTypes.isCastlingColumn(e.col)&&void 0!==e.rPos&&s.csTypes.isPosition(e.rPos)&&("D"===e.side||void 0!==e.kRook&&e.kRook instanceof o.Rook)&&("K"===e.side||void 0!==e.qRook&&e.qRook instanceof o.Rook)&&("R"!=e.side||void 0!==e.r2Pos&&s.csTypes.isPosition(e.r2Pos))}function l(e){return void 0!==e.piece&&e.piece instanceof o.Piece&&void 0!==e.prPos&&s.csTypes.isPosition(e.prPos)&&void 0!==e.promoted&&e.promoted instanceof o.Piece}function c(e){return void 0!==e.piece&&e.piece instanceof o.Piece&&void 0!==e.pos&&s.csTypes.isPosition(e.pos)&&void 0!==e.moveTo&&s.csTypes.isPosition(e.moveTo)}function h(e){return void 0!==e.captured&&e.captured instanceof o.Piece&&(void 0===e.special||s.csTypes.isPosition(e.special))}function u(i){if(a(i))return t=void 0!==i.r2Pos?s.csConvert.columnFromIndex(i.r2Pos[0]):"K"==i.side&&"H"==i.col&&10==i.rPos[0]?5==i.rPos[1]||23==i.rPos[1]?"O":7==i.rPos[1]||21==i.rPos[1]?"OO":"":"","KR"+i.side+"-"+i.col+s.csConvert.columnFromIndex(i.rPos[0])+t;if(c(i)){var t=("P"==i.piece.symbol?"":i.piece.symbol)+n.PositionHelper.toString(i.pos),o=l(i)?"="+i.promoted.symbol:"";let e;return t+(e=h(i)?void 0!==i.special?n.PositionHelper.equals(i.moveTo,i.special)||2==Math.abs(i.special[1]-i.moveTo[1])?"@":"@@":"P"==i.captured.symbol?"×":"×"+i.captured.symbol:"-")+n.PositionHelper.toString(i.moveTo)+o}if(l(i))return n.PositionHelper.toString(i.prPos)+"="+i.promoted.symbol;throw new TypeError("must be a move notation")}(e=t.csMoves||(t.csMoves={})).isCastlingSide=r,e.isCastlingInfo=a,e.isPromotionInfo=l,e.isMoveInfo=c,e.isCaptureInfo=h,e.fullMoveNotation=function(e){var i=e.check??("mate"==e.end?"#":"");return("w"==e.turn?e.n+". ":"")+u(e.move)+i},e.endText=function(e,i){if(void 0===e.end)return"";switch(e.end){case"mate":case"resigned":return"b"==i?"3 - 0":"0 - 3";case"stalemate":return"b"==i?"2 - 1":"1 - 2";case"draw":return"1 - 1";default:var t=e.end;throw new Error(t)}},e.undoStatusId=function(e){return e.turn+e.n},e.moveNotation=u},{"./cescacs.piece":3,"./cescacs.positionHelper":4,"./cescacs.types":5}],3:[function(e,i,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.csPieceTypes=t.Pawn=t.Almogaver=t.Elephant=t.Bishop=t.Knight=t.Pegasus=t.Rook=t.Wyvern=t.Queen=t.King=t.Piece=void 0;const v=e("./cescacs.types"),P=e("./cescacs.positionHelper"),l=e("./ts.general");class o{constructor(e,i,t){if(this.color=e,null==i)this._position=null;else{if(null==t)throw new TypeError("Line shoud be defined when column is");this._position=P.PositionHelper.fromBoardPosition(i,t)}}static isRegainablePiece(e){switch(e){case"D":case"V":case"R":case"G":case"N":case"J":return!0;default:return!1}}get position(){return this._position}setPositionTo(e){if(null!=this._position)throw new Error("Piece can't be reassigned to a new position");this._position=e}moveTo(e,i){null!=this._position&&(this._position[0]=e,this._position[1]=i)}get pin(){return this._pin}set pin(e){this._pin=e}get hasOrthogonalAttack(){return"R"==this.symbol||"V"==this.symbol||"D"==this.symbol}get hasDiagonalAttack(){return"J"==this.symbol||"G"==this.symbol||"D"==this.symbol}get hasKnightJumpAttack(){return"N"==this.symbol||"V"==this.symbol||"G"==this.symbol}get hasOnlyCloseAttack(){return"P"==this.symbol||"E"==this.symbol||"M"==this.symbol||"K"==this.symbol}get isRegainable(){return o.isRegainablePiece(this.symbol)}toString(){return this.uncapitalizedSymbol+this.position?.toString()}get uncapitalizedSymbol(){return"White"==this.color?this.symbol:this.symbol.toLowerCase()}get symbolPositionString(){return this.symbol+(null==this.position?"":P.PositionHelper.toString(this.position))}get uncapitalizedSymbolPositionString(){return this.uncapitalizedSymbol+(null==this.position?"":P.PositionHelper.toString(this.position))}canMoveTo(e,i){return P.PositionHelper.positionIteratorIncludes(this.moves(e),i)}canCaptureOn(e,i){return this.canMoveTo(e,i)}captured(){(0,l.assertNonNullish)(this._position,"Don't capture again the piece"),this._position=null}*blockThreat(e,i){yield*P.PositionHelper.positionIteratorIntersection(this.moves(e),i)}*knightMoves(e,i=!1){if(null!=this._position&&null==this.pin)for(const o of P.PositionHelper.knightMoves(this._position)){var t;!i&&null!=(t=e.hasPiece(o))&&t===this.color||(yield o)}}*orthogonalMoves(i,t=!1){if(null!=this._position)for(const s of(null==this.pin?null:v.csTypes.isOrthogonalOrientation(this.pin)?this.pin:[])??v.csConvert.orthogonalDirections()){const n=P.PositionHelper.orthogonalRide(this._position,s);let e=n.next();for(;0==e.done;){var o=i.hasPiece(e.value);e=null==o?(yield e.value,n.next()):(!t&&o===this.color||(yield e.value),n.return())}}}*diagonalMoves(i,t=!1){if(null!=this._position)for(const s of(null==this.pin?null:v.csTypes.isDiagonalOrientation(this.pin)?this.pin:[])??v.csConvert.diagonalDirections()){const n=P.PositionHelper.diagonalRide(this._position,s);let e=n.next();for(;!e.done;){var o=i.hasPiece(e.value);e=null==o?(yield e.value,n.next()):(!t&&o===this.color||(yield e.value),n.return())}}}orthogonalStep(e,i,t=!0,o=!1){return null!=this._position?(null!=this.pin&&v.csTypes.isOrthogonalOrientation(this.pin)&&this.pin,(null==this._pin||this._pin.includes(i))&&null!=(i=P.PositionHelper.orthogonalStep(this._position,i))?(e=e.hasPiece(i),o||null==e||t&&e!==this.color?i:null):null):null}diagonalStep(e,i,t=!0,o=!1){return null!=this._position&&(null==this._pin||this._pin.includes(i))&&null!=(i=P.PositionHelper.diagonalStep(this._position,i))?(e=e.hasPiece(i),o||null==e||t&&e!==this.color?i:null):null}canMoveOrthogonallyTo(e,i,t=!0){if(null!=this.position){var o=P.PositionHelper.isOrthogonally(this.position,i);if(null!=o&&(null==this._pin||this._pin.includes(o))){var s=e.hasPiece(i);if(null==s||t&&s!=this.color)for(const n of P.PositionHelper.orthogonalRide(this.position,o)){if(P.PositionHelper.equals(i,n))return!0;if(null!=e.hasPiece(n))return!1}}}return!1}canMoveDiagonallyTo(e,i,t=!0){if(null!=this.position){var o=P.PositionHelper.isDiagonally(this.position,i);if(null!=o&&(null==this._pin||this._pin.includes(o))){var s=e.hasPiece(i);if(null==s||t&&s!=this.color)for(const n of P.PositionHelper.diagonalRide(this.position,o)){if(P.PositionHelper.equals(i,n))return!0;if(null!=e.hasPiece(n))return!1}}}return!1}}class s extends(t.Piece=o){constructor(e){super(e),this.symbol="K",this.value=0,this._moved=!1,this.checkPosition=null}setPositionTo(e){super.setPositionTo(e),this._moved=!this.isInitialPosition}setToInitialPosition(){super.setPositionTo(this.initialPosiition),this._moved=!1}get checked(){return null!=this.checkPosition}get moved(){return this._moved}set castlingStatus(e){this._moved=this._moved||"-"==e}getCastlingStatus(e){var i;return this._moved?"-":(i=e.getPiece(P.PositionHelper.initialKingSideRookPosition(this.color,e.isGrand)),e=e.getPiece(P.PositionHelper.initialQueenSideRookPosition(this.color,e.isGrand)),null!=i&&i.color==this.color&&m.isRook(i)&&!i.moved?null!=e&&e.color==this.color&&m.isRook(e)&&!e.moved?"RKR":"KR":null!=e&&e.color==this.color&&m.isRook(e)&&!e.moved?"KR":"K")}moveTo(e,i){super.moveTo(e,i),this._moved=!0}*moves(e){if(this.checked){(0,l.assertNonNullish)(this.position),(0,l.assertNonNullish)(this.checkPosition);for(const n of v.csConvert.orthogonalDirections()){var i,t=P.PositionHelper.orthogonalStep(this.position,n);null==t||null!=this.pin&&this.pin.includes(n)&&!v.csTypes.isCheckAttackPos(this.checkPosition,t)||null!=(i=e.hasPiece(t))&&i==this.color||e.isThreated(t,this.color)||(yield t)}for(const r of v.csConvert.diagonalDirections()){var o,s=P.PositionHelper.diagonalStep(this.position,r);null==s||null!=this.pin&&this.pin.includes(r)&&!v.csTypes.isCheckAttackPos(this.checkPosition,s)||null!=(o=e.hasPiece(s))&&o==this.color||e.isThreated(s,this.color)||(yield s)}}else for(const a of this.attemptMoves(e))e.isThreated(a,this.color)||(yield a)}markThreats(e){for(const i of this.attemptMoves(e,!0))e.setThreat(i,this.color)}computeCheckAndPins(t){this.checkPosition=null,console.log(`Compute ${this.color} pins`);for(const i of P.PositionHelper.knightMoves(this.position)){var e=t.getPiece(i);null!=e&&e.color!=this.color&&e.hasKnightJumpAttack&&this.setKnightOrCloseAttack(i)}for(const a of v.csConvert.orthogonalDirections()){const l=P.PositionHelper.orthogonalRide(this.position,a);let e=l.next(),i=!0;for(;!e.done;){var o=e.value;const c=t.getPiece(o);if(null==c)i=!1,e=l.next();else{if(c.color!=this.color)i?c.hasOrthogonalAttack?this.setKnightOrCloseAttack(o,a):c.hasOnlyCloseAttack&&c.canCaptureOn(t,this.position)&&this.setKnightOrCloseAttack(o):c.hasOrthogonalAttack&&this.setOrthogonalAtack(o,a);else{const h=P.PositionHelper.orthogonalRide(o,a);let e=h.next();for(;!e.done;){var s=e.value,s=t.getPiece(s);e=null==s?h.next():(s.color!=this.color&&s.hasOrthogonalAttack&&(c.pin=v.csConvert.getOrthogonalOrientation(a)),h.return())}}e=l.return()}}}for(const u of v.csConvert.diagonalDirections()){const p=P.PositionHelper.diagonalRide(this.position,u);let e=p.next(),i=!0;for(;!e.done;){var n=e.value;const g=t.getPiece(n);if(null==g)i=!1,e=p.next();else{if(g.color!=this.color)i?g.hasDiagonalAttack?this.setKnightOrCloseAttack(n,u):g.hasOnlyCloseAttack&&g.canCaptureOn(t,this.position)&&this.setKnightOrCloseAttack(n):g.hasDiagonalAttack&&this.setDiagonalAtack(n,u);else{const d=P.PositionHelper.diagonalRide(n,u);let e=d.next();for(;!e.done;){var r=e.value,r=t.getPiece(r);e=null==r?d.next():(r.color!=this.color&&r.hasDiagonalAttack&&(g.pin=v.csConvert.getDiagonalOrientation(u)),d.return())}}e=p.return()}}}}isKnightOrCloseCheck(){return null!=this.checkPosition&&v.csTypes.isPosition(this.checkPosition)}isSingleCheck(){return null!=this.checkPosition&&v.csTypes.isSingleCheck(this.checkPosition)}isDoubleCheck(){return null!=this.checkPosition&&!v.csTypes.isPosition(this.checkPosition)&&!v.csTypes.isSingleCheck(this.checkPosition)}get checkThreat(){return null!=this.checkPosition?v.csTypes.isPosition(this.checkPosition)?this.checkPosition:v.csTypes.isSingleCheck(this.checkPosition)?this.checkPosition.p:null:null}getSingleCheckBlockingPositions(e){const i=[];if((0,l.assertNonNullish)(this.position),v.csTypes.isSingleCheck(this.checkPosition)){var t=this.checkPosition.d;if(v.csTypes.isDiagonalDirection(t))for(const o of P.PositionHelper.diagonalRide(this.position,t)){if(null!=e.hasPiece(o))break;i.push(o)}else if(v.csTypes.isOrthogonalDirection(t))for(const s of P.PositionHelper.orthogonalRide(this.position,t)){if(null!=e.hasPiece(s))break;i.push(s)}}return i}setOrthogonalAtack(e,i){if(null!=this.checkPosition)if(v.csTypes.isPosition(this.checkPosition))this.checkPosition=[this.checkPosition,e,null],this.pin=v.csConvert.getOrthogonalOrientation(i);else{if(!v.csTypes.isSingleCheck(this.checkPosition))throw new Error("Triple check situation can't be achieved in the course of a game");this.checkPosition=[this.checkPosition.p,e,v.csConvert.getOrthogonalOrientation(i)]}else this.checkPosition={p:e,d:i},this.pin=v.csConvert.getOrthogonalOrientation(i)}setDiagonalAtack(e,i){if(null!=this.checkPosition)if(v.csTypes.isPosition(this.checkPosition))this.checkPosition=[this.checkPosition,e,null],this.pin=v.csConvert.getDiagonalOrientation(i);else{if(!v.csTypes.isSingleCheck(this.checkPosition))throw new Error("Triple check situation can't be achieved in the course of a game");this.checkPosition=[this.checkPosition.p,e,v.csConvert.getDiagonalOrientation(i)]}else this.checkPosition={p:e,d:i},this.pin=v.csConvert.getDiagonalOrientation(i)}setKnightOrCloseAttack(e,i){if(null!=this.checkPosition){if(v.csTypes.isPosition(this.checkPosition))throw new Error("Double knight or close check situation can't be achieved in the course of a game");if(!v.csTypes.isSingleCheck(this.checkPosition))throw new Error("Triple check situation can't be reached along a game");null==i?this.checkPosition=[this.checkPosition.p,e,null]:v.csTypes.isOrthogonalDirection(i)?this.checkPosition=[this.checkPosition.p,e,v.csConvert.getOrthogonalOrientation(i)]:this.checkPosition=[this.checkPosition.p,e,v.csConvert.getDiagonalOrientation(i)]}else this.checkPosition=e,null!=i&&(this.pin=v.csTypes.isOrthogonalDirection(i)?v.csConvert.getOrthogonalOrientation(i):v.csConvert.getDiagonalOrientation(i))}*orthogonalStepList(e,i){(0,l.assertNonNullish)(this.position);for(const s of v.csConvert.orthogonalDirections()){var t,o=P.PositionHelper.orthogonalStep(this.position,s);null==o||!i&&null!=(t=e.hasPiece(o))&&t===this.color||(yield o)}}*diagonalStepList(e,i){(0,l.assertNonNullish)(this.position);for(const s of v.csConvert.diagonalDirections()){var t,o=P.PositionHelper.diagonalStep(this.position,s);null==o||!i&&null!=(t=e.hasPiece(o))&&t===this.color||(yield o)}}*attemptMoves(e,i=!1){yield*this.orthogonalStepList(e,i),yield*this.diagonalStepList(e,i),this._moved||this.checked||(yield*this.knightMoves(e))}get initialPosiition(){return"White"==this.color?P.PositionHelper.whiteKingInitPosition:P.PositionHelper.blackKingInitPosition}get isInitialPosition(){return null!=this.position&&(8==this.position[0]&&("White"==this.color&&1==this.position[1]||"Black"==this.color&&27==this.position[1]))}}t.King=s;class n extends o{constructor(){super(...arguments),this.symbol="D",this.value=15}*moves(e){yield*this.orthogonalMoves(e),yield*this.diagonalMoves(e)}canMoveTo(e,i){return super.canMoveOrthogonallyTo(e,i)||super.canMoveDiagonallyTo(e,i)}markThreats(e){for(const i of this.orthogonalMoves(e,!0))e.setThreat(i,this.color);for(const t of this.diagonalMoves(e,!0))e.setThreat(t,this.color)}}t.Queen=n;class r extends o{constructor(){super(...arguments),this.symbol="V",this.value=14}*moves(e){yield*this.orthogonalMoves(e),yield*this.knightMoves(e)}canMoveTo(e,i){return super.canMoveOrthogonallyTo(e,i)||P.PositionHelper.positionIteratorIncludes(this.knightMoves(e),i)}markThreats(e){for(const i of this.orthogonalMoves(e,!0))e.setThreat(i,this.color);for(const t of this.knightMoves(e,!0))e.setThreat(t,this.color)}}t.Wyvern=r;class a extends o{constructor(e,i,t){super(e),this.symbol="R",this.value=11,null!=i&&null!=t?(super.setPositionTo([v.csConvert.toColumnIndex(i),t]),this._moved=this.defaultMoveInitialitzation()):this._moved=!1}setPositionTo(e){super.setPositionTo(e),this._moved=this.defaultMoveInitialitzation()}isQueenSide(e){return null!=this.position&&(e?3==this.position[0]&&("White"==this.color?4==this.position[1]:24==this.position[1]):4==this.position[0]&&("White"==this.color?3==this.position[1]:25==this.position[1]))}isKingSide(e){return null!=this.position&&(e?11==this.position[0]&&("White"==this.color?4==this.position[1]:24==this.position[1]):10==this.position[0]&&("White"==this.color?3==this.position[1]:25==this.position[1]))}*moves(e){yield*this.orthogonalMoves(e)}moveTo(e,i){super.moveTo(e,i),this._moved=!0}canMoveTo(e,i,t=!0){return super.canMoveOrthogonallyTo(e,i,t)}markThreats(e){for(const i of this.orthogonalMoves(e,!0))e.setThreat(i,this.color)}setCastlingStatus(e,i){this._moved=this.isQueenSide(i)?!e.startsWith("R"):!this.isKingSide(i)||!e.endsWith("R")}get moved(){return this._moved}defaultMoveInitialitzation(){return!(this.isQueenSide(!1)||this.isKingSide(!1)||this.isQueenSide(!0)||this.isKingSide(!0))}}t.Rook=a;class c extends o{constructor(){super(...arguments),this.symbol="G",this.value=8}*moves(e){yield*this.diagonalMoves(e),yield*this.knightMoves(e)}canMoveTo(e,i){return super.canMoveDiagonallyTo(e,i)||P.PositionHelper.positionIteratorIncludes(this.knightMoves(e),i)}markThreats(e){for(const i of this.diagonalMoves(e,!0))e.setThreat(i,this.color);for(const t of this.knightMoves(e,!0))e.setThreat(t,this.color)}}t.Pegasus=c;class h extends o{constructor(){super(...arguments),this.symbol="N",this.value=4}*moves(e){if(yield*this.knightMoves(e),null!=this.position&&null==this.pin)for(const t of v.csConvert.knightDirections()){var i=P.PositionHelper.knightJump(this.position,t);null==i||null!=e.hasPiece(i)||null!=(i=P.PositionHelper.knightJump(i,t))&&null==e.hasPiece(i)&&(yield i)}}canCaptureOn(e,i){return P.PositionHelper.positionIteratorIncludes(this.knightMoves(e),i)}markThreats(e){for(const i of this.knightMoves(e,!0))e.setThreat(i,this.color)}}t.Knight=h;class u extends o{constructor(e,i,t){if(super(e),this.symbol="J",this.value=3,v.csTypes.isColumn(i)&&null!=t)super.setPositionTo([v.csConvert.toColumnIndex(i),t]),this.hexesColor=P.PositionHelper.hexColor(this.position);else{if(!v.csTypes.isHexColor(i))throw new TypeError("Bishop constructor error");this.hexesColor=i}}*moves(e){yield*super.diagonalMoves(e)}canMoveTo(e,i){return super.canMoveDiagonallyTo(e,i)}markThreats(e){for(const i of super.diagonalMoves(e,!0))e.setThreat(i,this.color)}}t.Bishop=u;class p extends o{constructor(){super(...arguments),this.symbol="E",this.value=2}*moves(e,i=!1){var t,o,s,n,r,a,l=this.position;if(null!=l){const c=this.pin;null!=c&&("ColumnUp"!=c[0]||"ColumnDown"!=c[1])||null!=(t=P.PositionHelper.orthogonalStep(l,this.ownOrthogonalDirection))&&(null==(o=e.hasPiece(t))?(yield t,null==(s=P.PositionHelper.orthogonalStep(t,this.ownOrthogonalDirection))||null!=(n=e.hasPiece(s))&&!i&&n==this.color||(yield s)):!i&&o==this.color||(yield t));for(const h of["LineUp","LineInvUp","LineDown","LineInvDown"])null!=c&&!c.includes(h)||null==(r=P.PositionHelper.diagonalStep(l,h))||null!=(a=e.hasPiece(r))&&!i&&a==this.color||(yield r)}}markThreats(e){for(const i of this.moves(e,!0))e.setThreat(i,this.color)}get ownOrthogonalDirection(){return"White"===this.color?"ColumnUp":"ColumnDown"}}t.Elephant=p;class g extends o{constructor(){super(...arguments),this.symbol="M",this.value=2}*moves(e,i=!1,t=!1){var o,s,n,r=this.position;if(null!=r){const a=this.pin;if(!i)for(const l of v.csConvert.orthogonalDirections())null!=a&&!a.includes(l)||null!=(o=P.PositionHelper.orthogonalStep(r,l))&&null==e.hasPiece(o)&&null!=(o=P.PositionHelper.orthogonalStep(o,l))&&null==e.hasPiece(o)&&(yield o);for(const c of v.csConvert.diagonalDirections())null!=a&&!a.includes(c)||null==(s=P.PositionHelper.diagonalStep(r,c))||null==(n=e.hasPiece(s))||n===this.color&&!t||(yield s)}}canCaptureOn(e,i){return P.PositionHelper.positionIteratorIncludes(this.moves(e,!0,!1),i)}markThreats(e){for(const i of this.moves(e,!0,!0))e.setThreat(i,this.color)}}t.Almogaver=g;class d extends o{constructor(){super(...arguments),this.symbol="P",this.value=1}*moves(e,i=!1,t=!1){var o,s,n=this.position;if(null!=n){const l=this.pin;if(!i){var r,a,i=this.ownOrthogonalStraightDirection;null!=l&&("ColumnUp"!=l[0]||"ColumnDown"!=l[1])||null!=(r=P.PositionHelper.orthogonalStep(n,i))&&null==e.hasPiece(r)&&(yield r,null!=(r=P.PositionHelper.orthogonalStep(r,i))&&null==e.hasPiece(r)&&(yield r,this.hasTripleStep(e.isGrand)&&null!=(r=P.PositionHelper.orthogonalStep(r,i))&&null==e.hasPiece(r)&&(yield r)));for(const h of this.ownOrthogonalAlternateDirections)null!=l&&!l.includes(h)||null!=(a=P.PositionHelper.orthogonalStep(n,h))&&null==e.hasPiece(a)&&(yield a)}const c=e.specialPawnCapture;null!=c&&c.isScornfulCapturable()&&c.isScorned(this)&&(null==this.pin||null!=(i=P.PositionHelper.isOrthogonally(n,c.capturablePiece.position))&&this.pin.includes(i))&&(yield c.capturablePiece.position);for(const u of this.ownCaptureDirections)null!=l&&!l.includes(u)||null!=(o=P.PositionHelper.diagonalStep(n,u))&&(null!=(s=e.hasPiece(o))?!t&&s==this.color||(yield o):null!=c&&c.isEnPassantCapturable()&&c.isEnPassantCapture(o)&&(yield o))}}promoteTo(e){(0,l.assertNonNullish)(this.position,"Pawn to promote is not captured"),(0,l.assertCondition)(P.PositionHelper.isPromotionHex(this.position,this.color),"Promotion hex "+P.PositionHelper.toString(this.position)),e.setPositionTo(this.position),this.captured()}get awaitingPromotion(){return null!=this.position&&P.PositionHelper.isPromotionHex(this.position,this.color)?P.PositionHelper.lineHexColor(this.position[1]):null}canCaptureOn(e,i){return P.PositionHelper.positionIteratorIncludes(this.moves(e,!0,!1),i)}markThreats(e){for(const i of this.moves(e,!0,!0))e.setThreat(i,this.color)}hasTripleStep(e){var i,t=this.position;return null!=t&&(3<(i=t[0])&&i<7||3==i&&!e?t[1]==("White"==this.color?i+1:27-i):7<i&&i<11||11==i&&!e?t[1]==("White"==this.color?15-i:13+i):!!e&&(2==i||12==i?t[1]==("White"==this.color?5:23):(3==i||11==i)&&t[1]==("White"==this.color?6:22)))}get ownOrthogonalStraightDirection(){return"White"===this.color?"ColumnUp":"ColumnDown"}get ownOrthogonalAlternateDirections(){return"White"===this.color?["FileUp","FileInvUp"]:["FileDown","FileInvDown"]}get ownCaptureDirections(){return"White"==this.color?["LineUp","LineInvUp"]:["LineDown","LineInvDown"]}}var m;t.Pawn=d,(e=m=t.csPieceTypes||(t.csPieceTypes={})).isKing=function(e){return"K"==e.symbol},e.isQueen=function(e){return"D"==e.symbol},e.isWyvern=function(e){return"V"==e.symbol},e.isRook=function(e){return"R"==e.symbol},e.isPegasus=function(e){return"G"==e.symbol},e.isKnight=function(e){return"N"==e.symbol},e.isBishop=function(e){return"J"==e.symbol},e.isElephant=function(e){return"E"==e.symbol},e.isPawn=function(e){return"P"==e.symbol},e.isAlmogaver=function(e){return"M"==e.symbol}},{"./cescacs.positionHelper":4,"./cescacs.types":5,"./ts.general":6}],4:[function(e,i,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.PositionHelper=void 0;const s=e("./cescacs.types");class n{static equals(e,i){return e[0]===i[0]&&e[1]===i[1]}static toString(e){return s.csConvert.columnFromIndex(e[0])+e[1].toString()}static positionKey(e){return e[0].toString()+"-"+e[1].toString()}static parse(e){if(e){const t=e.trim().toUpperCase();e=t.length;if(2<=e&&e<=3){e=t[0];if(s.csTypes.isColumn(e)){var i=parseInt(t.slice(1));if(s.csTypes.isLine(i))return[s.csConvert.toColumnIndex(e),i];throw new RangeError("Invalid line value: "+i)}throw new RangeError("Invalid column: "+e)}throw new RangeError("Invalid coordinates leght: "+t)}throw new RangeError("Empty string for coordinates value")}static fromBoardPosition(e,i,t=!1){e=[e=s.csTypes.isColumn(e)?s.csConvert.toColumnIndex(e):e,i];if(t&&!n.isValidPosition(e))throw new RangeError("Invalid position: "+e);return e}static isValidPosition(e){return s.csTypes.isPosition(e)&&n.isEvenLinesColumnIndex(e[0])==(e[1]%2==0)&&n.isOnBoard(e[0],e[1])}static get whiteKingInitPosition(){return[8,1]}static get blackKingInitPosition(){return[8,27]}static initialQueenSideRookPosition(e,i){return i?"White"==e?[3,4]:[3,24]:"White"==e?[4,3]:[4,25]}static initialKingSideRookPosition(e,i){return i?"White"==e?[11,4]:[11,24]:"White"==e?[10,3]:[10,25]}static isPromotionPos(e,i,t){return i==(e<=7?"White"==t?21+e:7-e:"White"==t?35-e:e-7)}static isPromotionHex(e,i){var t=e[0];return e[1]==(t<=7?"White"==i?21+t:7-t:"White"==i?35-t:t-7)}static promotionDistance(e,i){var t=e[0];return"White"==i?(t<=7?21+t:35-t)-e[1]:e[1]-(t<=7?7-t:t-7)}static hexColor(e){return n.lineHexColor(e[1])}static lineHexColor(e){switch(e%3){case 0:return"Black";case 1:return"White";case 2:return"Color";default:throw new Error}}static isOrthogonally(e,i){i=[i[0]-e[0],i[1]-e[1]];return 0==i[0]?0!=i[1]&&i[1]%2==0?0<i[1]?"ColumnUp":"ColumnDown":null:0<i[0]?i[0]==i[1]?"FileUp":i[0]==-i[1]?"FileDown":null:i[0]==i[1]?"FileInvDown":i[0]==-i[1]?"FileInvUp":null}static isDiagonally(e,i){i=[i[0]-e[0],i[1]-e[1]];return 0==i[1]?0!=i[0]&&i[0]%2==0?0<i[0]?"TransversalLineInc":"TransversalLineDec":null:(e=(i[0]<<1)+i[0],0<i[0]?e==i[1]?"LineUp":e==-i[1]?"LineDown":null:e==i[1]?"LineInvDown":e==-i[1]?"LineInvUp":null)}static orthogonalStep(e,i){i=n._ORTHOGONAL_MOVES[s.csConvert.toOrthogonalDirectionIndex(i)];return n.addOffset(e,i)}static diagonalStep(e,i){i=n._DIAGONAL_MOVES[s.csConvert.toDiagonalDirectionIndex(i)];return n.addOffset(e,i)}static*orthogonalRide(e,i){var t=n._ORTHOGONAL_MOVES[s.csConvert.toOrthogonalDirectionIndex(i)];let o=n.addOffset(e,t);for(;null!=o;)yield o,o=n.addOffset(o,t)}static*diagonalRide(e,i){var t=n._DIAGONAL_MOVES[s.csConvert.toDiagonalDirectionIndex(i)];let o=n.addOffset(e,t);for(;null!=o;)yield o,o=n.addOffset(o,t)}static*orthogonalMoves(i){for(const t of n._ORTHOGONAL_MOVES){let e=this.addOffset(i,t);for(;null!=e;)yield e,e=n.addOffset(e,t)}}static*diagonalMoves(i){for(const t of n._DIAGONAL_MOVES){let e=this.addOffset(i,t);for(;null!=e;)yield e,e=n.addOffset(e,t)}}static knightJump(e,i){i=n._KNIGHT_MOVES[s.csConvert.toKnightDirectionIndex(i)];return n.addOffset(e,i)}static*knightMoves(e){for(const t of n._KNIGHT_MOVES){var i=this.addOffset(e,t);null!=i&&(yield i)}}static positionIteratorIncludes(e,i){for(const t of e)if(t[0]===i[0]&&t[1]===i[1])return!0;return!1}static*positionIteratorIntersection(e,i){for(const t of e)i.some(e=>t[0]===e[0]&&t[1]===e[1])&&(yield t)}static isOnBoard(e,i){return 0<=e&&e<=14&&(e<=7?7-e<=i&&i<=21+e:e-7<=i&&i<=35-e)}static addOffset(e,i){var t=e[0]+i[0],e=e[1]+i[1];return n.isOnBoard(t,e)?[t,e]:null}}(t.PositionHelper=n)._ORTHOGONAL_MOVES=[[0,2],[0,-2],[1,1],[1,-1],[-1,1],[-1,-1]],n._DIAGONAL_MOVES=[[2,0],[-2,0],[1,3],[1,-3],[-1,3],[-1,-3]],n._KNIGHT_MOVES=[[3,1],[3,-1],[-3,1],[-3,-1],[2,4],[1,5],[2,-4],[1,-5],[-2,4],[-1,5],[-2,-4],[-1,-5]],n.isEvenLinesColumnIndex=e=>e%2!=0},{"./cescacs.types":5}],5:[function(e,i,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.csConvert=t.csTypes=void 0;const o=["P","T","A","B","C","D","E","F","G","H","I","K","L","X","Z"],s=["D","E","F","H","I"],n=["ColumnUp","ColumnDown","FileUp","FileDown","FileInvUp","FileInvDown"],r=["TransversalLineInc","TransversalLineDec","LineUp","LineDown","LineInvUp","LineInvDown"],a=["TransversalLineInc-FileUp","TransversalLineInc-FileDown","TransversalLineDec-FileInvUp","TransversalLineDec-FileInvDown","LineUp-FileUp","LineUp-ColumnUp","LineDown-FileDown","LineDown-ColumnDown","LineInvUp-FileInvUp","LineInvUp-ColumnUp","LineInvDown-FileInvDown","LineInvDown-ColumnDown"],l=[["ColumnUp","ColumnDown"],["FileUp","FileInvDown"],["FileInvUp","FileDown"]],c=[["TransversalLineInc","TransversalLineDec"],["LineUp","LineInvDown"],["LineInvUp","LineDown"]],h=["Black","White","Color"],u=["w","b"],p=["K","D","V","R","G","N","J","E","M","P"],g=["RKR","RK","KR","K","-"],d=["KRK-II","KRK-IK","KRK-IH","KRK-HIO","KRK-HIOO","KRK-HH","KRK-HG","KRK-FG","KRK-FE","KRK-EF","KRK-EE","KRD-DD","KRD-DE","KRD-HH","KRD-HG","KRD-FG","KRD-FE","KRD-EF","KRD-ED","KRR-HIH","KRR-HGG","KRR-FGG","KRR-FEE","KRR-EEF"],v=["KRK-FF","KRK-FG","KRK-HG","KRK-HI","KRD-DE","KRD-DC","KRD-ED","KRD-EE","KRD-FE","KRD-FF","KRR-FFE","KRR-FGF"];var P;(P=t.csTypes||(t.csTypes={})).isNumber=e=>"number"==typeof e&&!isNaN(e),P.isColumn=e=>o.includes(e),P.isColumnIndex=e=>P.isNumber(e)&&Number.isInteger(e)&&0<=e&&e<=14,P.isLine=e=>P.isNumber(e)&&Number.isInteger(e)&&0<=e&&e<=28,P.isPosition=e=>Array.isArray(e)&&2==e.length&&P.isColumnIndex(e[0])&&P.isLine(e[1]),P.isOrthogonalDirection=e=>n.includes(e),P.isDiagonalDirection=e=>r.includes(e),P.isKnightDirection=e=>a.includes(e),P.isCastlingColumn=e=>s.includes(e),P.isDirectionMoveRange=e=>P.isNumber(e)&&Number.isInteger(e)&&0<=e&&e<=5,P.isDirectionFullMoveRange=e=>P.isNumber(e)&&Number.isInteger(e)&&0<=e&&e<=11,P.isOrthogonalOrientation=i=>Array.isArray(i)&&l.some(e=>e[0]==i[0]&&e[1]==i[1]),P.isDiagonalOrientation=i=>Array.isArray(i)&&c.some(e=>e[0]==i[0]&&e[1]==i[1]),P.isHexColor=e=>h.includes(e),P.isPieceName=e=>p.includes(e),P.isTurn=e=>u.includes(e),P.isCastlingStatus=e=>g.includes(e),P.isCastlingString=e=>d.includes(e),P.isGrandCastlingString=e=>v.includes(e),P.isSingleCheck=e=>Object.prototype.hasOwnProperty.call(e,"d")&&Object.prototype.hasOwnProperty.call(e,"p"),P.isDoubleCheck=e=>Array.isArray(e)&&3==length&&P.isPosition(e[0])&&P.isPosition(e[1])&&(null==e[2]||P.isOrthogonalOrientation(e[2])||P.isDiagonalOrientation(e[2])),P.hasDoubleCheckPin=e=>Array.isArray(e)&&3==length&&P.isPosition(e[0])&&P.isPosition(e[1])&&null!=e[2]&&(P.isOrthogonalOrientation(e[2])||P.isDiagonalOrientation(e[2])),P.isCheckAttackPos=(e,i)=>P.isPosition(e)?i[0]==e[0]&&i[1]==e[1]:P.isSingleCheck(e)?e.p[0]==i[0]&&e.p[1]==i[1]:e[0][0]==i[0]&&e[0][1]==i[1]||e[1][0]==i[0]&&e[1][1]==i[1],(t=t.csConvert||(t.csConvert={})).columnFromIndex=e=>o[e],t.toColumnIndex=e=>o.indexOf(e),t.toOrthogonalDirectionIndex=e=>n.indexOf(e),t.orthogonalDirectionFromIndex=e=>n[e],t.toDiagonalDirectionIndex=e=>r.indexOf(e),t.diagonalDirectionFromIndex=e=>r[e],t.toKnightDirectionIndex=e=>a.indexOf(e),t.knightDirectionFromIndex=e=>a[e],t.getOrthogonalOrientation=function(e){switch(e){case"ColumnUp":case"ColumnDown":return["ColumnUp","ColumnDown"];case"FileUp":case"FileInvDown":return["FileUp","FileInvDown"];case"FileInvUp":case"FileDown":return["FileInvUp","FileDown"];default:throw new Error(e)}},t.getDiagonalOrientation=function(e){switch(e){case"TransversalLineInc":case"TransversalLineDec":return["TransversalLineInc","TransversalLineDec"];case"LineUp":case"LineInvDown":return["LineUp","LineInvDown"];case"LineInvUp":case"LineDown":return["LineInvUp","LineDown"];default:throw new Error(e)}},t.orthogonalDirections=function*(){for(const e of n)yield e},t.diagonalDirections=function*(){for(const e of r)yield e},t.knightDirections=function*(){for(const e of a)yield e}},{}],6:[function(e,i,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.round2hundredths=t.isNotNullNorWhitespace=t.isNotNullNorEmpty=t.assertCondition=t.assertNonNullish=void 0,t.assertNonNullish=function(e,i){if(null==e)throw console.log("NonNullish assertion fail: "+i??"-"),new TypeError(`Unexpected ${e} value`+(null==i)?"":": "+i)},t.assertCondition=function(e,i){if(!e)throw console.log("Condition assertion fail: "+i??"-"),new Error("")},t.isNotNullNorEmpty=function(e){return null!=e&&0<e.length},t.isNotNullNorWhitespace=function(e){return null!=e&&0<e.length&&0<e.trim().length},t.round2hundredths=function(e){return Math.round(100*(e+Number.EPSILON))/100}},{}]},{},[1])(1)});