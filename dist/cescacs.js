import{assertNonNullish,assertCondition,round2hundredths}from"./ts.general.js";import{csTypes as csty,csConvert as cscnv}from"./cescacs.types.js";import{csPieceTypes as cspty}from"./cescacs.piece.js";import{PositionHelper}from"./cescacs.positionHelper.js";import{Piece,King,Queen,Wyvern,Rook,Pegasus,Knight,Bishop,Elephant,Almogaver,Pawn}from"./cescacs.piece.js";import{csMoves as csmv}from"./cescacs.moves.js";class PawnSpecialCaptureStatus{static parse(e,i){if(null!=i&&0<i.length&&"-"!=i){if(4<=i.length){i=i.split("@");if(2==i.length&&1<=i[0].length&&i[0].length<=3&&2<=i[1].length){if("P"==i[0]){var t=i[1].slice(0,i[1].length-1).split("[");if(i[1].endsWith("]")&&2==t.length){var s=PositionHelper.parse(t[1]),o=e.getPiece(s);if(null==o)throw new Error(PositionHelper.toString(s)+" doesn't have a pawn nor promoted pawn");s=t[0].split(",");if(1<=s.length&&s.length<=2){t=[];if(t.push(PositionHelper.parse(s[0])),2==s.length){s=Number(s[1]);if(isNaN(s)||!csty.isLine(s))throw new TypeError("Invalid en passant capture line value");t.push(PositionHelper.fromBoardPosition(t[0][0],s,!0))}return new EnPassantCapturable(o,t)}throw new TypeError("Missing or invalid en passant capture positions")}throw new TypeError("Invalid special 'en passant' pawn capture status string")}s=PositionHelper.parse(i[0]),o=PositionHelper.parse(i[1]),t=e.getPiece(o);if(null!=t)return new ScornfulCapturable(t,s);throw new Error(PositionHelper.toString(o)+" doesn't have a pawn nor promoted pawn")}throw new TypeError("Invalid special pawn capture status string")}throw new TypeError("Too short special pawn capture status string")}return null}_capturablePiece;isScornfulCapturable(){return"scornful"==this.specialCaptureType}isEnPassantCapturable(){return"enPassant"==this.specialCaptureType}get capturablePiece(){return this._capturablePiece}get capturablePawn(){return cspty.isPawn(this._capturablePiece)?this._capturablePiece:null}constructor(e){this._capturablePiece=e}}class ScornfulCapturable extends PawnSpecialCaptureStatus{static promoteCapturablePawn(e,i){return new ScornfulCapturable(i,e._capturerPawnPos)}specialCaptureType="scornful";_capturerPawnPos;constructor(e,i){super(e),this._capturerPawnPos=i}isScorned(e,i){e=null!=e.position&&PositionHelper.equals(e.position,this._capturerPawnPos);return null==i?e:e&&PositionHelper.equals(i,this.capturablePiece.position)}get scornfulCaptureDirection(){var e=this._capturerPawnPos[0],i=this.capturablePiece.position,t=i[0];return i[1]>this._capturerPawnPos[1]?e<t?"FileUp":"FileInvUp":e<t?"FileDown":"FileInvDown"}toString(){return PositionHelper.toString(this._capturerPawnPos)+"@"+PositionHelper.toString(this.capturablePiece.position)}}class EnPassantCapturable extends PawnSpecialCaptureStatus{static promoteCapturablePawn(e,i){return new EnPassantCapturable(i,e._captureTo)}specialCaptureType="enPassant";_captureTo;constructor(e,i){super(e),this._captureTo=i}isEnPassantCapture(i,e){var t=this._captureTo.some(e=>PositionHelper.equals(e,i));return null==e?t:!(!t||null==e.position)&&(t=e.position,cspty.isPawn(e)?1==Math.abs(i[0]-t[0])&&("w"==e.color?i[1]-t[1]==3:t[1]-i[1]==3):null!=PositionHelper.isDiagonally(i,t,cspty.isElephant(e)))}toString(){var e=this._captureTo;let i=PositionHelper.toString(e[0]);return 2==e.length&&(i+=","+e[1][1].toString()),"P@"+i+"["+PositionHelper.toString(this.capturablePiece.position)+"]"}}class Board{isGrand;static newHeuristic(){return{pieces:[0,0],space:[0,0],positioning:0,mobility:0,king:0}}static splitCastlingStatus(s){if(null!=s&&0<s.length){let e,i,t=0;for(;t<s.length&&s[t].toUpperCase()==s[t];)t++;if(i=(i=0==t?(e="-",s):t==s.length?(e=s,"-"):(e=s.slice(0,t),s.slice(t))).toUpperCase(),csty.isCastlingStatus(e)&&csty.isCastlingStatus(i))return[e,i];throw new TypeError("Invalid PDTL issued castling status "+s)}return["RKR","RKR"]}static lineMask(e){return 1<<e}wPositions=[0,0,0,0,0,0,0,0];bPositions=[0,0,0,0,0,0,0,0];wThreats=[0,0,0,0,0,0,0,0];bThreats=[0,0,0,0,0,0,0,0];pieces=new Map;wPieces=new Map;bPieces=new Map;_regainablePieces=[];wKing=new King("w");bKing=new King("b");_specialPawnCapture=null;_currentHeuristic=Board.newHeuristic();_wAwaitingPromotion=!1;_bAwaitingPromotion=!1;_turn;constructor(e,i="w"){this.isGrand=e,this._turn=i??"w",this.pieces.set(this.wKing.key,this.wKing),this.pieces.set(this.bKing.key,this.bKing)}get turn(){return this._turn}get turnKing(){return"w"===this.turn?this.wKing:this.bKing}get checked(){return this.turnKing.checked}get isKnightOrCloseCheck(){return this.turnKing.isKnightOrCloseCheck()}get isSingleCheck(){return this.turnKing.isSingleCheck()}get isDoubleCheck(){return this.turnKing.isDoubleCheck()}pieceByKey(e){e=this.pieces.get(e);return assertNonNullish(e,"piece from unique key"),e}get specialPawnCapture(){return this._specialPawnCapture}set specialPawnCapture(e){this._specialPawnCapture=e}get isAwaitingPromotion(){return"w"==this._turn?this._wAwaitingPromotion:this._bAwaitingPromotion}setAwaitingPromotion(e){"w"==e?this._wAwaitingPromotion=!0:this._bAwaitingPromotion=!0}computeAwaitingPromotion(e){let i=!1;for(const t of("w"==e?this.wPieces:this.bPieces).values())if(cspty.isPawn(t)&&t.awaitingPromotion){i=!0;break}"w"==e?this._wAwaitingPromotion=i:this._bAwaitingPromotion=i}get currentHeuristic(){return this._currentHeuristic}getHeuristicValue(e){return round2hundredths(e.pieces[0]-e.pieces[1]+e.space[0]-e.space[1]+e.positioning+e.mobility+e.king)}createPiece(e,i,t,s){let o;switch(e){case"K":throw new Error("King must be created before setting it on the board");case"D":o=new Queen(i,t,s);break;case"V":o=new Wyvern(i,t,s);break;case"R":o=new Rook(i,this.isGrand,t,s);break;case"G":o=new Pegasus(i,t,s);break;case"N":o=new Knight(i,t,s);break;case"J":o=new Bishop(i,t,s);break;case"E":o=new Elephant(i,t,s);break;case"M":o=new Almogaver(i,t,s);break;case"P":o=new Pawn(i,t,s);break;default:throw new Error(e)}if(null!=this.hasPiece(o.position))throw new Error(`You cannot put a ${i} ${o.symbol} there`+", because the hex is already in use; There may be a repeated line in the PDTL");return this.pieces.set(o.key,o),this.addPiece(o),o}addPiece(e){assertNonNullish(e.position,e.symbol+" position");var i=e.position,t=(("w"==e.color?this.wPieces:this.bPieces).set(PositionHelper.positionKey(i),e),i[0]+1>>>1),i=Board.lineMask(i[1]);("w"==e.color?this.wPositions:this.bPositions)[t]|=i}hasPiece(e){var i=e[0]+1>>>1,e=Board.lineMask(e[1]);return 0!=(this.wPositions[i]&e)?"w":0!=(this.bPositions[i]&e)?"b":null}getPiece(e){var i=this.hasPiece(e);return null==i?null:("w"==i?this.wPieces:this.bPieces).get(PositionHelper.positionKey(e))}hasThreat(e,i){var t=e[0]+1>>>1;return 0!=(("w"==i?this.wThreats:this.bThreats)[t]&Board.lineMask(e[1]))}isThreatened(e,i){var t=e[0]+1>>>1;return 0!=(("w"==i?this.bThreats:this.wThreats)[t]&Board.lineMask(e[1]))}setThreat(e,i){var t=e[0]+1>>>1;("w"==i?this.wThreats:this.bThreats)[t]|=Board.lineMask(e[1])}addRegainablePiece(e){null==e.position&&(this._regainablePieces.push(e),this.pieces.set(e.key,e))}hasRegainablePieces(t){const s=this._turn;return this._regainablePieces.reduce((e,i)=>e||i.color==s&&(!cspty.isBishop(i)||i.hexesColor==t),!1)}hasAwaitingRegainablePieces(){const t=this._turn;if(this._regainablePieces.reduce((e,i)=>e||i.color==t&&"J"!=i.symbol,!1))return!0;var e=this._regainablePieces.filter(e=>e.color==t&&"J"==e.symbol);if(0!=e.length)for(const i of("w"==this._turn?this.wPieces:this.bPieces).values())if(cspty.isPawn(i)){const s=i.awaitingPromotion;if(null!=s&&e.some(e=>e.hexesColor==s))return!0}return!1}currentRegainablePieceNames(t){const s=this._turn;return this._regainablePieces.reduce((e,i)=>i.color!=s||cspty.isBishop(i)&&i.hexesColor!=t?e:e.add(i.symbol),new Set)}maxRegainablePiecesValue(t){const s=this._turn;return this._regainablePieces.reduce((e,i)=>i.value>e&&i.color==s&&(!cspty.isBishop(i)||i.hexesColor==t)?i.value:e,0)}findRegeinablePiece(i,t,s){var e=this._regainablePieces.find(e=>e.color==i&&e.symbol==t&&(!cspty.isBishop(e)||e.hexesColor==s));return assertNonNullish(e,"retrieve the promoted piece"),e}*whitePieces(){for(const e of this.wPieces.values())yield e}*blackPieces(){for(const e of this.bPieces.values())yield e}*whitePiecePositions(){for(const e of this.wPieces.values())yield e.position}*blackPiecePositions(){for(const e of this.bPieces.values())yield e.position}*pieceMoves(e){var i,t=this.turnKing;!t.checked||"K"==e.symbol?yield*e.moves(this):(null!=(i=t.checkThreat)&&e.canCaptureOn(this,i)&&(yield i),t.isSingleCheck()&&(yield*e.blockThreat(this,t.getSingleCheckBlockingPositions(this))))}movePiece(e,i,t){assertNonNullish(e.position,e.symbol+" position");var s=e.position,o=s[0]+1>>>1,n=Board.lineMask(s[1]),r="w"==e.color?this.wPieces:this.bPieces;if(cspty.isPawn(e))e.position[0]==i||!this.isGrand&&1!=Math.abs(e.position[1]-t)?2<Math.abs(t-e.position[1])?(c=[],t>e.position[1]?(c.push([i,e.position[1]+2]),t>e.position[1]+4&&c.push([i,e.position[1]+4])):(c.push([i,e.position[1]-2]),t<e.position[1]-4&&c.push([i,e.position[1]-4])),this._specialPawnCapture=new EnPassantCapturable(e,c)):this._specialPawnCapture=null:(c=this.getPiece([e.position[0],t>e.position[1]?e.position[1]+2:e.position[1]-2]),this._specialPawnCapture=null!=c&&cspty.isPawn(c)?new ScornfulCapturable(e,c.position):null),PositionHelper.isPromotionPos(i,t,e.color)&&("w"==e.color?this._wAwaitingPromotion=!0:this._bAwaitingPromotion=!0);else if(cspty.isAlmogaver(e)){var a=PositionHelper.isOrthogonally(s,[i,t]);if(null!=a){var l=[];switch(a){case"ColumnUp":l.push([s[0],s[1]+2]);break;case"ColumnDown":l.push([s[0],s[1]-2]);break;case"FileUp":l.push([s[0]+1,s[1]+1]);break;case"FileDown":l.push([s[0]+1,s[1]-1]);break;case"FileInvUp":l.push([s[0]-1,s[1]+1]);break;case"FileInvDown":l.push([s[0]-1,s[1]-1]);break;default:throw new Error(a)}this._specialPawnCapture=new EnPassantCapturable(e,l)}else this._specialPawnCapture=null}else this.isGrand&&cspty.isElephant(e)&&e.position[0]==i&&2<Math.abs(t-e.position[1])?(c=[[i,t>e.position[1]?e.position[1]+2:e.position[1]-2]],this._specialPawnCapture=new EnPassantCapturable(e,c)):this._specialPawnCapture=null;r.delete(PositionHelper.positionKey(s)),e.moveTo(i,t),r.set(PositionHelper.positionKey(s),e);var c=s[0]+1>>>1,i=Board.lineMask(s[1]),t="w"==e.color?this.wPositions:this.bPositions;t[o]&=~n,t[c]|=i}undoPieceMove(e,i,t){var s="w"==e.color?this.wPieces:this.bPieces,o=e.position,n=o[0]+1>>>1,r=Board.lineMask(o[1]),i=(s.delete(PositionHelper.positionKey(o)),e.moveTo(i,t),s.set(PositionHelper.positionKey(o),e),o[0]+1>>>1),t=Board.lineMask(o[1]),s="w"==e.color?this.wPositions:this.bPositions;s[n]&=~r,s[i]|=t}capturePiece(e){assertNonNullish(e.position,e.symbol+" position");var i=e.position,t=i[0]+1>>>1,s=Board.lineMask(i[1]);("w"==e.color?this.wPositions:this.bPositions)[t]&=~s,("w"==e.color?this.wPieces:this.bPieces).delete(PositionHelper.positionKey(i)),e.captured(),e.isRegainable&&this._regainablePieces.push(e)}undoCapturePiece(e,i,t){var s;Piece.isRegainablePiece(e.symbol)&&(s=this._regainablePieces.indexOf(e),assertCondition(0<=s,"Captured piece found in the regainable pieces bag"),this._regainablePieces.splice(s,1)),e.setPositionTo([i,t]),this.addPiece(e)}promotePawn(e,i){var t;this._regainablePieces.includes(i)&&((t="w"==i.color?this.wPieces:this.bPieces).delete(PositionHelper.positionKey(e.position)),e.promoteTo(i),t.set(PositionHelper.positionKey(i.position),i),null!=this._specialPawnCapture&&this._specialPawnCapture.capturablePawn==e&&(this._specialPawnCapture.isScornfulCapturable()?this._specialPawnCapture=ScornfulCapturable.promoteCapturablePawn(this._specialPawnCapture,i):this._specialPawnCapture.isEnPassantCapturable()&&(this._specialPawnCapture=EnPassantCapturable.promoteCapturablePawn(this._specialPawnCapture,i))),t=this._regainablePieces.indexOf(i),this._regainablePieces.splice(t,1),"w"==i.color?this._wAwaitingPromotion=!1:this._bAwaitingPromotion=!1)}undoPromotePawn(e,i){var t="w"==i.color?this.wPieces:this.bPieces;t.delete(PositionHelper.positionKey(i.position)),e.setPositionTo([i.position[0],i.position[1]]),i.captured(),this._regainablePieces.push(i),t.set(PositionHelper.positionKey(e.position),e)}insuficientMaterial(){var e=e=>{for(const i of e)if(cspty.isPawn(i))return!0;return!1},i=e=>{for(const i of e)if(cspty.isMajorPiece(i))return!0;return!1},t=e=>{for(const i of e)if(cspty.isMinorPiece(i))return!0;return!1},s=e=>{let i=0;for(const t of e)cspty.isMediumPiece(t)&&i++;return i};if(this.wPieces.size<=3&&this.bPieces.size<=3&&!e(this.wPieces.values())&&!e(this.bPieces.values()))return!i(this.wPieces.values())&&!i(this.bPieces.values())&&2!=(e=s(this.wPieces.values()))&&!(1==e&&t(this.wPieces.values())||2==(i=s(this.bPieces.values()))||1==i&&t(this.bPieces.values()))}nextTurn(){this._turn="w"===this._turn?"b":"w"}prepareTurn(e){var i=e.color,t="w"==i?this.bThreats:this.wThreats;for(let e=0;e<=7;e++)t[e]=0;for(const s of("w"==i?this.bPieces:this.wPieces).values())s.markThreats(this);for(const o of("w"==i?this.wPieces:this.bPieces).values())o.pin=null;e.computeCheckAndPins(this)}prepareCurrentTurn(){this.prepareTurn(this.turnKing)}isMoveableTurn(){for(const e of("w"===this.turn?this.wPieces:this.bPieces).values())if(!this.pieceMoves(e).next().done)return!0;return!1}prepareGame(){"w"==this._turn?this.prepareTurn(this.bKing):this.prepareTurn(this.wKing),this.prepareCurrentTurn()}resetGame(e){for(let e=0;e<8;e++)this.wPositions[e]=0,this.bPositions[e]=0,this.wThreats[e]=0,this.bThreats[e]=0;this.pieces.clear(),this.wPieces.clear(),this.bPieces.clear(),null!=this.wKing.position&&this.wKing.captured(),null!=this.bKing.position&&this.bKing.captured(),this._regainablePieces.length=0,this._specialPawnCapture=null,this._turn=e,this.pieces.set(this.wKing.key,this.wKing),this.pieces.set(this.bKing.key,this.bKing)}computeHeuristic(g,v,w,m){function d(e){let i=0;for(;0<e;)i+=1&e,e>>>=1;return i}function b(e){let i=0;for(e>>>=1;0<e;)i+=1&e,e>>>=2;return i}var C=this.turnKing;if(m.pieces[0]=0,m.pieces[1]=0,m.positioning=0,m.mobility=0,w){var f=g;C.checked?C.isDoubleCheck()?m.king=-15:C.isKnightOrCloseCheck()?m.king=-12:m.king=-10:C.moved?m.king=0:m.king=.1;for(const F of C.attemptMoves(this,!0)){var y=this.hasPiece(F);C.checked?this.isThreatened(F,f)?m.king-=2:null==y?m.king+=.5:y==f&&(m.king-=.5):this.isThreatened(F,f)?m.king-=this.hasThreat(F,f)?.25:.5:null==y?m.king-=.01:y==f&&(m.king+=.05)}var w="w"==g?this.wPieces:this.bPieces,k="w"==g?this.bPieces:this.wPieces,_="w"==g?this.wThreats:this.bThreats,K="w"==g?this.bThreats:this.wThreats,S="w"==g?31:31<<24,T="w"==g?31<<24:31,M="w"==g?this.bPositions:this.wPositions;let s=0,o=0,i=0,t=0,e=0,n=0,r=0,a=0,l=0;var N="w"==f?this.wThreats:this.bThreats;for(let e=0;e<=7;e++)N[e]=0;for(const A of w.values())A.markThreats(this);let c=0,u=0,p=0,h=0,P=0;var H,E=(e,i)=>"w"==i?8<e[1]:e[1]<20,R=(e,i)=>"w"==i?e[1]>(7==e[0]?6:3):e[1]<(7==e[0]?22:25);for(const L of w.values())if(null!=L.position){var I=this.hasThreat(L.position,f);if(m.pieces[0]+=L.value,"J"===L.symbol&&e++,this.isThreatened(L.position,f)?a-=I?.75*L.value:L.value:I&&(a+=1-.0625*L.value),null==L.pin){for(const U of this.pieceMoves(L))m.mobility+=.01;if(L.hasOrthogonalAttack){for(var[D,x]of function*(t,e,s){for(const l of cscnv.orthogonalDirections()){var o=PositionHelper.orthogonalRide(e,l);let i=o.next();for(;0==i.done;){var n=t.getPiece(i.value);if(null==n)i=o.next();else{var r=PositionHelper.orthogonalRide(i.value,l);let e=r.next();for(;0==e.done;){var a=t.getPiece(e.value);e=null==a?o.next():(a.color!=s&&(yield[n,a]),r.return())}i=o.return()}}}}(this,L.position,f))D.color==f?D.value<=L.value&&L.value<x.value&&(D.hasOrthogonalAttack?a+=.25*(x.value-D.value):!I&&x.hasOrthogonalAttack||(a+=.0625*x.value)):D.value>L.value?a+=.25*(D.value-L.value):D.value<x.value&&!D.hasOrthogonalAttack&&x.value>L.value&&(a+=.25*D.value);R(L.position,f)&&(h+=L.value)}if(L.hasDiagonalAttack){for(var[B,G]of function*(t,e,s){for(const l of cscnv.diagonalDirections()){var o=PositionHelper.diagonalRide(e,l);let i=o.next();for(;0==i.done;){var n=t.getPiece(i.value);if(null==n)i=o.next();else{var r=PositionHelper.diagonalRide(i.value,l);let e=r.next();for(;0==e.done;){var a=t.getPiece(e.value);e=null==a?o.next():(a.color!=s&&(yield[n,a]),r.return())}i=o.return()}}}}(this,L.position,f))B.color==f?B.value<=L.value&&L.value<G.value&&(B.hasDiagonalAttack?a+=.25*(G.value-B.value):!I&&G.hasDiagonalAttack||(a+=.0625*G.value)):B.value>L.value?a+=.25*(B.value-L.value):B.value<G.value&&!B.hasDiagonalAttack&&G.value>L.value&&(a+=.25*B.value);R(L.position,f)&&(h+=L.value)}else cspty.isElephant(L)||cspty.isAlmogaver(L)?(u+=L.value,E(L.position,f)&&(p+=L.value)):cspty.isPawn(L)&&(u+=L.value,L.hasTripleStep(this.isGrand)?m.mobility+=.01:E(L.position,f)&&(p++,I)&&(p++,PositionHelper.promotionDistance(L.position,f)<14)&&(P+=14-PositionHelper.promotionDistance(L.position,f)<<1))}else l-=L.value,m.king-=I?.2:.4}v<=12&&u-p>>1>p&&(c=p-h);for(const O of k.values())null!=O.position&&(m.pieces[1]+=O.value,"J"===O.symbol&&n++,this.hasThreat(O.position,f)&&(a+=O.value),null!=O.pin)&&(l+=O.value);for(let t=0;t<=7;t++){let e=M[t]&_[t]&~K[t],i=0;for(;0!=e;)1==(1&e)&&(H=(t<<1)-(i+1)%2,H=this.getPiece([H,i]),r+=H.value),e>>>=1,i++;s+=d(_[t]),o+=d(K[t])}i+=b(_[2]&~K[2]&S),t+=b(K[2]&~_[2]&T);for(let e=3;e<=5;e++)i+=d(_[e]&~K[e]&S),t+=d(K[e]&~_[e]&T);2<=e&&(m.pieces[0]+=3==e?1:.5),2<=n&&(m.pieces[1]+=3==n?1:.5),m.space[0]=.01*s,m.space[1]=.01*o,m.positioning=.01*(i-t+a+l+c+P)+.125*r}else C.checked?m.king=-120:m.king=-6,m.space[0]=0,m.space[0]=0;return m}}class Game extends Board{static movesToString(t){var s=[];if(0<t.length){let e;for(let i=e="b"==t[0].turn?(s.push(t[0].n+". …, "+csmv.fullMoveNotation(t[0])),1):0;i<t.length;i+=2){let e=csmv.fullMoveNotation(t[i]);i+1<t.length&&(e+=", "+csmv.fullMoveNotation(t[i+1])),s.push(e)}}return s.join("\n")}static kingCastlingPosition(e,i){var t="w"==e?PositionHelper.whiteKingInitPosition:PositionHelper.blackKingInitPosition,e=("w"==e?Game.whiteKingCastlingMove:Game.blackKingCastlingMove)[i];return PositionHelper.knightJump(t,e)}static convertPieceAliases(e){switch(e){case"Q":return"D";case"W":return"V";case"T":return"R";case"C":case"S":return"N";case"A":case"B":case"F":case"L":return"J";default:if(csty.isPieceName(e))return e;throw new TypeError("Invalid piece symbol "+e)}}static whiteKingCastlingMove={I:"LineUp-FileUp",H:"LineUp-ColumnUp",F:"LineInvUp-ColumnUp",E:"LineInvUp-FileInvUp",D:"TransversalLineDec-FileInvUp"};static blackKingCastlingMove={I:"LineDown-FileDown",H:"LineDown-ColumnDown",F:"LineInvDown-ColumnDown",E:"LineInvDown-FileInvDown",D:"TransversalLineDec-FileInvDown"};static rookCastleMove(e,i,t,s,o){return"K"==s?"K"==i?o?"w"==t?"ColumnUp":"ColumnDown":"w"==t?"FileUp":"FileDown":"I"==i?o?"w"==t?"FileInvDown":"FileInvUp":"w"==t?"ColumnUp":"ColumnDown":"w"==t?"FileInvUp":"FileInvDown":"E"==i&&"D"==e?"w"==t?"FileDown":"FileUp":"w"==t?"FileUp":"FileDown"}_moves=[];_top=-1;_moveNumber;halfmoveClock;fixedNumbering=!0;_mate=!1;_stalemate=!1;_draw=!1;_resigned=!1;_enpassantCaptureCoordString=null;constructor(e=!1,i){var t=i?.split(" ");if(super(e,null==t?.[1]||"w"!=t[1]&&"b"!=t[1]?"w":t[1]),void 0===i)this.fillDefaultPositions(),this.halfmoveClock=0,this._moveNumber=1,this.fixedNumbering=!0;else{if(!(null!=t&&2<=t.length&&csty.isTurn(t[1])))throw new Error("Piece positions and turn are mandatory parts of the PDTL string");var[e,i]=Board.splitCastlingStatus(t[2]);if(this.restorePDTLPositions(t[0],e,i),this.halfmoveClock=csty.isNumber(Number(t[4]))?Number(t[4]):0,isNaN(Number(t[4]))&&null!=t[4]&&"-"!==t[4])throw new TypeError("Invalid halfmove clock value");if(this._moveNumber=csty.isNumber(Number(t[5]))?Number(t[5]):1,isNaN(Number(t[5]))){if(null!=t[5]&&"-"!=t[5])throw new TypeError("Invalid move number");this.fixedNumbering=!1}else this.fixedNumbering=!0;super.specialPawnCapture=PawnSpecialCaptureStatus.parse(this,t[3])}this.initGame()}get moveNumber(){return this._moveNumber}get gameEnd(){return this._mate||this._stalemate||this._draw||this._resigned}get mate(){return this._mate}get stalemate(){return this._stalemate}set draw(e){this._draw=e}get draw(){return this._draw}set resign(e){this._resigned=e}get resigned(){return this._resigned}getHexPiece(e){e=PositionHelper.parse(e);return null!=e&&PositionHelper.isValidPosition(e)?this.getPiece(e):null}get lastMove(){return 0<this._moves.length?this._moves[this._moves.length-1]:null}get strLastMove(){return 0<=this._top?csmv.fullMoveNotation(this._moves[this._top],!1):null}get resultString(){if(this.gameEnd){if(this._mate||this._resigned)return"w"==this.turn?"0 - 3":"3 - 0";if(this._stalemate)return"w"==this.turn?"1 - 2":"2 - 1";if(this._draw)return"1 - 1";throw new Error("End game exhaustiveCheck fail")}return null}set resultString(e){if(null!=e&&0<e.length)if(this.gameEnd){if(e!=this.resultString)throw new Error(`Incorrect end game value issued: ${e} correct value `+this.resultString)}else switch(e){case"0 - 3":if("w"!=this.turn)throw new Error("Incorrect resign turn: "+e);this.resign=!0;break;case"3 - 0":if("b"!=this.turn)throw new Error("Incorrect resign turn: "+e);this.resign=!0;break;case"1 - 1":this.draw=!0;break;case"null":break;default:throw new Error("Incorrect end game value issued: "+e)}}get enPassantCaptureCoordString(){return this._enpassantCaptureCoordString}get preMoveHeuristic(){return this.currentHeuristic}*pieceList(){for(const e of this.whitePieces())yield e.uncapitalizedSymbolPositionString;for(const i of this.blackPieces())yield i.uncapitalizedSymbolPositionString}*threatenedPieceStringPositions(){var e="w"==this.turn?this.whitePiecePositions():this.blackPiecePositions(),i=this.turn;for(const t of e)this.isThreatened(t,i)&&(yield PositionHelper.toString(t))}*threatsPieceStringPositions(){var e="w"==this.turn?this.blackPiecePositions():this.whitePiecePositions(),i=this.turn;for(const t of e)this.hasThreat(t,i)&&(yield PositionHelper.toString(t));var e=this.specialPawnCapture;null!=e&&(e.isScornfulCapturable()?yield PositionHelper.toString(e.capturablePiece.position):e.isEnPassantCapturable()&&(e=e.capturablePiece.position,this.isThreatened(e,i))&&(yield PositionHelper.toString(e)))}doMove(e,i,t){try{assertCondition(this._top==this._moves.length-1,"push the moves over the last one");var s,o,n=PositionHelper.parse(e),r=PositionHelper.parse(i),a=this.getPiece(n),l=(assertCondition(null!=a,`piece on ${e} position`),assertCondition(null==t||a.symbol==t,t+" is the piece on "+n),assertCondition(a.canMoveTo(this,r),`Piece ${a.symbol} at ${a.position?.toString()} move to `+r.toString()),{piece:a.key,pos:n,moveTo:r}),c=this.getPiece(r);null!=c?(assertCondition(a.color!=c.color&&a.canCaptureOn(this,r),`Piece ${a.symbol} at ${a.position?.toString()} capture on `+r.toString()),s=cspty.isPawn(a)&&null!=this.specialPawnCapture&&this.specialPawnCapture.isScornfulCapturable()&&this.specialPawnCapture.isScorned(a,r),l.captured=c.key,l.special=s?r:void 0,this._enpassantCaptureCoordString=null):null!=this.specialPawnCapture&&(cspty.isPawn(a)||cspty.isAlmogaver(a)||this.isGrand&&cspty.isElephant(a))&&this.specialPawnCapture.isEnPassantCapturable()&&this.specialPawnCapture.isEnPassantCapture(r,a)?(o=this.specialPawnCapture.capturablePiece,l.captured=o.key,l.special=[o.position[0],o.position[1]],this._enpassantCaptureCoordString=PositionHelper.toString(l.special)):this._enpassantCaptureCoordString=null,this.pushMove(l)}catch(e){throw e instanceof Error&&"Error"==e.name&&(e.name="DoMove"),e}}doPromotePawn(e,i,t){try{assertCondition(this._top==this._moves.length-1,"push the moves over the last one");var s,o,n,r=PositionHelper.parse(e),a=PositionHelper.parse(i),l=this.getPiece(r),c=(assertCondition(null!=l&&cspty.isPawn(l),`pawn on ${e} position`),assertCondition(PositionHelper.isPromotionHex(a,l.color),"Promotion hex"),PositionHelper.hexColor(a)),u=super.findRegeinablePiece(l.color,t,c),p={piece:l.key,prPos:a,promoted:u};PositionHelper.equals(r,a)||(p.pos=r,p.moveTo=a,null!=(s=this.getPiece(a))?(assertCondition(l.color!=s.color&&l.canCaptureOn(this,a),`Pawn at ${u.position?.toString()} capture on `+a.toString()),o=cspty.isPawn(u)&&null!=this.specialPawnCapture&&this.specialPawnCapture.isScornfulCapturable()&&this.specialPawnCapture.isScorned(u,a),p.captured=s.key,p.special=o?a:void 0,this._enpassantCaptureCoordString=null):null!=this.specialPawnCapture&&this.specialPawnCapture.isEnPassantCapturable()&&this.specialPawnCapture.isEnPassantCapture(a,l)?(n=this.specialPawnCapture.capturablePiece,p.captured=n.key,p.special=[n.position[0],n.position[1]],this._enpassantCaptureCoordString=PositionHelper.toString(p.special)):this._enpassantCaptureCoordString=null),this.pushMove(p)}catch(e){throw e instanceof Error&&"Error"==e.name&&(e.name="DoPromotePawn"),e}}doCastling(e){try{this.isGrand?assertCondition(csty.isGrandCastlingString(e),"castling move string"):assertCondition(csty.isCastlingString(e),"castling move string");var i,t,s=super.turnKing,o=this.turn,n=e.split("-"),r="R"==n[0][2]?"K":n[0][2],a=n[1][0],l=n[1][1],c=3==n[1].length&&"O"!=n[1][2]?n[1][2]:void 0,u=!(3<n[1].length)&&(3==n[1].length&&"O"==n[1][2]||void 0),p=Game.kingCastlingPosition(s.color,a),h=(assertCondition("K"==r||"D"==r,r+" must be King (K) side or Queen (D) side"),this.castlingRookPosition(a,l,r,u)),P=this.getPiece("K"==r?PositionHelper.initialKingSideRookPosition(o,this.isGrand):PositionHelper.initialQueenSideRookPosition(o,this.isGrand)),g=(assertCondition(!s.moved,"King hasn't been moved"),assertNonNullish(p,"king destination hex"),assertCondition(null==this.hasPiece(p),"empty king destination hex"),assertCondition(!this.isThreatened(p,s.color),"Not threated king destination hex"),assertNonNullish(P,"castling rook piece"),assertCondition(cspty.isRook(P),"castling rook"),assertCondition(!P.moved,"castling rook's not been moved"),assertCondition(P.canMoveTo(this,h,!1),"castling rook movement"),{side:n[0][2],col:a,rPos:h,kRook:"K"==r?P.key:void 0,qRook:"D"==r?P.key:void 0});void 0!==c&&(i=this.castlingRookPosition(a,c,"D",u),t=this.getPiece(PositionHelper.initialQueenSideRookPosition(o,this.isGrand)),assertNonNullish(t,"double castling queen side rook"),assertCondition(cspty.isRook(t),"castling queen rook"),assertCondition(!t.moved,"castling queen rook's not been moved"),assertCondition(t.canMoveTo(this,i,!1),"castling queen rook movement"),g.r2Pos=i,g.qRook=t.key),this._enpassantCaptureCoordString=null,this.pushMove(g)}catch(e){throw e instanceof Error&&"Error"==e.name&&(e.name="doCastling"),e}}popMove(){if(1<this._moves.length||0==this._top&&"…"!=this._moves[0].move){assertCondition("…"!=this._moves[this._top].move),this._top--;var e=this._moves.pop();if(assertCondition("…"!=e.move),super.nextTurn(),this._draw=!1,this._resigned=!1,this._mate=!1,this._stalemate=!1,this.undoMove(e.move,e.turn),void 0!==e.castlingStatus&&csmv.isMoveInfo(e.move)){var i=cscnv.getPieceKeyName(e.move.piece);if("R"===i||"K"===i){var t=this.pieceByKey(e.move.piece);switch(i){case"R":t.setCastlingStatus(e.castlingStatus,this.isGrand);break;case"K":t.castlingStatus=e.castlingStatus}}}void 0===e.specialCapture?this.specialPawnCapture=null:this.specialPawnCapture=PawnSpecialCaptureStatus.parse(this,e.specialCapture),this.isAwaitingPromotion&&(csmv.isMoveInfo(e.move)&&"P"==cscnv.getPieceKeyName(e.move.piece)||csmv.isPromotionInfo(e.move))&&this.computeAwaitingPromotion("b"==e.turn?"w":"b"),"b"===this.turn&&this._moveNumber--,void 0===e.iHMClock?this.halfmoveClock--:this.halfmoveClock=0,super.prepareCurrentTurn(),super.computeHeuristic(this.turn,this._moveNumber,!0,this.currentHeuristic)}}*castlingMoves(e,i){}*castlingStrMoves(e,o){var i=PositionHelper.initialQueenSideRookPosition(e,this.isGrand),t=PositionHelper.initialKingSideRookPosition(e,this.isGrand),n=this.getPiece(i),s=this.getPiece(t);if(null!=s&&!s.moved)for(const u of cscnv.orthogonalDirections()){var r=PositionHelper.orthogonalStep(o,u);if(null!=r&&s.canMoveTo(this,r,!1)){let s="KRK-"+cscnv.columnFromIndex(o[0])+cscnv.columnFromIndex(r[0]);if(9==o[0]&&10==r[0]&&(a=r[1]-t[1],s+=2==a||-2==a?"O":"OO"),yield s,null!=n&&!n.moved){let i,t;if(o[0]==r[0]){i=r[0]+1,t=o[1]>r[1]?r[1]+1:o[1]+1;var a=[i,t];let e;(e=n.canMoveTo(this,a,!1))||(a[0]=r[0]-1,e=n.canMoveTo(this,a,!1)),e&&(yield s="KRR-"+cscnv.columnFromIndex(o[0])+cscnv.columnFromIndex(r[0])+cscnv.columnFromIndex(a[0]))}else{i=r[0],t=o[1]>r[1]?r[1]+2:r[1]-2;var l=[i,t];n.canMoveTo(this,l,!1)&&(yield s="KRR-"+cscnv.columnFromIndex(o[0])+cscnv.columnFromIndex(r[0])+cscnv.columnFromIndex(l[0])),l[0]=o[0],l[1]=o[1]>r[1]?o[1]-2:o[1]+2,n.canMoveTo(this,l,!1)&&(yield s="KRR-"+cscnv.columnFromIndex(o[0])+cscnv.columnFromIndex(r[0])+cscnv.columnFromIndex(l[0]))}}}}if(null!=n&&!n.moved)for(const p of cscnv.orthogonalDirections()){var c=PositionHelper.orthogonalStep(o,p);null!=c&&n.canMoveTo(this,c,!1)&&(yield"KRD-"+cscnv.columnFromIndex(o[0])+cscnv.columnFromIndex(c[0]))}}castlingKingPosition(e){assertCondition(csty.isCastlingColumn(e),`Column: ${e} has to be a king castling column`);var i=super.turnKing;return i.moved||(e=Game.kingCastlingPosition(i.color,e),null!=this.hasPiece(e))||this.isThreatened(e,i.color)?null:e}castlingRookPosition(e,i,t,s){var o=this.turn,n="K"==t?PositionHelper.initialKingSideRookPosition(o,this.isGrand):PositionHelper.initialQueenSideRookPosition(o,this.isGrand),r=(assertCondition(csty.isCastlingColumn(e),`King column: ${e} has to be a king castling column`),Game.rookCastleMove(e,i,o,t,this.isGrand));let a=PositionHelper.orthogonalStep(n,r);if("ColumnUp"==r||"ColumnDown"==r)return a=void 0===s&&!this.isGrand||void 0!==s&&!s?PositionHelper.orthogonalStep(a,r):a;for(var l=cscnv.toColumnIndex(i);a[0]!=l;)a=PositionHelper.orthogonalStep(a,r);return a}playerCastlingPositionStatus(e){var i=super.turnKing;return assertCondition(csty.isCastlingColumn(e),`Column: ${e} has to be a king castling column`),i.moved?null:(e=("w"==this.turn?Game.whiteKingCastlingMove:Game.blackKingCastlingMove)[e],[e=PositionHelper.knightJump(i.position,e),null!=this.hasPiece(e)?"occupied":this.isThreatened(e,i.color)?"threated":""])}get castlingStatus(){var e=this.wKing.getCastlingStatus(this),i=this.bKing.getCastlingStatus(this).toLowerCase();return"-"==e&&"-"==i?"-":"-"==e?i:"-"==i?e:e+i}playerCastlingStatus(){return super.turnKing.getCastlingStatus(this)}get topHalfMove(){return this._top}moves(e){return Object.freeze(this._moves.slice(e))}strMoves(){return Game.movesToString(this._moves)}moveBottom(){for(;1<this._top||1==this._top&&"…"!=this._moves[0].move;){var e=this._moves[this._top--];assertCondition("…"!=e.move),this.undoMove(e.move,e.turn)}}moveBackward(){var e;(1<this._top||1==this._top&&"…"!=this._moves[0].move)&&(e=this._moves[this._top--],assertCondition("…"!=e.move),this.undoMove(e.move,e.turn))}moveForward(){var e;this._top<this._moves.length-1&&(e=this._moves[++this._top],assertCondition("…"!=e.move),this.applyMove(e.move,e.turn))}moveTop(){for(;this._top<this._moves.length-1;){var e=this._moves[++this._top];assertCondition("…"!=e.move),this.applyMove(e.move,e.turn)}}get topMoveId(){return 0<=this._top?csmv.undoStatusId(this._moves[this._top]):""}get movesJSON(){return JSON.stringify(this._moves)}restoreMovesJSON(e){e=e.replace(/"initHalfMoveClock":/g,'"iHMClock":').replace(/"specialPawnCapture":/g,'"specialCapture":'),e=JSON.parse(e);this.restoreMoves(e)}restoreMoves(e){for(;0<e.length;){var i=e.shift();assertCondition("…"!=i.move),this.pushMove(i.move)}this.initGame()}get valuePDTL(){return this.piecePositionsPDTL+" "+this.turn+" "+this.castlingStatus+" "+(this.specialPawnCapture?.toString()??"-")+" "+this.halfmoveClock.toString()+" "+(this.fixedNumbering?this._moveNumber.toString():"-")}get piecePositionsPDTL(){let e="/";for(let s=28;0<=s;s--){var o=s%2==0,n=s<=5?7-s:23<=s?s-21:o?1:0,r=s<=5?s+7:23<=s?35-s:o?13:14;let i="",t=0;for(let e=n;e<=r;e+=2){var a=this.getPiece([e,s]);null!=a?(0<t&&(i+=t.toString()),i+=a.uncapitalizedSymbol,t=0):t++}0<i.length&&(e+=s.toString()+":"+i,0<t&&(e+=t.toString()),e+="/")}return e}loadPDTL(e){try{assertCondition(null!=e,"Not empty PDTL"),assertCondition(12<e.trim().length,"Enough PDTL length");var i=e.split(" "),t=(assertCondition(2<=i.length,"Piece positions and turn are mandatory"),assertCondition(10<=i[0].length,"Piece positions string"),assertCondition(csty.isTurn(i[1]),"Correct turn"),i[1]),[s,o]=(super.resetGame(t),this._moves.length=0,this._top=-1,Board.splitCastlingStatus(i[2]));if(this.restorePDTLPositions(i[0],s,o),this.halfmoveClock=csty.isNumber(Number(i[4]))?Number(i[4]):0,isNaN(Number(i[4]))&&null!=i[4]&&"-"!==i[4])throw new TypeError("Invalid halfmove clock value");if(this._moveNumber=csty.isNumber(Number(i[5]))?Number(i[5]):1,isNaN(Number(i[5]))){if(null!=i[5]&&"-"!=i[5])throw new TypeError("Invalid move number");this.fixedNumbering=!1}else this.fixedNumbering=!0;super.specialPawnCapture=PawnSpecialCaptureStatus.parse(this,i[3]),this.initGame()}catch(e){throw e instanceof Error&&"Error"==e.name&&(e.name="PDTL"),e}}restorePDTLPositions(e,i,t){assertCondition(10<=e.length&&"/"==e[0]&&"/"==e[e.length-1],"Valid PDTL string positions: "+e);var s,o=[],n=[],r=[];for(s of e.split("/"))if(0<s.length){if(s.startsWith(":")||s.endsWith(":")||1!=(s.match(/:/g)||[]).length)throw new Error("Incorrect line number issued: "+s);var[a,l]=s.split(":"),c=Number(a);if(!(!isNaN(c)&&0<=c&&c<=28))throw new Error("Incorrect line issued: "+a);{var u=0<=c&&c<6?7+c:c<=22?c%2==0?13:14:35-c;let e=0<=c&&c<6?7-c:c<=22?c%2==0?1:0:c-21;for(const d of l){if(e>u)throw new Error("Incorrect PDTL line content");var p=Number(d);if(isNaN(p)){var h=csty.isPieceName(d)?d:Game.convertPieceAliases(d.toUpperCase()),P=d.toUpperCase()==d?"w":"b";if("K"==h)if("w"==P){if(null!=this.wKing.position)throw new Error("Can't place two White Kings");if(this.wKing.setPositionTo([e,c]),null!=this.hasPiece(this.wKing.position))throw new Error("Can't place White King on the place used by another piece");this.addPiece(this.wKing)}else{if(null!=this.bKing.position)throw new Error("Can't place two Black Kings");if(this.bKing.setPositionTo([e,c]),null!=this.hasPiece(this.bKing.position))throw new Error("Can't place Black King on the place used by another piece");this.addPiece(this.bKing)}else{h=super.createPiece(h,P,cscnv.columnFromIndex(e),c);cspty.isRook(h)?o.push(h):cspty.isPawn(h)&&null!=h.awaitingPromotion&&super.setAwaitingPromotion(h.color),("w"==P?n:r).push(h)}e+=2}else e+=p<<1}}}if(null==this.wKing.position)throw new Error("There must be a White King");if(null==this.bKing.position)throw new Error("There must be a Black King");var g,v=(e,t)=>e.reduce((e,i)=>i.symbol===t?e+1:e,0);for(g of["w","b"]){var w="w"==g?n:r;let e=v(w,"D");if(1<e)throw new Error(`Too many ${g} Queens`);if(0==e&&this.addRegainablePiece(new Queen(g)),1<(e=v(w,"V")))throw new Error(`Too many ${g} Wyverns`);if(0==e&&this.addRegainablePiece(new Wyvern(g)),2<(e=v(w,"R")))throw new Error(`Too many ${g} Rooks`);for(;e<2;)this.addRegainablePiece(new Rook(g,this.isGrand,e)),e++;if(2<(e=v(w,"G")))throw new Error(`Too many ${g} Pegasus`);for(;e<2;)this.addRegainablePiece(new Pegasus(g,e)),e++;if(e=v(w,"N"),!this.isGrand&&2<e||this.isGrand&&4<e)throw new Error(`Too many ${g} Knights`);for(;e<2;)this.addRegainablePiece(new Knight(g,e)),e++;if(3<(e=v(w,"J")))throw new Error(`Too many ${g} Bishops`);var m={White:0,Black:0,Color:0};for(const b of w.filter(e=>cspty.isBishop(e)))m[b.hexesColor]+=1;if(1<m.White||1<m.Black||1<m.Color)throw new Error(`Too many ${g} Bishops on same color hexes`);0==m.White&&this.addRegainablePiece(new Bishop(g,"White")),0==m.Black&&this.addRegainablePiece(new Bishop(g,"Black")),0==m.Color&&this.addRegainablePiece(new Bishop(g,"Color"))}this.wKing.castlingStatus=i,this.bKing.castlingStatus=t;for(const C of o)C.setCastlingStatus("w"==C.color?i:t,this.isGrand)}applyMoveSq(e){try{assertCondition(this._top==this._moves.length-1,"push the moves over the last one");var i="1"!=(e=e.replaceAll(" ","").replace(/\n\n+/g,"\n").replace(/^[\s\n]+|[\s\n]+$/gm,""))[0]||"?"!=e[1],t=(e=e.replace(/^1\?/,"1.").replace(/^1....,/,"1.…"),new RegExp(/^(\d+\..*\n)*\d+\..*$/)),s=(assertCondition(t.test(e),"numbered lines"),e.split(/\r?\n/)),o=this._moveNumber;this.fixedNumbering=this.fixedNumbering&&1!=o||i;for(let e=0;e<s.length;e++){var n=s[e].split(/[.,]\s?/),r=parseInt(n[0]);assertCondition(r.toString()==n[0],`Line number of "${s[e]}"`),assertCondition(this._moveNumber==(i?r:o+r-1),`Expected move number ${this._moveNumber} on move `+(e+1)),1==r?(assertCondition(3==n.length,"first move must be a numbered pair of moves; white move can be an ellipsis: "+s[0]),"…"==n[1]?assertCondition("b"==this.turn,"It begins on black's turn"):(assertCondition("w"==this.turn,"It begins on white's turn"),this.applyStringMove(n[1])),this.applyStringMove(n[2])):e==s.length-1?(assertCondition(2<=n.length&&n.length<=3,"last move "+s[e]),this.applyStringMove(n[1]),3==n.length&&this.applyStringMove(n[2])):(assertCondition(3==n.length,"numbered pair of moves: "+s[e]),this.applyStringMove(n[1]),this.applyStringMove(n[2]))}}catch(e){throw console.log("applyMoveSq error: ",e),e}}applyStringMove(e){var i,t,s,o,n,r=(e,i=0)=>{let t=i;for(;t<e.length;){var s=e.charCodeAt(t);if(!(48<=s&&s<58||65<=s&&s<91||97<=s&&s<123))return t;t++}return t},a=e=>PositionHelper.isValidPosition(PositionHelper.parse(e));assertCondition(this._top==this._moves.length-1,"push the move over the last one"),assertCondition(4<=e.length,"Moviment length must be at least of 4 chars"),e.startsWith("KR")&&"-"==e[3]||"–"==e[3]?(o="–"==e[3]?e.replace("–","-"):e,this.isGrand?assertCondition(csty.isGrandCastlingString(o),"grand castling move: "+o):assertCondition(csty.isCastlingString(o),"castling move: "+o),this.doCastling(o)):(o=r(e=e.replace("x","×")),i=csty.isPieceName(e[0])&&csty.isColumn(e[1])?e[0]:"P",t=e.slice("P"==i?0:1,o),assertCondition(o<e.length-1,"Moviment divided into parts"),assertCondition(a(t),"Initial hex"),s="@"==e.charAt(o)&&"@"==e.charAt(o+1)?"@@":e.charAt(o),assertCondition(["-","–","×","@","@@","="].includes(s),`valid origin&destiny separator "${s}"`),"="==s?(n=e[o+1],assertCondition("P"==i,"Promoting a pawn"),this.doPromotePawn(t,t,n)):(assertCondition(o<e.length-2,"Movement destination"),r=r(e,n=o+s.length),o=csty.isPieceName(e[n])&&csty.isColumn(e[n+1])?e[n]:void 0,n=e.slice(void 0===o?n:n+1,r),assertCondition(a(n),"Destination hex"),assertCondition(void 0===o||"-"!=s&&"–"!=s,"Captured piece"),r<e.length&&"="==e[r]?(a=e[r+1],assertCondition("P"==i,"Promoting a pawn"),this.doPromotePawn(t,n,a)):this.doMove(t,n,i)))}pushMove(e){var i={n:this._moveNumber,turn:this.turn,move:e,fixedNumbering:1!=this._moveNumber||this.fixedNumbering?void 0:"?",iHMClock:0==this.halfmoveClock?"1":void 0,specialCapture:null==this.specialPawnCapture?void 0:this.specialPawnCapture.toString(),castlingStatus:csmv.isMoveInfo(e)&&0<=["K","R"].indexOf(cscnv.getPieceKeyName(e.piece))?this.playerCastlingStatus():void 0},e=(this.applyMove(e,this.turn),super.nextTurn(),"w"===this.turn&&this._moveNumber++,csmv.isMoveInfo(e)&&["P","M"].includes(cscnv.getPieceKeyName(e.piece))||csmv.isCaptureInfo(e)||csmv.isPromotionInfo(e)?this.halfmoveClock=0:this.halfmoveClock++,super.prepareCurrentTurn(),super.isMoveableTurn());let t=void 0,s=void 0;if(e){if(200<=this.halfmoveClock||super.insuficientMaterial())this._draw=!0,t="draw";else if(this.checked)if(this.isKnightOrCloseCheck)s="+^";else if(this.isSingleCheck)s="+∞";else{if(!this.isDoubleCheck)throw new Error("never: exhaused check options");s="++"}}else t=this.checked?(this._mate=!0,"mate"):(this._stalemate=!0,"stalemate");this._top<0&&"b"==i.turn&&(this._moves.push({n:i.n,turn:"w",move:"…"}),this._top++);i=csmv.promoteUndoStatus(i,t,s);this._moves.push(i),this._top++,super.computeHeuristic(this.turn,this._moveNumber,e,this.currentHeuristic)}applyMove(e,i){var t;csmv.isCastlingInfo(e)?this.applyCastling(e,i):(i=this.pieceByKey(e.piece),csmv.isMoveInfo(e)&&(t=e.moveTo,csmv.isCaptureInfo(e)&&super.capturePiece(this.pieceByKey(e.captured)),super.movePiece(i,t[0],t[1]),!csmv.isPromotionInfo(e))||super.promotePawn(i,this.pieceByKey(e.promoted)))}applyCastling(e,i){var i="w"==i?this.wKing:this.bKing,t=Game.kingCastlingPosition(i.color,e.col);switch(e.side){case"K":super.movePiece(this.pieceByKey(e.kRook),e.rPos[0],e.rPos[1]);break;case"D":super.movePiece(this.pieceByKey(e.qRook),e.rPos[0],e.rPos[1]);break;case"R":super.movePiece(this.pieceByKey(e.kRook),e.rPos[0],e.rPos[1]),super.movePiece(this.pieceByKey(e.qRook),e.r2Pos[0],e.r2Pos[1])}super.movePiece(i,t[0],t[1])}undoMove(e,i){var t;csmv.isCastlingInfo(e)?this.undoCastling(e,i):(i=this.pieceByKey(e.piece),csmv.isMoveInfo(e)?(csmv.isPromotionInfo(e)&&super.undoPromotePawn(i,this.pieceByKey(e.promoted)),super.undoPieceMove(i,e.pos[0],e.pos[1]),csmv.isCaptureInfo(e)&&(t=void 0===e.special?e.moveTo:e.special,super.undoCapturePiece(this.pieceByKey(e.captured),t[0],t[1]))):super.undoPromotePawn(i,this.pieceByKey(e.promoted)))}undoCastling(e,i){var t=this.isGrand,s="w"==i?this.wKing:this.bKing,o="w"==i?PositionHelper.whiteKingInitPosition:PositionHelper.blackKingInitPosition,n="D"==e.side?PositionHelper.initialQueenSideRookPosition(i,t):PositionHelper.initialKingSideRookPosition(i,t),r=this.pieceByKey("D"==e.side?e.qRook:e.kRook);console.log(e),assertNonNullish(r),super.undoPieceMove(s,o[0],o[1]),super.undoPieceMove(r,n[0],n[1]),s.castlingStatus="RKR",r.setCastlingStatus("RKR",t),"R"==e.side&&(o=this.pieceByKey(e.qRook),n=PositionHelper.initialQueenSideRookPosition(i,t),super.undoPieceMove(o,n[0],n[1]),o.setCastlingStatus("RKR",t))}fillDefaultPositions(){this.wKing.setToInitialPosition(),this.addPiece(this.wKing),this.bKing.setToInitialPosition(),this.addPiece(this.bKing),super.createPiece("G","w","D",2),super.createPiece("E","w","D",4),super.createPiece("D","w","E",1),super.createPiece("N","w","E",3),super.createPiece("E","w","E",5),super.createPiece("V","w","F",0),super.createPiece("J","w","F",2),super.createPiece("J","w","F",4),super.createPiece("J","w","F",6),super.createPiece("N","w","G",3),super.createPiece("E","w","G",5),super.createPiece("G","w","H",2),super.createPiece("E","w","H",4),super.createPiece("P","w","D",6),super.createPiece("P","w","E",7),super.createPiece("P","w","F",8),super.createPiece("P","w","G",7),super.createPiece("P","w","H",6),this.isGrand?(super.createPiece("P","w","P",7),super.createPiece("P","w","T",6),super.createPiece("M","w","A",7),super.createPiece("P","w","A",9),super.createPiece("P","w","B",6),super.createPiece("R","w","B",4),super.createPiece("N","w","C",3),super.createPiece("M","w","C",5),super.createPiece("P","w","C",7),super.createPiece("N","w","I",3),super.createPiece("M","w","I",5),super.createPiece("P","w","I",7),super.createPiece("P","w","K",6),super.createPiece("R","w","K",4),super.createPiece("M","w","L",7),super.createPiece("P","w","L",9),super.createPiece("P","w","X",6),super.createPiece("P","w","Z",7)):(super.createPiece("P","w","A",5),super.createPiece("P","w","B",4),super.createPiece("R","w","C",3),super.createPiece("P","w","C",5),super.createPiece("R","w","I",3),super.createPiece("P","w","I",5),super.createPiece("P","w","K",4),super.createPiece("P","w","L",5)),super.createPiece("G","b","D",26),super.createPiece("E","b","D",24),super.createPiece("D","b","E",27),super.createPiece("N","b","E",25),super.createPiece("E","b","E",23),super.createPiece("V","b","F",28),super.createPiece("J","b","F",26),super.createPiece("J","b","F",24),super.createPiece("J","b","F",22),super.createPiece("N","b","G",25),super.createPiece("E","b","G",23),super.createPiece("G","b","H",26),super.createPiece("E","b","H",24),super.createPiece("P","b","D",22),super.createPiece("P","b","E",21),super.createPiece("P","b","F",20),super.createPiece("P","b","G",21),super.createPiece("P","b","H",22),this.isGrand?(super.createPiece("P","b","P",21),super.createPiece("P","b","T",22),super.createPiece("M","b","A",21),super.createPiece("P","b","A",19),super.createPiece("P","b","B",22),super.createPiece("R","b","B",24),super.createPiece("N","b","C",25),super.createPiece("M","b","C",23),super.createPiece("P","b","C",21),super.createPiece("N","b","I",25),super.createPiece("M","b","I",23),super.createPiece("P","b","I",21),super.createPiece("R","b","K",24),super.createPiece("P","b","K",22),super.createPiece("M","b","L",21),super.createPiece("P","b","L",19),super.createPiece("P","b","X",22),super.createPiece("P","b","Z",21)):(super.createPiece("P","b","A",23),super.createPiece("P","b","B",24),super.createPiece("R","b","C",25),super.createPiece("P","b","C",23),super.createPiece("R","b","I",25),super.createPiece("P","b","I",23),super.createPiece("P","b","K",24),super.createPiece("P","b","L",23))}initGame(){super.prepareGame(),this._mate=!1,this._stalemate=!1,this._resigned=!1,this._draw=!1;var e=super.isMoveableTurn();e?200<=this.halfmoveClock&&(this._draw=!0):this.checked?this._mate=!0:this._stalemate=!0,super.computeHeuristic(this.turn,this._moveNumber,e,this.currentHeuristic)}}export{PositionHelper,cscnv,cspty,csmv,round2hundredths,PawnSpecialCaptureStatus,ScornfulCapturable,EnPassantCapturable,Board,Game};