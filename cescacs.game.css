body{
    background: #333;
    height: 100vh;
    width: 100vw;
}
dialog::backdrop {
    background: linear-gradient(90deg, rgb(198, 218, 238), rgb(29, 25, 27));
    mix-blend-mode: darken;
}
#toggler{
    /* ALWAYS KEEPING THE TOGGLER OR THE CHECKBOX ON TOP OF EVERYTHING :  */
      z-index:10;
      position: absolute;
      top: 0;
      right: 0;
      height: 50px;
      width: 50px;
      cursor: pointer;
      opacity: 0;
  }

.hamburger{
    z-index:9;
    position: absolute;
    top: 0;
    right: 0;
    height: 40px;
    width: 40px;
    padding: 0.6rem;
  
  /* FOR DISPLAYING EVERY ELEMENT IN THE CENTER : */
  
    /* display: flex; depending on screen */
    align-items: center;
    justify-content: center;
}
/* CREATING THE MIDDLE LINE OF THE HAMBURGER : */

.hamburger > div{
    position: relative;
    top: 0;
    left: 0;
    background: wheat;
    pointer-events: none;
    height: 2px;
    width: 60%;
    transition: all 0.4s ease;
}

/* CREATING THE TOP AND BOTTOM LINES : 
TOP AT -10PX ABOVE THE MIDDLE ONE AND BOTTOM ONE IS 10PX BELOW THE MIDDLE: */

.hamburger > div::before,
.hamburger > div::after{
    content: '';
    position: absolute;
    background: wheat;
    width: 100%;
    height: 2px;
    transition: all  0.4s ease;
}

.hamburger > div::before{
    top: -10px;
}

.hamburger > div::after{
    top: 10px;
}

/* IF THE TOGGLER IS IN ITS CHECKED STATE, THEN SETTING THE BACKGROUND OF THE MIDDLE LAYER TO COMPLETE BLACK AND OPAQUE :  */

#toggler:checked + .hamburger > div{
    background: rgba(0,0,0,0);
}

#toggler:checked + .hamburger > div::before{
    top: 0;
    transform: rotate(45deg);
    background: black;
}

/* AND ROTATING THE TOP AND BOTTOM LINES :  */

#toggler:checked + .hamburger > div::after{
    top: 0;
    transform: rotate(135deg);
    background: black;
}

.svg-content { 
            display: inline-block;
            position: relative;
            width: 100%;
            /* padding-bottom: 100%; */
            margin: 0px; padding: 0px;
            vertical-align: middle; 
            overflow: hidden; 
        }       

.btn-group button {
    border: 1px solid green;
    /* Green border */
    color: white;
    /* White text */
    cursor: pointer;
    /* Pointer/hand icon */
    display: block;
    /* Make the buttons appear below each other */
}

.btn-group button.fullbutton {
    width: 14em;
}

.btn-group button.halfbutton {
    width: 7em;
    float: left;
}

.btn-group button.stacked {
    border-bottom: none;
}

.btn-subgroup button.halfbutton:nth-last-child(odd) {
    border-left: none;
    /* Prevent double borders */
}

/* The Close Button */
.close {
    color: #aaa;
    float: right;
    font-size: 28px;
    font-weight: bold;
}

.close:hover,
.close:focus {
    color: black;
    text-decoration: none;
    cursor: pointer;
}

.cescacs-title {
    font-family: 'Brush Script MT', cursive;
}

.grid2xContainer {
    display: grid;
    background-color: #2196F3;
    width: 100%;
    height: 39ex;
    overflow: auto;
    grid-template-columns: 1.2fr 1fr;
    grid-auto-rows: 3.85ex;
    grid-gap: 0.25em;
    gap: 0.25em;
    padding: 4px;
}

.grid2xContainer>div {
    background-color: rgba(255, 255, 255, 0.8);
    text-align: left;
    font-size: smaller;
    padding: 5px 0 5px 5px;
}

.grid2xContainer>div:hover,
.grid2xContainer>div.selected {
    background-color: coral;
}